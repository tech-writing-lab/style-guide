[
  {
    "objectID": "README.zh-cn.html",
    "href": "README.zh-cn.html",
    "title": "谷歌开发者文档风格指南",
    "section": "",
    "text": "Use the following links for specific language translations of this README file:\n\nEnglish README\nChinese (Traditional) README\nChinese (Simplified) README\n\n\n本文档编译自 谷歌开发者文档风格指南。\n要开始阅读风格指南，请使用以下链接查看特定语言的翻译：\n\n英语\n繁体中文 (台湾)\n\n\n\n翻译流程分为两个步骤。首先必须把英文网页转存为 Markdown 文件，并完成校对。一旦有了原文的 Markdown 文件，第二步就简单多了，只需利用 AI 工具将英文版的 Markdown 文件翻译成各个语言。\n\n\n把英文网页转存为 Markdown 文件的过程比较费工夫，原因有二。\n首先，在抓取网页时，必须排除一些与主要内容无关的元素和文字。主要的方法有两种：\n\n手动将 HTML 页面转换为 Markdown 文件：将原始网页的内容复制到剪贴板，然后通过 Markdown Paste 扩展功能粘贴到 VS Code 编辑器中。\n编写 Python 脚本来抓取网页内容并转存为 Markdown：详见 tools/html2md。\n\n无论使用哪种方法，之后仍然免不了需要人工校对。\n另一个棘手的问题是，原文中有一些特殊排版是通过 HTML 实现的，而 Markdown 没有直接对应的语法。\n比如，在表格中使用列表项，以及 HTML 的 description list（dl、dt、和 dd 标签）。在转换为 Markdown 格式的过程中，如果遇到这类棘手的排版格式，可能需要进行改写甚至删减。\n\n\n\n原文的 Markdown 文件存放在 content/en/ 目录下。翻译成其他语言时，可以将该文件夹下的文件全部复制到 content/[language-code] 文件夹（例如 content/zh-tw），然后使用工具来翻译这些文件。\n\n\n\n\n目前支持的语言代码如下表所示：\n\n\n\n语言\n代码\n\n\n\n\n英语\nen\n\n\n繁体中文 (台湾)\nzh-tw\n\n\n\n每个语言代码都代表 /content 文件夹下的一个子文件夹。例如，繁体中文的翻译位于 /content/zh-tw 文件夹中。\n\n\n\n如果你想帮助改进这个项目，欢迎 创建 issues 和拉取请求。\n\n\n\n知识共享署名 4.0 国际许可协议 (CC BY 4.0)"
  },
  {
    "objectID": "README.zh-cn.html#翻译是如何创建的",
    "href": "README.zh-cn.html#翻译是如何创建的",
    "title": "谷歌开发者文档风格指南",
    "section": "",
    "text": "翻译流程分为两个步骤。首先必须把英文网页转存为 Markdown 文件，并完成校对。一旦有了原文的 Markdown 文件，第二步就简单多了，只需利用 AI 工具将英文版的 Markdown 文件翻译成各个语言。\n\n\n把英文网页转存为 Markdown 文件的过程比较费工夫，原因有二。\n首先，在抓取网页时，必须排除一些与主要内容无关的元素和文字。主要的方法有两种：\n\n手动将 HTML 页面转换为 Markdown 文件：将原始网页的内容复制到剪贴板，然后通过 Markdown Paste 扩展功能粘贴到 VS Code 编辑器中。\n编写 Python 脚本来抓取网页内容并转存为 Markdown：详见 tools/html2md。\n\n无论使用哪种方法，之后仍然免不了需要人工校对。\n另一个棘手的问题是，原文中有一些特殊排版是通过 HTML 实现的，而 Markdown 没有直接对应的语法。\n比如，在表格中使用列表项，以及 HTML 的 description list（dl、dt、和 dd 标签）。在转换为 Markdown 格式的过程中，如果遇到这类棘手的排版格式，可能需要进行改写甚至删减。\n\n\n\n原文的 Markdown 文件存放在 content/en/ 目录下。翻译成其他语言时，可以将该文件夹下的文件全部复制到 content/[language-code] 文件夹（例如 content/zh-tw），然后使用工具来翻译这些文件。"
  },
  {
    "objectID": "README.zh-cn.html#支持的语言代码",
    "href": "README.zh-cn.html#支持的语言代码",
    "title": "谷歌开发者文档风格指南",
    "section": "",
    "text": "目前支持的语言代码如下表所示：\n\n\n\n语言\n代码\n\n\n\n\n英语\nen\n\n\n繁体中文 (台湾)\nzh-tw\n\n\n\n每个语言代码都代表 /content 文件夹下的一个子文件夹。例如，繁体中文的翻译位于 /content/zh-tw 文件夹中。"
  },
  {
    "objectID": "README.zh-cn.html#贡献",
    "href": "README.zh-cn.html#贡献",
    "title": "谷歌开发者文档风格指南",
    "section": "",
    "text": "如果你想帮助改进这个项目，欢迎 创建 issues 和拉取请求。"
  },
  {
    "objectID": "README.zh-cn.html#许可证",
    "href": "README.zh-cn.html#许可证",
    "title": "谷歌开发者文档风格指南",
    "section": "",
    "text": "知识共享署名 4.0 国际许可协议 (CC BY 4.0)"
  },
  {
    "objectID": "content/en/computer-interfaces/code-in-text.html",
    "href": "content/en/computer-interfaces/code-in-text.html",
    "title": "Code in text",
    "section": "",
    "text": "Source: https://developers.google.com/style/code-in-text\n\nIn ordinary text sentences (as opposed to, say, code samples), use code font to mark up most things that have anything to do with code. Code font helps to clarify for your reader which text refers to an entity in these ways:\n\nSignals to your reader that the text is meant to be entered verbatim.\nShows where the boundaries of the text to enter are.\nClearly separates the entity from surrounding text.\n\nTo mark text as code font, use the following:\n\nIn HTML, use the code element.\nIn Markdown, use backticks (`).\n\nFor information about choosing HTML or Markdown, see Markdown versus HTML.\nThis page explains how to format code in ordinary text sentences. For more information about formatting and explaining placeholders, command-line syntax, and code samples, see the following resources:\n\nFormatting placeholders\nDocumenting command-line syntax\nCode samples\nCode style guides\nFormatting a heading or title\nCode text preceding colon\n\n\n\nThe following table includes items that should be in code font, but it’s not an exhaustive list:\n(TODO: The table below needs review and edit.)\n\n\n\nItem\nRecommended\n\n\n\n\nAttribute names and values\nThe imageURL attribute contains the path for the image file that you can open in a browser—for example, https://www.example.com/images/product.jpg. You can create a VM instance using the e2-highcpu-16 machine type in the us-central1-a region.\n\n\nClass names\nThe SnapshotDiskOperator class includes the generate*snapshot*name method.\n\n\nCommand output\nThe output is similar to the following: Found sysprep-specialize-script-ps1 in metadata. … Finished running specialize scripts. (TODO: fix the format)\n\n\nCommand-line utility names, such as gcloud, gsutil, kubectl, and bq\nYou can use the kubectl tool to define a network policy.\n\n\nData types\nNested data is represented as a STRUCT type.\n\n\nDatabase elements (such as row and column names)\nThe query extracts the month, julianday, and dayofweek values from the datetime and timestamp columns.\n\n\nDefined (constant) values for an element or attribute\nThe constant city has the value \"San Francisco\".\n\n\nDNS record types\nCreate a DNS AAAA record in your public DNS zone that points to the IP address of the load balancer.\n\n\nElement names (HTML and XML)\nThe script and df-messenger HTML elements should be in the body element of your page. A C-CDA document contains a header and a body enclosed within a ClinicalDocument XML element. When you refer to an element name, don’t put angle brackets (&lt;&gt;) around the element name. (TODO: format)\n\n\nEnum (enumerator) names\nGenerated from the protobuf enum BOOL = 1;.\n\n\nEnvironment variable names\nSet the CHROME*REMOTE*DESKTOP*DEFAULT*DESKTOP_SIZES environment variable to include the resolution of your monitor.\n\n\nFilenames, filename extensions (if used), and paths\nOpen the pg_hba.conf file, which is typically in the /etc/postgresql/13/main directory.\n\n\nFolders and directories\nThe configuration information for the reader deployment is in the opentsdb-read.yaml.tpl file in the deployments folder of the guide repository.\n\n\nHTTP content-type values\nThe value of the Content-Type header value is required and must be set to application/fhir+json as defined in the FHIR specification.\n\n\nHTTP status codes\nThe HTTP 500 Internal Server Error status code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.\n\n\nHTTP verbs\nTo specify image content directly using a local image file, you can use a POST request.\n\n\nIAM role names\nGrant the new service account the roles/cloudfunctions.invoker IAM role for the trace function.\n\n\nIP addresses\nThe other nodes of the cluster should contact this host on IP address 10.10.10.10.\n\n\nLanguage keywords\nThe SQL statement contains the dataset table name after the FROM keyword in the format of PROJECT*NAME.DATASET.TABLE*NAME.\n\n\nMethod and function names\nThe ST*GEOPOINT function uses the longitude and latitude of the Colosseum in Rome. To fetch the status of the job, call the get*job_status method.\n\n\nNamespace aliases\nUse Config Sync to apply the package only to the default namespace.\n\n\nPlaceholder variables\nReplace SUBNETWORK_NAME with the resource ID of the private subnet that you want the blueprint to use.\n\n\nPort numbers\nEach member Pod must have a container that’s listening on TCP port 50000.\n\n\nQuery parameter names and values\nIf you want to return all contents under a directory, use the recursive=true query parameter with your request.\n\n\nStrings (such as URLs or domain names) that are used in commands and code\nIn IAM, a condition can specify a page that only Human Resources admins can access—for example, https://hr.example.com. The logID field includes the domain corpaudits.example.com.\n\n\nText input\nIn the Key name field, enter config-management.\n\n\nUI elements that are rendered based on previously entered text (such as a server or instance name)\nFrom the Server name list, select my-sql-cluster1. Click my-instance. If a code-formatted element appears in UI, add bold as well. For more information, see Code in UI elements.\n\n\n\nGenerally, don’t put quotation marks around code unless the quotation marks are part of the code.\n\n\n\nThe following table includes items that should not be in code font, but it’s not an exhaustive list. If you’re referring to any of these items as computer input or output, or as a code entity like an attribute or value, then use code font.\n\n(TODO: The table below needs review and edit.)\n\n\n\nItem\nRecommended\n\n\n\n\nDomain names\nThe test environment is designed only for standard application offerings from example.com.\n\n\nNames of products, services, and organizations\nExample Organization has current and former employees who use Google products such as Google Docs and Google Sheets.\n\n\nURLs that the reader is supposed to follow in a browser\nYou can find support at https://support.example.com. It’s usually best to format a URL as a link and use descriptive link text instead of exposing the URL itself. For more information, see Avoid URLs as link text.\n\n\n\n\n\n\nIf a UI element meets the requirements for code font, then use both code font and bold for that element.\n\n✅ Recommended: In the Network list, select my-net-2.\n✅ Recommended: In the Query results pane, the Store column is displayed.\n\n\n\n\nThe following list includes items that are sometimes in code font, but it’s not an exhaustive list.\n\nBoolean values. If you refer directly to a Boolean data type value (such as true or false, or 1 or 0), then format the value as code. If you refer to the evaluation of a Boolean condition as true or false, then refer to the evaluation in non-code font.\n\n✅ Recommended:\n\nIf the update succeeds, returns true.\nenableCertificateValidation: If true, validates the SSL certificate before proceeding. If false, trusts the certificate without validating it.\n\n\nCommand-line utility names. Often, command-line utility names are spelled the same as the software project or product with which they are associated, with only differences in capitalization. In such cases, use code font for the command and ordinary font for the name of the project or product.\n\n✅ Recommended:\n\nInvoke the GCC 8.3 compiler using gcc for C programs or g++ for C++ programs.\nTo send the file over FTP with IPv6, use ftp -6.\nThe options for the curl command are explained on the curl project website.\nThe apt program includes commands from the apt-get and apt-cache programs for working with APT packages.\n\n\nEmail addresses as input or output. If you want the reader to use the email address as computer input or output, use code font. If you want the reader to treat the email address as a way to contact someone or a reference to someone, use non-code font and hyperlink the email address.\n\n✅ Recommended:\n\nEnter the username, not the full email address. For example, enter alex, not alex@example.com.\nFor help, contact support@example.com.\n\n\n\n\n\n\nWhen you refer to a method name in text, omit the class name except where including it would prevent ambiguity.\n\n✅ Recommended: To retrieve the zebra’s metadata, call its get method.\n❌ Not recommended: To retrieve the zebra’s metadata, call its animal.get method.\n\n\n\n\nTo refer to a single status code, use the following formatting and phrasing:\n     an HTTP 400 Bad Request status code\nIn particular, call it a status code instead of a response code or error code, and put the number and the name in code font. If the HTTP is implicit from context, you can leave it out.\nTo refer to a range of codes, use the following form:\n     an HTTP 2xx or 400 status code\nIn particular, use N xx (with a specific digit in place of N) to indicate anything in the N 00-N 99 range, and put the status code number in code font even if you’re leaving out the code’s name.\nIf you prefer to specify an exact range, you can do so:\n     an HTTP status code in the 200-299 range\nHere, too, put the numbers in code font.\n\n\n\nIn general, don’t use code elements such as keywords and filenames as if they were English verbs or nouns. Don’t inflect the name of a code element, such as to make it plural or possessive. Instead, include a noun after the name of the code element, and inflect that noun.\n\n\n\n\n\n\n\nRecommended\nNot recommended\n\n\n\n\nThe ADDRESS constant’s value is defined in the settings.h file.\nADDRESS’s value is defined in settings.h.\n\n\nTo add the data, send a POST request.\nPOST the data.\n\n\nTo retrieve the data, send a GET request.\nRetrieve information by GETting the data.\n\n\nYou can’t close the file before opening it. You can’t call the close method for a file before you call open.\nCloseing the file requires you to have opened it first.\n\n\nTakes an array of extended ASCII code points (an array of INT64 values) and returns BYTES values. For STRING arguments, returns the original string with all alphabetic characters in uppercase.\nTakes an array of extended ASCII code points (ARRAY of INT64) and returns BYTES.\n\n\n\n\n\n\nWhen you’re writing code comments that you’ll turn into generated reference documentation, link to the first instance of each element of Android APIs, such as classes, methods, constants, and XML attributes. Use code font and regular HTML a elements to link to this reference material. For later uses of the same API element in the same section, use code font but do not link to the reference documentation.\nLink AndroidManifest.xml elements and attributes to the API guide pages. Link the attribute for a particular widget or layout to its Javadoc in the widget or layout’s API reference entry.\n\n✅ Recommended:\n&lt;a href=\"/guide/topics/manifest/data-element.html\"&gt;data&lt;/a&gt;\n\nVery common classes such as Activity and Intent don’t need to be linked every time. If you use a term as a concept rather than a class, then don’t put it in code font and don’t capitalize it. Here are some objects that do not always require Javadoc links or capitalization:\n\nactivity, activities\nservice\nfragment\nview\nloader\naction bar\nintent\ncontent provider\nbroadcast receiver\napp widget\n\nIf you use one of these terms in the context of referring to an actual instance, use the formal class name and link to its reference page. Here are two examples:\n\n✅ Recommended: The Activity class is an important part of an application’s overall lifecycle…\n✅ Recommended: The user interface for an activity is provided by a hierarchy of views—objects derived from the View class.\n\nTo link to a class or method:\n\nTo link to a class, use the class name as link text—for example:\n&lt;a href=\"/reference/android/widget/TextView\"&gt;TextView&lt;/a&gt;\nTo link to a method, use the method name as a fragment identifier. If you’re linking to a static method, also include the class name in the link text. If you need to distinguish between overloaded versions of a particular method, consider showing the full signature—for example:\n&lt;a href=\"/reference/android/app/Activity.html#onCreate(android.os.Bundle)\"&gt;onCreate(Bundle)&lt;/a&gt;\nTo link the attribute for a particular widget or layout to its Javadoc in the widget or layout’s API reference entry, use the URL for the page, and then add the fragment identifier #attr*android:ATTRIBUTE*NAME. For example, to link to the XML attribute android:inputType for the TextView widget, add the following:\n&lt;a href=\"/reference/android/widget/TextView.html#attr_android:inputType&gt;inputType&lt;/a&gt;",
    "crumbs": [
      "Computer interfaces",
      "Code in text"
    ]
  },
  {
    "objectID": "content/en/computer-interfaces/code-in-text.html#some-specific-items-to-put-in-code-font",
    "href": "content/en/computer-interfaces/code-in-text.html#some-specific-items-to-put-in-code-font",
    "title": "Code in text",
    "section": "",
    "text": "The following table includes items that should be in code font, but it’s not an exhaustive list:\n(TODO: The table below needs review and edit.)\n\n\n\nItem\nRecommended\n\n\n\n\nAttribute names and values\nThe imageURL attribute contains the path for the image file that you can open in a browser—for example, https://www.example.com/images/product.jpg. You can create a VM instance using the e2-highcpu-16 machine type in the us-central1-a region.\n\n\nClass names\nThe SnapshotDiskOperator class includes the generate*snapshot*name method.\n\n\nCommand output\nThe output is similar to the following: Found sysprep-specialize-script-ps1 in metadata. … Finished running specialize scripts. (TODO: fix the format)\n\n\nCommand-line utility names, such as gcloud, gsutil, kubectl, and bq\nYou can use the kubectl tool to define a network policy.\n\n\nData types\nNested data is represented as a STRUCT type.\n\n\nDatabase elements (such as row and column names)\nThe query extracts the month, julianday, and dayofweek values from the datetime and timestamp columns.\n\n\nDefined (constant) values for an element or attribute\nThe constant city has the value \"San Francisco\".\n\n\nDNS record types\nCreate a DNS AAAA record in your public DNS zone that points to the IP address of the load balancer.\n\n\nElement names (HTML and XML)\nThe script and df-messenger HTML elements should be in the body element of your page. A C-CDA document contains a header and a body enclosed within a ClinicalDocument XML element. When you refer to an element name, don’t put angle brackets (&lt;&gt;) around the element name. (TODO: format)\n\n\nEnum (enumerator) names\nGenerated from the protobuf enum BOOL = 1;.\n\n\nEnvironment variable names\nSet the CHROME*REMOTE*DESKTOP*DEFAULT*DESKTOP_SIZES environment variable to include the resolution of your monitor.\n\n\nFilenames, filename extensions (if used), and paths\nOpen the pg_hba.conf file, which is typically in the /etc/postgresql/13/main directory.\n\n\nFolders and directories\nThe configuration information for the reader deployment is in the opentsdb-read.yaml.tpl file in the deployments folder of the guide repository.\n\n\nHTTP content-type values\nThe value of the Content-Type header value is required and must be set to application/fhir+json as defined in the FHIR specification.\n\n\nHTTP status codes\nThe HTTP 500 Internal Server Error status code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.\n\n\nHTTP verbs\nTo specify image content directly using a local image file, you can use a POST request.\n\n\nIAM role names\nGrant the new service account the roles/cloudfunctions.invoker IAM role for the trace function.\n\n\nIP addresses\nThe other nodes of the cluster should contact this host on IP address 10.10.10.10.\n\n\nLanguage keywords\nThe SQL statement contains the dataset table name after the FROM keyword in the format of PROJECT*NAME.DATASET.TABLE*NAME.\n\n\nMethod and function names\nThe ST*GEOPOINT function uses the longitude and latitude of the Colosseum in Rome. To fetch the status of the job, call the get*job_status method.\n\n\nNamespace aliases\nUse Config Sync to apply the package only to the default namespace.\n\n\nPlaceholder variables\nReplace SUBNETWORK_NAME with the resource ID of the private subnet that you want the blueprint to use.\n\n\nPort numbers\nEach member Pod must have a container that’s listening on TCP port 50000.\n\n\nQuery parameter names and values\nIf you want to return all contents under a directory, use the recursive=true query parameter with your request.\n\n\nStrings (such as URLs or domain names) that are used in commands and code\nIn IAM, a condition can specify a page that only Human Resources admins can access—for example, https://hr.example.com. The logID field includes the domain corpaudits.example.com.\n\n\nText input\nIn the Key name field, enter config-management.\n\n\nUI elements that are rendered based on previously entered text (such as a server or instance name)\nFrom the Server name list, select my-sql-cluster1. Click my-instance. If a code-formatted element appears in UI, add bold as well. For more information, see Code in UI elements.\n\n\n\nGenerally, don’t put quotation marks around code unless the quotation marks are part of the code.",
    "crumbs": [
      "Computer interfaces",
      "Code in text"
    ]
  },
  {
    "objectID": "content/en/computer-interfaces/code-in-text.html#items-to-put-in-ordinary-non-code-font",
    "href": "content/en/computer-interfaces/code-in-text.html#items-to-put-in-ordinary-non-code-font",
    "title": "Code in text",
    "section": "",
    "text": "The following table includes items that should not be in code font, but it’s not an exhaustive list. If you’re referring to any of these items as computer input or output, or as a code entity like an attribute or value, then use code font.\n\n(TODO: The table below needs review and edit.)\n\n\n\nItem\nRecommended\n\n\n\n\nDomain names\nThe test environment is designed only for standard application offerings from example.com.\n\n\nNames of products, services, and organizations\nExample Organization has current and former employees who use Google products such as Google Docs and Google Sheets.\n\n\nURLs that the reader is supposed to follow in a browser\nYou can find support at https://support.example.com. It’s usually best to format a URL as a link and use descriptive link text instead of exposing the URL itself. For more information, see Avoid URLs as link text.",
    "crumbs": [
      "Computer interfaces",
      "Code in text"
    ]
  },
  {
    "objectID": "content/en/computer-interfaces/code-in-text.html#code-in-ui-elements",
    "href": "content/en/computer-interfaces/code-in-text.html#code-in-ui-elements",
    "title": "Code in text",
    "section": "",
    "text": "If a UI element meets the requirements for code font, then use both code font and bold for that element.\n\n✅ Recommended: In the Network list, select my-net-2.\n✅ Recommended: In the Query results pane, the Store column is displayed.",
    "crumbs": [
      "Computer interfaces",
      "Code in text"
    ]
  },
  {
    "objectID": "content/en/computer-interfaces/code-in-text.html#items-that-are-sometimes-in-code-font",
    "href": "content/en/computer-interfaces/code-in-text.html#items-that-are-sometimes-in-code-font",
    "title": "Code in text",
    "section": "",
    "text": "The following list includes items that are sometimes in code font, but it’s not an exhaustive list.\n\nBoolean values. If you refer directly to a Boolean data type value (such as true or false, or 1 or 0), then format the value as code. If you refer to the evaluation of a Boolean condition as true or false, then refer to the evaluation in non-code font.\n\n✅ Recommended:\n\nIf the update succeeds, returns true.\nenableCertificateValidation: If true, validates the SSL certificate before proceeding. If false, trusts the certificate without validating it.\n\n\nCommand-line utility names. Often, command-line utility names are spelled the same as the software project or product with which they are associated, with only differences in capitalization. In such cases, use code font for the command and ordinary font for the name of the project or product.\n\n✅ Recommended:\n\nInvoke the GCC 8.3 compiler using gcc for C programs or g++ for C++ programs.\nTo send the file over FTP with IPv6, use ftp -6.\nThe options for the curl command are explained on the curl project website.\nThe apt program includes commands from the apt-get and apt-cache programs for working with APT packages.\n\n\nEmail addresses as input or output. If you want the reader to use the email address as computer input or output, use code font. If you want the reader to treat the email address as a way to contact someone or a reference to someone, use non-code font and hyperlink the email address.\n\n✅ Recommended:\n\nEnter the username, not the full email address. For example, enter alex, not alex@example.com.\nFor help, contact support@example.com.",
    "crumbs": [
      "Computer interfaces",
      "Code in text"
    ]
  },
  {
    "objectID": "content/en/computer-interfaces/code-in-text.html#method-names",
    "href": "content/en/computer-interfaces/code-in-text.html#method-names",
    "title": "Code in text",
    "section": "",
    "text": "When you refer to a method name in text, omit the class name except where including it would prevent ambiguity.\n\n✅ Recommended: To retrieve the zebra’s metadata, call its get method.\n❌ Not recommended: To retrieve the zebra’s metadata, call its animal.get method.",
    "crumbs": [
      "Computer interfaces",
      "Code in text"
    ]
  },
  {
    "objectID": "content/en/computer-interfaces/code-in-text.html#http-status-codes",
    "href": "content/en/computer-interfaces/code-in-text.html#http-status-codes",
    "title": "Code in text",
    "section": "",
    "text": "To refer to a single status code, use the following formatting and phrasing:\n     an HTTP 400 Bad Request status code\nIn particular, call it a status code instead of a response code or error code, and put the number and the name in code font. If the HTTP is implicit from context, you can leave it out.\nTo refer to a range of codes, use the following form:\n     an HTTP 2xx or 400 status code\nIn particular, use N xx (with a specific digit in place of N) to indicate anything in the N 00-N 99 range, and put the status code number in code font even if you’re leaving out the code’s name.\nIf you prefer to specify an exact range, you can do so:\n     an HTTP status code in the 200-299 range\nHere, too, put the numbers in code font.",
    "crumbs": [
      "Computer interfaces",
      "Code in text"
    ]
  },
  {
    "objectID": "content/en/computer-interfaces/code-in-text.html#grammatical-treatment-of-code-elements",
    "href": "content/en/computer-interfaces/code-in-text.html#grammatical-treatment-of-code-elements",
    "title": "Code in text",
    "section": "",
    "text": "In general, don’t use code elements such as keywords and filenames as if they were English verbs or nouns. Don’t inflect the name of a code element, such as to make it plural or possessive. Instead, include a noun after the name of the code element, and inflect that noun.\n\n\n\n\n\n\n\nRecommended\nNot recommended\n\n\n\n\nThe ADDRESS constant’s value is defined in the settings.h file.\nADDRESS’s value is defined in settings.h.\n\n\nTo add the data, send a POST request.\nPOST the data.\n\n\nTo retrieve the data, send a GET request.\nRetrieve information by GETting the data.\n\n\nYou can’t close the file before opening it. You can’t call the close method for a file before you call open.\nCloseing the file requires you to have opened it first.\n\n\nTakes an array of extended ASCII code points (an array of INT64 values) and returns BYTES values. For STRING arguments, returns the original string with all alphabetic characters in uppercase.\nTakes an array of extended ASCII code points (ARRAY of INT64) and returns BYTES.",
    "crumbs": [
      "Computer interfaces",
      "Code in text"
    ]
  },
  {
    "objectID": "content/en/computer-interfaces/code-in-text.html#linking-api-terms-in-android",
    "href": "content/en/computer-interfaces/code-in-text.html#linking-api-terms-in-android",
    "title": "Code in text",
    "section": "",
    "text": "When you’re writing code comments that you’ll turn into generated reference documentation, link to the first instance of each element of Android APIs, such as classes, methods, constants, and XML attributes. Use code font and regular HTML a elements to link to this reference material. For later uses of the same API element in the same section, use code font but do not link to the reference documentation.\nLink AndroidManifest.xml elements and attributes to the API guide pages. Link the attribute for a particular widget or layout to its Javadoc in the widget or layout’s API reference entry.\n\n✅ Recommended:\n&lt;a href=\"/guide/topics/manifest/data-element.html\"&gt;data&lt;/a&gt;\n\nVery common classes such as Activity and Intent don’t need to be linked every time. If you use a term as a concept rather than a class, then don’t put it in code font and don’t capitalize it. Here are some objects that do not always require Javadoc links or capitalization:\n\nactivity, activities\nservice\nfragment\nview\nloader\naction bar\nintent\ncontent provider\nbroadcast receiver\napp widget\n\nIf you use one of these terms in the context of referring to an actual instance, use the formal class name and link to its reference page. Here are two examples:\n\n✅ Recommended: The Activity class is an important part of an application’s overall lifecycle…\n✅ Recommended: The user interface for an activity is provided by a hierarchy of views—objects derived from the View class.\n\nTo link to a class or method:\n\nTo link to a class, use the class name as link text—for example:\n&lt;a href=\"/reference/android/widget/TextView\"&gt;TextView&lt;/a&gt;\nTo link to a method, use the method name as a fragment identifier. If you’re linking to a static method, also include the class name in the link text. If you need to distinguish between overloaded versions of a particular method, consider showing the full signature—for example:\n&lt;a href=\"/reference/android/app/Activity.html#onCreate(android.os.Bundle)\"&gt;onCreate(Bundle)&lt;/a&gt;\nTo link the attribute for a particular widget or layout to its Javadoc in the widget or layout’s API reference entry, use the URL for the page, and then add the fragment identifier #attr*android:ATTRIBUTE*NAME. For example, to link to the XML attribute android:inputType for the TextView widget, add the following:\n&lt;a href=\"/reference/android/widget/TextView.html#attr_android:inputType&gt;inputType&lt;/a&gt;",
    "crumbs": [
      "Computer interfaces",
      "Code in text"
    ]
  },
  {
    "objectID": "content/en/computer-interfaces/code-syntax.html",
    "href": "content/en/computer-interfaces/code-syntax.html",
    "title": "Document command-line syntax",
    "section": "",
    "text": "Source: https://developers.google.com/style/code-syntax\n\nThis page shows how to document command-line commands and their arguments. For more information about formatting code that appears in text, placeholders, and code samples, see the following links:\n\nCode in text\nFormatting placeholders\nCode samples\n\n\n\nWhen you write procedural or conceptual documentation for a command-line command, apply the following best practices:\n\nProvide an inline link to the command reference. A good place for that link is in the text that introduces the command or a series of steps.\n\nRecommended: To connect to the instance, use the gcloud compute ssh command:\ngcloud compute ssh\n\nDetermine which arguments are needed to complete each task in the recommended way. To minimize the number of options that you need to document in non-reference content, use as few optional arguments as possible. Rely on the command reference for the complete list of arguments.\nProvide a click-to-copy command example that the reader doesn’t need to edit after they copy it. If possible, include only runnable code and placeholder variables in the click-to-copy example.  Some command examples contain optional arguments, mutually exclusive arguments, or repeated arguments that are indicated by square brackets ([]), pipes (|), braces ({}), and ellipses (...). These characters can break commands if they’re not first removed. For that reason, avoid using these arguments in click-to-copy examples.  For more information, see the Optional arguments in click-to-copy commands section of this document.\n\n\n\n\nTo mark a block of code such as a lengthy command or a code sample, use the following formatting:\n\nIn HTML, use the pre element.\nIn Markdown, use a code fence (```).\n\nTo format a command with multiple elements, do the following:\n\nWhen a line exceeds 80 characters, you can safely add a line break before some characters, such as a single hyphen, double hyphen, underscore, or quotation marks. After the first line, indent each line by four spaces to vertically align each line that follows a line break.\nWhen you split a command line with a line break, each line except the last line must end with the command-continuation character. Commands that don’t have the command-continuation character don’t work.\n\nLinux or Cloud Shell: A backslash typically preceded with a space (\\)\nWindows: A caret preceded with a space (^)\n\nFormat placeholder text with placeholders.\nFollow the command line with a descriptive list of the placeholders used in the command line. For more information, see Explaining placeholders.\nWhen documenting a command-line option or argument, use end puctuation for complete sentences. Don’t use end punctuation for single words or noun phrases, unless there is a mix of sentences and noun phrases. This guidance is similar to end punctuation in lists. For more information, see Google AIP guidelines for documentation.\n\nWhen you’re documenting a bash or sh command, follow the quotation mark style in Google’s shell style guide.\n\n\n\nIf your command-line instructions show multiple lines of input in one block, then start each line of input with the prompt symbol. If you don’t want users to copy the prompt symbol when they copy the command, you might be able to turn off text selection for the symbol—for example, by using CSS.\nDon’t show the current directory path before the prompt, even if part of the instruction includes changing directories. However, if the overall context of the command interface changes—such as from the local machine to a remote machine—then add an additional prompt indicator, as appropriate, for the new context.\n✅ Recommended:\nEnter the following code into the terminal:\n$ adb devices\nThe output is the following:\nList of devices attached\nemulator-5554  device\nemulator-5556  device\n✅ Recommended:\n$ adb shell\nshell@ $ screencap /sdcard/screen.png\nshell@ $ exit\n$ adb pull /sdcard/screen.png\nWhen you’re showing a one-line command, the command prompt (the $ symbol) is optional. However, if your document includes both multi-line and one-line commands, then we recommend using the command prompt for all of the commands in the document for consistency.\nIf your command-line instructions include a combination of input and output lines, we recommend using separate code blocks for input and output.\n✅ Recommended:\n$ cat ~/.ssh/my-ssh-key.pub\nThe output is similar to the following:\nssh-rsa KEY_VALUE USERNAME\n\n\n\nUse square brackets around an argument to indicate that it’s optional. If there’s more than one optional argument, enclose each item in its own set of square brackets.\nAvoid using optional arguments in click-to-copy code examples. For best practices on documenting optional arguments with click-to-copy commands, see the Best practices and Optional arguments in click-to-copy commands sections of this document.\nIn the following example, GROUP is required, but GLOBAL_FLAG and FILENAME are optional:\ngcloud dns GROUP [GLOBAL_FLAG] [FILENAME]\n\n\n\nUse curly braces to indicate that the reader must choose one—and only one—of the items inside the braces. There can be more than two mutually exclusive choices. To separate each choice, use a pipe (|).\nAvoid using mutually exclusive arguments in click-to-copy code examples. For best practices on documenting mutually exclusive arguments with click-to-copy commands, see the Best practices and Optional arguments in click-to-copy commands sections of this document.\nIn the following example, choose either FILE*1 or FILE*2:\n{FILE*1|FILE*2}\nIn the following example, there are also two options:\n\nLeft side of pipe: If the source code is deployed from a cloud repository, the following is required: --source=CLOUD*SOURCE --source-url=SOURCE*URL\nRight side of pipe: If the source code is in a local directory:\n\n--bucket=BUCKET is required.\n--source=LOCAL_SOURCE is optional, as specified by the square brackets.\n\n{--source=CLOUD*SOURCE --source-url=SOURCE*URL | --bucket=BUCKET [--source=LOCAL_SOURCE]}\n\n\n\n\nUse three dots and no spaces (...) to indicate that the reader can specify multiple values for the argument.\nAvoid using an ellipsis in click-to-copy code examples. For best practices on documenting optional arguments with click-to-copy commands, see the Best practices and Optional arguments in click-to-copy commands sections of this document.\nIn this example, the reader can specify multiple instances of the optional parameter GLOBAL_FLAG:\ngcloud dns GROUP [GLOBAL_FLAG ...]\n\n\n\nOptional arguments, mutually exclusive arguments, and repeated arguments contain characters (such as square brackets, curly braces, pipes, and ellipses) that can break commands if the reader doesn’t remove them. Avoid using these types of arguments in click-to-copy commands. Instead, choose one of the following approaches:\n\nRemove the optional arguments. As a best practice, use only the necessary arguments to complete the task for the most common use case. If possible, remove optional arguments from the command; always provide a link to the command reference for the command, where readers can find the full list of options. For more information, check with product management or a technical support specialist for the most relevant arguments.\n\n✅ Recommended:\nTo get an aggregate list of all virtual machine (VM) instances in all zones for a project, use the gcloud compute instances list command:\ngcloud compute instances list\nIf you want to narrow the list of VMs to a specific zone, use the previous command with the --zones flag.\n\nUse separate code blocks for each option. In some cases, it might be ideal to provide more than one click-to-copy code block within the same section.\n\n✅ Recommended:\nTo create a bootable Compute Engine image, use the gcloud compute images import command:\ngcloud compute images import IMAGE_NAME \\\n--source-file=SOURCE_FILE\nIf you’re importing an image with an existing license, specify the --byol flag:\ngcloud compute images import IMAGE_NAME \\\n    --source-file=SOURCE_FILE \\\n    --byol\n\nDocument optional arguments in separate tasks. In some cases, it might be best to treat different options in separate sections.\n\n✅ Recommended: To create a bootable or non-bootable Compute Engine image based on an existing virtual disk, use the gcloud compute images import command.\n\nIf your virtual disk has a bootable operating system installed on it, run the following command:\ngcloud compute images import IMAGE_NAME \\\n    --source-file=SOURCE_FILE\n\nIf your virtual disk doesn’t have a bootable operating system installed on it, include the --data-disk flag:\ngcloud compute images import IMAGE_NAME \\\n    --source-file=SOURCE_FILE \\\n    --data-disk\n\nLet the reader know that the command contains optional arguments. If you must include special characters to indicate optional arguments, indicate that fact when you introduce the command.\n\n✅ Recommended:\nTo create a VM with a custom name and attach one or more existing stateful disks to that VM, use the gcloud compute instance-groups managed create-instance command with one or multiple --stateful-disk flags. In the following example, you optionally specify the auto-delete subflag to keep or discard each disk when the VM is permanently deleted:\ngcloud compute instance-groups managed create-instance NAME \\\n    --instance=VM_NAME \\\n    --stateful-disk=device-name=DEVICE*NAME,source=DISK[,auto-delete=DELETE*RULE]\nFor example, the following command creates a managed instance that’s named db-instance and attaches the persistent disk db-data-disk-1 as a stateful disk that is detached and preserved if its VM is deleted:\ngcloud compute instance-groups managed create-instance example-database-mig \\\n    --instance=db-instance \\\n    --stateful-disk=device-name=data-disk,source=projects/example-project/zones/us-east1-c/disks/db-data-disk-1,auto-delete=never\n\n\n\n\n\nYou don’t have to show output for every command. Add output only if it adds value—for example, if the reader needs to copy a value from the output or if they need to verify a value in the output.\nIf you are showing output, use one of the following introductory phrases to separate the command from the output.\n\n✅ Recommended: The output is similar to the following:\n✅ Recommended: The output is the following:\n\nIf you want to explicitly call out something about the output, you can customize the introductory phrase.\n\n✅ Recommended: The output is similar to the following, in which the IP column shows the IP address for each resource:\n\nTo indicate that one or more lines of output are omitted from sample output, use three dots and no spaces (...) on a separate line. Do not use the ellipsis character (…). For example:\nReading file status\nUpload done, resetting board...\n...\nWakeup reason: 0\nFor more information about presenting output, also see the following:\n\nFor more information about how to present output in procedures, see Order of multiple components in a step.\nFor more information about using placeholders in output, see Placeholders in output.\nFor more information about using examples such as domain names and IP addresses in output, see Example domains and names.\n\n\n\n\nWhen discussing commands and their constituent parts in the gcloud CLI and in Linux commands, follow this guidance:\n\nAvoid mapping nomenclature of the gcloud CLI’s commands to Linux commands.\nLinux commands can be complicated. It’s wise to describe what the entire command does rather than what its individual elements are called.\nFor Linux commands or commands in the gcloud CLI, ask yourself if the reader must know the name of the command-line element or if explaining the command is sufficient.\n\n\n\ngcloud GROUP | COMMAND [--account=ACCOUNT] [--configuration=CONFIGURATION] \\\n    [--flatten=[KEY,...]][--format=FORMAT] [--help] [--project=PROJECT_ID] \\\n    [--quiet, -q][--verbosity=VERBOSITY; default=\"warning\"] [--version, -v] \\\n    [-h] [--log-http][--trace-token=TRACE_TOKEN] [--no-user-output-enabled]\nFor the sake of accurate classification, the gcloud CLI’s syntax distinguishes between a command and a command group. In docs, however, command-line contents are generally referred to as commands.\nYou can use commands (and groups) alone or with one or more flags. A flag is a Google Cloud-specific term for any element other than the command or group name itself. A command or flag might also take an argument, for example, a region value.\n\n\ngcloud init\n\n\n\ngcloud init --skip-diagnostics\n\n\n\ngcloud ml-engine jobs submit training ${JOB_NAME} \\\n    --package-path=trainer \\\n    --module-name=trainer.task \\\n    --staging-bucket=gs://${BUCKET} \\\n    --job-dir=gs://${BUCKET}/${JOB_NAME} \\\n    --runtime-version=1.2 \\\n    --region=us-central1 \\\n    --config=config/config.yaml \\\n    -- \\\n    --data_dir=gs://${BUCKET}/data \\\n    --output*dir=gs://${BUCKET}/${JOB*NAME} \\\n    --train_steps=10000\nThe preceding command consists of the following elements:\n\nml-engine is a gcloud command group.\njobs is an ml-engine command group.\nsubmit is a jobs command group.\ntraining is a submit command.\n${JOB*NAME} is an argument that refers to an environment variable called JOB*NAME that was set earlier.\n--package-path is a flag set to a path to a Python package to build.\n-- in isolation separates the gcloud arguments that precede it from the user arguments that follow it.\n\nIn addition to the term flag, option is often used as a catchall term when you don’t want to mire the reader in specialized nomenclature.\nFor more information, see the Cloud SDK: gcloud topic.\n\n\n\n\n\n[CAUTION] Caution: Linux command syntax is notoriously complex. This section covers only the most common elements. For a more detailed reference, see The Linux Command Line.\n\nWhere the gcloud CLI uses the catchall terms flag and option, Linux commands use options, parameters, arguments, and a host of specialized syntax elements. The following is an example:\nfind /usr/src/linux -follow -type f -name '*.[ch]' | xargs grep -iHn pcnet\nThe preceding command consists of the following elements:\n\nfind is the command name.\n/usr/src/linux is an argument that specifies the path to look in. Easier to refer to as only a path.\n-follow is an option. The hyphen (-), often called a dash in this context, is part of the option.\n-type is an option with a value of f.\n-name is an option with a value of '*.[ch]', where the asterisk (*) is a metacharacter signifying a wildcard. Metacharacters are used in Linux shell commands for globbing, or filename expansion. In addition to the asterisk, metacharacters include the question mark (?) and caret (^).\n\nThe results of the first command are redirected by using a pipe (|) to the xargs grep -iHn pcnet command. Other redirection symbols include the greater than symbol (&gt;), less than symbol (&lt;), left double angle quotation mark (&lt;&lt;), and right double angle quotation mark (&gt;&gt;). Redirection means capturing output from a file, command, program, script, or even code block within a script and sending it as input to another file, command, program, or script.\n\n\n\nLinux signals require vocabulary choices that are generally discouraged elsewhere in documentation. We recommend using the terms in the following table only in the context of process control:\n\n\n\n\n\n\n\nSignal\nDescription\n\n\n\n\nSIGKILL\nSignal sent to kill a specified process, all members of a specified process group, or all processes on the system. SIGKILL cannot be caught, blocked, or ignored. Do not substitute cancel, end, exit, quit, stop, or terminate.\n\n\nSIGTERM\nSignal sent as a request to terminate a process. Although similar to SIGKILL, this signal gives the process a chance to clean up any child processes that might be running. Do not substitute cancel, end, exit, quit, or stop.\n\n\nSIGQUIT\nSignal sent from a keyboard to quit a process. Some processes can catch, block, or ignore a quit signal. Do not substitute cancel, end, exit, quit, or stop.\n\n\nSIGINT\nSignal sent to interrupt a process immediately. The default action of this signal is to terminate a process gracefully. It can be handled, ignored, or caught. It can be sent from a terminal—for example, when a user presses Control+C. Do not substitute suspend, end, exit, pause, or terminate.\n\n\nSIGPAUSE\nSignal that tells a process to pause, or sleep, until any signal is delivered that either terminates the process or invokes a signal-catching function. Do not substitute cancel or interrupt.\n\n\nSIGSUSPEND\nSignal sent to temporarily suspend execution of a process. Used to prevent delivery of a particular signal during the execution of a critical code section. Do not substitute pause or exit.\n\n\nSIGSTOP\nSignal sent to stop execution of a process for later continuation (upon receiving a SIGCONT signal). SIGSTOP cannot be caught, blocked, or ignored. Do not substitute cancel, end, exit, interrupt, quit, or terminate.",
    "crumbs": [
      "Computer interfaces",
      "Command-line syntax"
    ]
  },
  {
    "objectID": "content/en/computer-interfaces/code-syntax.html#best-practices",
    "href": "content/en/computer-interfaces/code-syntax.html#best-practices",
    "title": "Document command-line syntax",
    "section": "",
    "text": "When you write procedural or conceptual documentation for a command-line command, apply the following best practices:\n\nProvide an inline link to the command reference. A good place for that link is in the text that introduces the command or a series of steps.\n\nRecommended: To connect to the instance, use the gcloud compute ssh command:\ngcloud compute ssh\n\nDetermine which arguments are needed to complete each task in the recommended way. To minimize the number of options that you need to document in non-reference content, use as few optional arguments as possible. Rely on the command reference for the complete list of arguments.\nProvide a click-to-copy command example that the reader doesn’t need to edit after they copy it. If possible, include only runnable code and placeholder variables in the click-to-copy example.  Some command examples contain optional arguments, mutually exclusive arguments, or repeated arguments that are indicated by square brackets ([]), pipes (|), braces ({}), and ellipses (...). These characters can break commands if they’re not first removed. For that reason, avoid using these arguments in click-to-copy examples.  For more information, see the Optional arguments in click-to-copy commands section of this document.",
    "crumbs": [
      "Computer interfaces",
      "Command-line syntax"
    ]
  },
  {
    "objectID": "content/en/computer-interfaces/code-syntax.html#format-a-command",
    "href": "content/en/computer-interfaces/code-syntax.html#format-a-command",
    "title": "Document command-line syntax",
    "section": "",
    "text": "To mark a block of code such as a lengthy command or a code sample, use the following formatting:\n\nIn HTML, use the pre element.\nIn Markdown, use a code fence (```).\n\nTo format a command with multiple elements, do the following:\n\nWhen a line exceeds 80 characters, you can safely add a line break before some characters, such as a single hyphen, double hyphen, underscore, or quotation marks. After the first line, indent each line by four spaces to vertically align each line that follows a line break.\nWhen you split a command line with a line break, each line except the last line must end with the command-continuation character. Commands that don’t have the command-continuation character don’t work.\n\nLinux or Cloud Shell: A backslash typically preceded with a space (\\)\nWindows: A caret preceded with a space (^)\n\nFormat placeholder text with placeholders.\nFollow the command line with a descriptive list of the placeholders used in the command line. For more information, see Explaining placeholders.\nWhen documenting a command-line option or argument, use end puctuation for complete sentences. Don’t use end punctuation for single words or noun phrases, unless there is a mix of sentences and noun phrases. This guidance is similar to end punctuation in lists. For more information, see Google AIP guidelines for documentation.\n\nWhen you’re documenting a bash or sh command, follow the quotation mark style in Google’s shell style guide.",
    "crumbs": [
      "Computer interfaces",
      "Command-line syntax"
    ]
  },
  {
    "objectID": "content/en/computer-interfaces/code-syntax.html#command-prompt",
    "href": "content/en/computer-interfaces/code-syntax.html#command-prompt",
    "title": "Document command-line syntax",
    "section": "",
    "text": "If your command-line instructions show multiple lines of input in one block, then start each line of input with the prompt symbol. If you don’t want users to copy the prompt symbol when they copy the command, you might be able to turn off text selection for the symbol—for example, by using CSS.\nDon’t show the current directory path before the prompt, even if part of the instruction includes changing directories. However, if the overall context of the command interface changes—such as from the local machine to a remote machine—then add an additional prompt indicator, as appropriate, for the new context.\n✅ Recommended:\nEnter the following code into the terminal:\n$ adb devices\nThe output is the following:\nList of devices attached\nemulator-5554  device\nemulator-5556  device\n✅ Recommended:\n$ adb shell\nshell@ $ screencap /sdcard/screen.png\nshell@ $ exit\n$ adb pull /sdcard/screen.png\nWhen you’re showing a one-line command, the command prompt (the $ symbol) is optional. However, if your document includes both multi-line and one-line commands, then we recommend using the command prompt for all of the commands in the document for consistency.\nIf your command-line instructions include a combination of input and output lines, we recommend using separate code blocks for input and output.\n✅ Recommended:\n$ cat ~/.ssh/my-ssh-key.pub\nThe output is similar to the following:\nssh-rsa KEY_VALUE USERNAME",
    "crumbs": [
      "Computer interfaces",
      "Command-line syntax"
    ]
  },
  {
    "objectID": "content/en/computer-interfaces/code-syntax.html#optional-arguments",
    "href": "content/en/computer-interfaces/code-syntax.html#optional-arguments",
    "title": "Document command-line syntax",
    "section": "",
    "text": "Use square brackets around an argument to indicate that it’s optional. If there’s more than one optional argument, enclose each item in its own set of square brackets.\nAvoid using optional arguments in click-to-copy code examples. For best practices on documenting optional arguments with click-to-copy commands, see the Best practices and Optional arguments in click-to-copy commands sections of this document.\nIn the following example, GROUP is required, but GLOBAL_FLAG and FILENAME are optional:\ngcloud dns GROUP [GLOBAL_FLAG] [FILENAME]",
    "crumbs": [
      "Computer interfaces",
      "Command-line syntax"
    ]
  },
  {
    "objectID": "content/en/computer-interfaces/code-syntax.html#mutually-exclusive-arguments",
    "href": "content/en/computer-interfaces/code-syntax.html#mutually-exclusive-arguments",
    "title": "Document command-line syntax",
    "section": "",
    "text": "Use curly braces to indicate that the reader must choose one—and only one—of the items inside the braces. There can be more than two mutually exclusive choices. To separate each choice, use a pipe (|).\nAvoid using mutually exclusive arguments in click-to-copy code examples. For best practices on documenting mutually exclusive arguments with click-to-copy commands, see the Best practices and Optional arguments in click-to-copy commands sections of this document.\nIn the following example, choose either FILE*1 or FILE*2:\n{FILE*1|FILE*2}\nIn the following example, there are also two options:\n\nLeft side of pipe: If the source code is deployed from a cloud repository, the following is required: --source=CLOUD*SOURCE --source-url=SOURCE*URL\nRight side of pipe: If the source code is in a local directory:\n\n--bucket=BUCKET is required.\n--source=LOCAL_SOURCE is optional, as specified by the square brackets.\n\n{--source=CLOUD*SOURCE --source-url=SOURCE*URL | --bucket=BUCKET [--source=LOCAL_SOURCE]}",
    "crumbs": [
      "Computer interfaces",
      "Command-line syntax"
    ]
  },
  {
    "objectID": "content/en/computer-interfaces/code-syntax.html#arguments-that-can-repeat",
    "href": "content/en/computer-interfaces/code-syntax.html#arguments-that-can-repeat",
    "title": "Document command-line syntax",
    "section": "",
    "text": "Use three dots and no spaces (...) to indicate that the reader can specify multiple values for the argument.\nAvoid using an ellipsis in click-to-copy code examples. For best practices on documenting optional arguments with click-to-copy commands, see the Best practices and Optional arguments in click-to-copy commands sections of this document.\nIn this example, the reader can specify multiple instances of the optional parameter GLOBAL_FLAG:\ngcloud dns GROUP [GLOBAL_FLAG ...]",
    "crumbs": [
      "Computer interfaces",
      "Command-line syntax"
    ]
  },
  {
    "objectID": "content/en/computer-interfaces/code-syntax.html#optional-arguments-in-click-to-copy-commands",
    "href": "content/en/computer-interfaces/code-syntax.html#optional-arguments-in-click-to-copy-commands",
    "title": "Document command-line syntax",
    "section": "",
    "text": "Optional arguments, mutually exclusive arguments, and repeated arguments contain characters (such as square brackets, curly braces, pipes, and ellipses) that can break commands if the reader doesn’t remove them. Avoid using these types of arguments in click-to-copy commands. Instead, choose one of the following approaches:\n\nRemove the optional arguments. As a best practice, use only the necessary arguments to complete the task for the most common use case. If possible, remove optional arguments from the command; always provide a link to the command reference for the command, where readers can find the full list of options. For more information, check with product management or a technical support specialist for the most relevant arguments.\n\n✅ Recommended:\nTo get an aggregate list of all virtual machine (VM) instances in all zones for a project, use the gcloud compute instances list command:\ngcloud compute instances list\nIf you want to narrow the list of VMs to a specific zone, use the previous command with the --zones flag.\n\nUse separate code blocks for each option. In some cases, it might be ideal to provide more than one click-to-copy code block within the same section.\n\n✅ Recommended:\nTo create a bootable Compute Engine image, use the gcloud compute images import command:\ngcloud compute images import IMAGE_NAME \\\n--source-file=SOURCE_FILE\nIf you’re importing an image with an existing license, specify the --byol flag:\ngcloud compute images import IMAGE_NAME \\\n    --source-file=SOURCE_FILE \\\n    --byol\n\nDocument optional arguments in separate tasks. In some cases, it might be best to treat different options in separate sections.\n\n✅ Recommended: To create a bootable or non-bootable Compute Engine image based on an existing virtual disk, use the gcloud compute images import command.\n\nIf your virtual disk has a bootable operating system installed on it, run the following command:\ngcloud compute images import IMAGE_NAME \\\n    --source-file=SOURCE_FILE\n\nIf your virtual disk doesn’t have a bootable operating system installed on it, include the --data-disk flag:\ngcloud compute images import IMAGE_NAME \\\n    --source-file=SOURCE_FILE \\\n    --data-disk\n\nLet the reader know that the command contains optional arguments. If you must include special characters to indicate optional arguments, indicate that fact when you introduce the command.\n\n✅ Recommended:\nTo create a VM with a custom name and attach one or more existing stateful disks to that VM, use the gcloud compute instance-groups managed create-instance command with one or multiple --stateful-disk flags. In the following example, you optionally specify the auto-delete subflag to keep or discard each disk when the VM is permanently deleted:\ngcloud compute instance-groups managed create-instance NAME \\\n    --instance=VM_NAME \\\n    --stateful-disk=device-name=DEVICE*NAME,source=DISK[,auto-delete=DELETE*RULE]\nFor example, the following command creates a managed instance that’s named db-instance and attaches the persistent disk db-data-disk-1 as a stateful disk that is detached and preserved if its VM is deleted:\ngcloud compute instance-groups managed create-instance example-database-mig \\\n    --instance=db-instance \\\n    --stateful-disk=device-name=data-disk,source=projects/example-project/zones/us-east1-c/disks/db-data-disk-1,auto-delete=never",
    "crumbs": [
      "Computer interfaces",
      "Command-line syntax"
    ]
  },
  {
    "objectID": "content/en/computer-interfaces/code-syntax.html#output-from-commands",
    "href": "content/en/computer-interfaces/code-syntax.html#output-from-commands",
    "title": "Document command-line syntax",
    "section": "",
    "text": "You don’t have to show output for every command. Add output only if it adds value—for example, if the reader needs to copy a value from the output or if they need to verify a value in the output.\nIf you are showing output, use one of the following introductory phrases to separate the command from the output.\n\n✅ Recommended: The output is similar to the following:\n✅ Recommended: The output is the following:\n\nIf you want to explicitly call out something about the output, you can customize the introductory phrase.\n\n✅ Recommended: The output is similar to the following, in which the IP column shows the IP address for each resource:\n\nTo indicate that one or more lines of output are omitted from sample output, use three dots and no spaces (...) on a separate line. Do not use the ellipsis character (…). For example:\nReading file status\nUpload done, resetting board...\n...\nWakeup reason: 0\nFor more information about presenting output, also see the following:\n\nFor more information about how to present output in procedures, see Order of multiple components in a step.\nFor more information about using placeholders in output, see Placeholders in output.\nFor more information about using examples such as domain names and IP addresses in output, see Example domains and names.",
    "crumbs": [
      "Computer interfaces",
      "Command-line syntax"
    ]
  },
  {
    "objectID": "content/en/computer-interfaces/code-syntax.html#command-line-terminology",
    "href": "content/en/computer-interfaces/code-syntax.html#command-line-terminology",
    "title": "Document command-line syntax",
    "section": "",
    "text": "When discussing commands and their constituent parts in the gcloud CLI and in Linux commands, follow this guidance:\n\nAvoid mapping nomenclature of the gcloud CLI’s commands to Linux commands.\nLinux commands can be complicated. It’s wise to describe what the entire command does rather than what its individual elements are called.\nFor Linux commands or commands in the gcloud CLI, ask yourself if the reader must know the name of the command-line element or if explaining the command is sufficient.\n\n\n\ngcloud GROUP | COMMAND [--account=ACCOUNT] [--configuration=CONFIGURATION] \\\n    [--flatten=[KEY,...]][--format=FORMAT] [--help] [--project=PROJECT_ID] \\\n    [--quiet, -q][--verbosity=VERBOSITY; default=\"warning\"] [--version, -v] \\\n    [-h] [--log-http][--trace-token=TRACE_TOKEN] [--no-user-output-enabled]\nFor the sake of accurate classification, the gcloud CLI’s syntax distinguishes between a command and a command group. In docs, however, command-line contents are generally referred to as commands.\nYou can use commands (and groups) alone or with one or more flags. A flag is a Google Cloud-specific term for any element other than the command or group name itself. A command or flag might also take an argument, for example, a region value.\n\n\ngcloud init\n\n\n\ngcloud init --skip-diagnostics\n\n\n\ngcloud ml-engine jobs submit training ${JOB_NAME} \\\n    --package-path=trainer \\\n    --module-name=trainer.task \\\n    --staging-bucket=gs://${BUCKET} \\\n    --job-dir=gs://${BUCKET}/${JOB_NAME} \\\n    --runtime-version=1.2 \\\n    --region=us-central1 \\\n    --config=config/config.yaml \\\n    -- \\\n    --data_dir=gs://${BUCKET}/data \\\n    --output*dir=gs://${BUCKET}/${JOB*NAME} \\\n    --train_steps=10000\nThe preceding command consists of the following elements:\n\nml-engine is a gcloud command group.\njobs is an ml-engine command group.\nsubmit is a jobs command group.\ntraining is a submit command.\n${JOB*NAME} is an argument that refers to an environment variable called JOB*NAME that was set earlier.\n--package-path is a flag set to a path to a Python package to build.\n-- in isolation separates the gcloud arguments that precede it from the user arguments that follow it.\n\nIn addition to the term flag, option is often used as a catchall term when you don’t want to mire the reader in specialized nomenclature.\nFor more information, see the Cloud SDK: gcloud topic.\n\n\n\n\n\n[CAUTION] Caution: Linux command syntax is notoriously complex. This section covers only the most common elements. For a more detailed reference, see The Linux Command Line.\n\nWhere the gcloud CLI uses the catchall terms flag and option, Linux commands use options, parameters, arguments, and a host of specialized syntax elements. The following is an example:\nfind /usr/src/linux -follow -type f -name '*.[ch]' | xargs grep -iHn pcnet\nThe preceding command consists of the following elements:\n\nfind is the command name.\n/usr/src/linux is an argument that specifies the path to look in. Easier to refer to as only a path.\n-follow is an option. The hyphen (-), often called a dash in this context, is part of the option.\n-type is an option with a value of f.\n-name is an option with a value of '*.[ch]', where the asterisk (*) is a metacharacter signifying a wildcard. Metacharacters are used in Linux shell commands for globbing, or filename expansion. In addition to the asterisk, metacharacters include the question mark (?) and caret (^).\n\nThe results of the first command are redirected by using a pipe (|) to the xargs grep -iHn pcnet command. Other redirection symbols include the greater than symbol (&gt;), less than symbol (&lt;), left double angle quotation mark (&lt;&lt;), and right double angle quotation mark (&gt;&gt;). Redirection means capturing output from a file, command, program, script, or even code block within a script and sending it as input to another file, command, program, or script.\n\n\n\nLinux signals require vocabulary choices that are generally discouraged elsewhere in documentation. We recommend using the terms in the following table only in the context of process control:\n\n\n\n\n\n\n\nSignal\nDescription\n\n\n\n\nSIGKILL\nSignal sent to kill a specified process, all members of a specified process group, or all processes on the system. SIGKILL cannot be caught, blocked, or ignored. Do not substitute cancel, end, exit, quit, stop, or terminate.\n\n\nSIGTERM\nSignal sent as a request to terminate a process. Although similar to SIGKILL, this signal gives the process a chance to clean up any child processes that might be running. Do not substitute cancel, end, exit, quit, or stop.\n\n\nSIGQUIT\nSignal sent from a keyboard to quit a process. Some processes can catch, block, or ignore a quit signal. Do not substitute cancel, end, exit, quit, or stop.\n\n\nSIGINT\nSignal sent to interrupt a process immediately. The default action of this signal is to terminate a process gracefully. It can be handled, ignored, or caught. It can be sent from a terminal—for example, when a user presses Control+C. Do not substitute suspend, end, exit, pause, or terminate.\n\n\nSIGPAUSE\nSignal that tells a process to pause, or sleep, until any signal is delivered that either terminates the process or invokes a signal-catching function. Do not substitute cancel or interrupt.\n\n\nSIGSUSPEND\nSignal sent to temporarily suspend execution of a process. Used to prevent delivery of a particular signal during the execution of a critical code section. Do not substitute pause or exit.\n\n\nSIGSTOP\nSignal sent to stop execution of a process for later continuation (upon receiving a SIGCONT signal). SIGSTOP cannot be caught, blocked, or ignored. Do not substitute cancel, end, exit, interrupt, quit, or terminate.",
    "crumbs": [
      "Computer interfaces",
      "Command-line syntax"
    ]
  },
  {
    "objectID": "content/en/computer-interfaces/api-reference-comments.html",
    "href": "content/en/computer-interfaces/api-reference-comments.html",
    "title": "API reference code comments",
    "section": "",
    "text": "Source: https://developers.google.com/style/api-reference-comments\n\nWhen you’re documenting an API, provide a complete API reference, typically generated from source code using document comments that describe all public classes, methods, constants, and other members.\nUse the basic guidelines in this document as appropriate for a given programming language. This document doesn’t specify how to mark up document comments.\nFor more information, see the following resources:\n\nAIP-192: Documentation in Google’s API standards\nInline API documentation in the Google Cloud API design guide\nThe specific style guide for each programming language\n\n\n\nThe API reference must provide a description for each of the following:\n\nEvery class, interface, struct, and any other similar member of the API (such as union types in C++).\nEvery constant, field, enum, and typedef.\nEvery method, with a description for each parameter, the return value, and any exceptions thrown.\n\nThe following are extremely strong suggestions. In some cases, they don’t make sense for a particular API or in a specific language, but in general, follow these guidelines:\n\nOn each unique page (for a class, interface, etc.), include a code sample (~5-20 lines) at the top.\nPut all API names, classes, methods, constants, and parameters in code font, and link each name to the corresponding reference page. Most document generators do this automatically for you.\nPut string literals in code font, and enclose them in double quotation marks. For example, XML attribute values might be \"wrap_content\" or \"true\".\nMake sure that the spelling of a class name in documentation matches the spelling in code, with capital letters and no spaces (for example, ActionBar).\n\nDon’t make class names plural (Intents, Activities); instead, add a plural noun (Intent objects, Activity instances).\nHowever, if a class has a name that’s a common term, you can refer to it with the corresponding English word, in lowercase and not in code font (activities, action bar).\n\n\n\n\n\nIn the first sentence of a class description, briefly state the intended purpose or function of the class or interface with information that can’t be deduced from the class name and signature. In additional documentation, elaborate on how to use the API, including how to invoke or instantiate it, what some of the key features are, and any best practices or pitfalls.\nMany documentation tools automatically extract the first sentence of each class description for use in a list of all classes, so make the first sentence unique and descriptive, yet short. Additionally:\n\nDon’t repeat the class name in the first sentence.\nDon’t say “this class will/does …”\nDon’t use a period before the actual end of the sentence, because some document generators naively terminate the “short description” at the first period. For example, some generators terminate the sentence if they see e.g., so use for example instead.\n\nThe following example is the first sentence of the description for Android’s ActionBar class:\n\nA primary toolbar within the activity that may display the activity title, application-level navigation affordances, and other interactive items.\n\n\n\n\nMake descriptions for members (constants and fields) as brief as possible. Be sure to link to relevant methods that use the constant or field.\nFor example, here’s the description for the ActionBar class’s DISPLAY*SHOW*HOME constant:\n\nShow ‘home’ elements in this action bar, leaving more space for other navigation elements. This includes logo and icon.\n\n\nSee also: setDisplayOptions(int), setDisplayOptions(int, int)\n\n\n\n\nIn the first sentence for a method description, briefly state what action the method performs. In subsequent sentences, explain why and how to use the method, state any prerequisites that must be met before calling it, give details about exceptions that may occur, and specify any related APIs.\nDocument any dependencies (such as Android permissions) that are needed to call the method, and how the method behaves if such a dependency is missing (for example, “the method throws a SecurityException” or “the method returns null”).\nFor example, here’s the description for Android’s Activity.isChangingConfigurations method:\n\nChecks whether this activity is in the process of being destroyed in order to be recreated with a new configuration. This is often used in onStop to determine whether the state needs to be cleaned up or if it’s passed on to the next instance of the activity using onRetainNonConfigurationInstance.\n\nUse present tense for all descriptions—for example:\n\nAdds a new bird to the ornithology list.\nReturns a bird.\n\n\n\n\nIf a method performs an operation and returns some data, start the description with a verb describing the operation—for example:\n\nAdds a new bird to the ornithology list and returns the ID of the new entry.\n\nIf it’s a “getter” method and it returns a boolean, start with “Checks whether ….”\nIf it’s a “getter” method and it returns something other than a boolean, start with “Gets the ….”\nIf it has no return value, start with a verb like one of the following:\n\nTurning on an ability or setting: “Sets the ….”\nUpdating a property: “Updates the ….”\nDeleting something: “Deletes the ….”\nRegistering a callback or other element for later reference: “Registers ….”\nFor a callback: “Called by ….” (Usually for a method that’s named starting with “on”, such as onBufferingUpdate.) For example, “Called by Android when ….” Then, later in the description: “Subclasses implement this method to ….”\n\nIf it’s a convenience method that constructs the class object, start with “Creates a ….”\n\n\n\n\nFor parameter descriptions, follow these guidelines:\n\nCapitalize the first word, and end the sentence or phrase with a period.\nBegin descriptions of non-boolean parameters with “The” or “A” if possible:\n\nThe ID of the bird you want to get.\nA description of the bird.\n\nFor boolean parameters that tell the API to do or not do something, state what the API does if the parameter is true and if it’s false. For example:\n\nenableCertificateValidation: If true, validates the SSL certificate before proceeding. If false, trusts the certificate without validating it.\n\nFor boolean parameters that declare the already-established state of something (rather than telling the API to do something), use the format “True if …; false otherwise.” For example:\n\nTrue if the zoom is set; false otherwise.\n\nIn this context, don’t put the words “true” and “false” in code font or quotation marks.\nFor parameters with default behavior, explain what the behavior is for each value or range of values, and then say what the default value is. Use the format Default: to explain the default value.\n\n\n\n\nBe as brief as possible in the return value’s description; put any detailed information in the class description.\n\nIf the return value is anything other than a boolean, start with “The …”—for example:\n\nThe bird specified by the given ID.\n\nIf the return value is a boolean, use the format “True if …; false otherwise.”—for example:\n\nTrue if the bird is in the sanctuary; false otherwise.\n\n\n\n\n\nIn languages where the reference generator automatically inserts the word “Throws”, begin your description with “If …”:\n\nIf no key is assigned.\n\nOtherwise, begin with “Thrown when …”:\n\nThrown when no key is assigned.\n\n\n\n\nWhen something is deprecated, tell the user what to use as a replacement. (If you track your API with version numbers, mention which version it was first deprecated in.)\nOnly the first sentence of a description appears in the summary section and index, so put the most important information there. Subsequent sentences can explain why it was deprecated, along with any other information that’s useful for a developer using your API.\nIf a method is deprecated, tell the reader what to do to make their code work.\n\n\n\nDeprecated. Use #CameraPose instead.\n\n\nDeprecated. Access this field using the getField method.",
    "crumbs": [
      "Computer interfaces",
      "API reference code comments"
    ]
  },
  {
    "objectID": "content/en/computer-interfaces/api-reference-comments.html#documentation-basics",
    "href": "content/en/computer-interfaces/api-reference-comments.html#documentation-basics",
    "title": "API reference code comments",
    "section": "",
    "text": "The API reference must provide a description for each of the following:\n\nEvery class, interface, struct, and any other similar member of the API (such as union types in C++).\nEvery constant, field, enum, and typedef.\nEvery method, with a description for each parameter, the return value, and any exceptions thrown.\n\nThe following are extremely strong suggestions. In some cases, they don’t make sense for a particular API or in a specific language, but in general, follow these guidelines:\n\nOn each unique page (for a class, interface, etc.), include a code sample (~5-20 lines) at the top.\nPut all API names, classes, methods, constants, and parameters in code font, and link each name to the corresponding reference page. Most document generators do this automatically for you.\nPut string literals in code font, and enclose them in double quotation marks. For example, XML attribute values might be \"wrap_content\" or \"true\".\nMake sure that the spelling of a class name in documentation matches the spelling in code, with capital letters and no spaces (for example, ActionBar).\n\nDon’t make class names plural (Intents, Activities); instead, add a plural noun (Intent objects, Activity instances).\nHowever, if a class has a name that’s a common term, you can refer to it with the corresponding English word, in lowercase and not in code font (activities, action bar).",
    "crumbs": [
      "Computer interfaces",
      "API reference code comments"
    ]
  },
  {
    "objectID": "content/en/computer-interfaces/api-reference-comments.html#classes-interfaces-structs",
    "href": "content/en/computer-interfaces/api-reference-comments.html#classes-interfaces-structs",
    "title": "API reference code comments",
    "section": "",
    "text": "In the first sentence of a class description, briefly state the intended purpose or function of the class or interface with information that can’t be deduced from the class name and signature. In additional documentation, elaborate on how to use the API, including how to invoke or instantiate it, what some of the key features are, and any best practices or pitfalls.\nMany documentation tools automatically extract the first sentence of each class description for use in a list of all classes, so make the first sentence unique and descriptive, yet short. Additionally:\n\nDon’t repeat the class name in the first sentence.\nDon’t say “this class will/does …”\nDon’t use a period before the actual end of the sentence, because some document generators naively terminate the “short description” at the first period. For example, some generators terminate the sentence if they see e.g., so use for example instead.\n\nThe following example is the first sentence of the description for Android’s ActionBar class:\n\nA primary toolbar within the activity that may display the activity title, application-level navigation affordances, and other interactive items.",
    "crumbs": [
      "Computer interfaces",
      "API reference code comments"
    ]
  },
  {
    "objectID": "content/en/computer-interfaces/api-reference-comments.html#members",
    "href": "content/en/computer-interfaces/api-reference-comments.html#members",
    "title": "API reference code comments",
    "section": "",
    "text": "Make descriptions for members (constants and fields) as brief as possible. Be sure to link to relevant methods that use the constant or field.\nFor example, here’s the description for the ActionBar class’s DISPLAY*SHOW*HOME constant:\n\nShow ‘home’ elements in this action bar, leaving more space for other navigation elements. This includes logo and icon.\n\n\nSee also: setDisplayOptions(int), setDisplayOptions(int, int)",
    "crumbs": [
      "Computer interfaces",
      "API reference code comments"
    ]
  },
  {
    "objectID": "content/en/computer-interfaces/api-reference-comments.html#methods",
    "href": "content/en/computer-interfaces/api-reference-comments.html#methods",
    "title": "API reference code comments",
    "section": "",
    "text": "In the first sentence for a method description, briefly state what action the method performs. In subsequent sentences, explain why and how to use the method, state any prerequisites that must be met before calling it, give details about exceptions that may occur, and specify any related APIs.\nDocument any dependencies (such as Android permissions) that are needed to call the method, and how the method behaves if such a dependency is missing (for example, “the method throws a SecurityException” or “the method returns null”).\nFor example, here’s the description for Android’s Activity.isChangingConfigurations method:\n\nChecks whether this activity is in the process of being destroyed in order to be recreated with a new configuration. This is often used in onStop to determine whether the state needs to be cleaned up or if it’s passed on to the next instance of the activity using onRetainNonConfigurationInstance.\n\nUse present tense for all descriptions—for example:\n\nAdds a new bird to the ornithology list.\nReturns a bird.\n\n\n\n\nIf a method performs an operation and returns some data, start the description with a verb describing the operation—for example:\n\nAdds a new bird to the ornithology list and returns the ID of the new entry.\n\nIf it’s a “getter” method and it returns a boolean, start with “Checks whether ….”\nIf it’s a “getter” method and it returns something other than a boolean, start with “Gets the ….”\nIf it has no return value, start with a verb like one of the following:\n\nTurning on an ability or setting: “Sets the ….”\nUpdating a property: “Updates the ….”\nDeleting something: “Deletes the ….”\nRegistering a callback or other element for later reference: “Registers ….”\nFor a callback: “Called by ….” (Usually for a method that’s named starting with “on”, such as onBufferingUpdate.) For example, “Called by Android when ….” Then, later in the description: “Subclasses implement this method to ….”\n\nIf it’s a convenience method that constructs the class object, start with “Creates a ….”\n\n\n\n\nFor parameter descriptions, follow these guidelines:\n\nCapitalize the first word, and end the sentence or phrase with a period.\nBegin descriptions of non-boolean parameters with “The” or “A” if possible:\n\nThe ID of the bird you want to get.\nA description of the bird.\n\nFor boolean parameters that tell the API to do or not do something, state what the API does if the parameter is true and if it’s false. For example:\n\nenableCertificateValidation: If true, validates the SSL certificate before proceeding. If false, trusts the certificate without validating it.\n\nFor boolean parameters that declare the already-established state of something (rather than telling the API to do something), use the format “True if …; false otherwise.” For example:\n\nTrue if the zoom is set; false otherwise.\n\nIn this context, don’t put the words “true” and “false” in code font or quotation marks.\nFor parameters with default behavior, explain what the behavior is for each value or range of values, and then say what the default value is. Use the format Default: to explain the default value.\n\n\n\n\nBe as brief as possible in the return value’s description; put any detailed information in the class description.\n\nIf the return value is anything other than a boolean, start with “The …”—for example:\n\nThe bird specified by the given ID.\n\nIf the return value is a boolean, use the format “True if …; false otherwise.”—for example:\n\nTrue if the bird is in the sanctuary; false otherwise.\n\n\n\n\n\nIn languages where the reference generator automatically inserts the word “Throws”, begin your description with “If …”:\n\nIf no key is assigned.\n\nOtherwise, begin with “Thrown when …”:\n\nThrown when no key is assigned.\n\n\n\n\nWhen something is deprecated, tell the user what to use as a replacement. (If you track your API with version numbers, mention which version it was first deprecated in.)\nOnly the first sentence of a description appears in the summary section and index, so put the most important information there. Subsequent sentences can explain why it was deprecated, along with any other information that’s useful for a developer using your API.\nIf a method is deprecated, tell the reader what to do to make their code work.\n\n\n\nDeprecated. Use #CameraPose instead.\n\n\nDeprecated. Access this field using the getField method.",
    "crumbs": [
      "Computer interfaces",
      "API reference code comments"
    ]
  },
  {
    "objectID": "content/en/general-principles/accessibility.html",
    "href": "content/en/general-principles/accessibility.html",
    "title": "Write accessible documentation",
    "section": "",
    "text": "We write our developer documentation with accessibility in mind. This page is not an exhaustive reference, but describes some general guidelines and examples that illustrate best practices to follow. The World Health Organization estimates that 15% of the world’s population (more than 1 billion people) have an accessibility need. When documentation is written with accessibility in mind, it improves the overall experience for all readers.\nFor other writing best practices, see the following resources:",
    "crumbs": [
      "General principles",
      "Accessibility"
    ]
  },
  {
    "objectID": "content/en/general-principles/accessibility.html#general-dos-and-donts",
    "href": "content/en/general-principles/accessibility.html#general-dos-and-donts",
    "title": "Write accessible documentation",
    "section": "General dos and don’ts",
    "text": "General dos and don’ts\n\nDon’t use ableist language. Avoid bias and harm when discussing disability and accessibility. For more information, see Writing inclusive documentation.\nEnsure that readers can reach all parts of the document (including tabs, form-submission buttons, and interactive elements) by using only a keyboard, without a mouse or trackpad.\nUse a screen reader to test your documentation. This test can help you find accessibility issues in your content and is a good way to self-edit your content. To try out a screen reader, see List of screen readers.\nIn HTML, use semantic tagging. For example, use the em element only to indicate emphasis, not to indicate italics.\nIn HTML, prefer native elements over custom styles.\nAvoid unnecessary font formatting. (Screen readers explicitly describe text modifications.)\nIf you’re documenting a product that includes specialized accessibility features, then explicitly document those features. For example, the Google Cloud CLI (gcloud CLI) includes togglable accessibility features such as percentage progress bars and ASCII box rendering.\nDon’t force line breaks (hard returns) within sentences and paragraphs. Line breaks might not work well in resized windows or with enlarged text.\nAvoid when possible camel case and all caps. Some screen readers read capitalized letters individually, and some languages are unicase. Follow capitalization guidelines.\nDepending on the screen reader (or personal settings), not all punctuation marks are read. Make sure that the same meaning is conveyed to the reader without punctuation marks. For that reason, avoid when possible the use of exclamation marks, question marks, and semicolons.\nDon’t use & instead of and in headings, text, navigation, or tables of contents. However, it’s OK to use & when referencing UI elements that use &, or in table headings and diagram labels where space constraints require abbreviation. Of course, it’s fine to use & for technical purposes in code.",
    "crumbs": [
      "General principles",
      "Accessibility"
    ]
  },
  {
    "objectID": "content/en/general-principles/accessibility.html#ease-of-reading",
    "href": "content/en/general-principles/accessibility.html#ease-of-reading",
    "title": "Write accessible documentation",
    "section": "Ease of reading",
    "text": "Ease of reading\n\nBreak up walls of text to aid in scannability. For example, separate paragraphs, create headings, and use lists.\nUse shorter sentences. Try to use fewer than 26 words per sentence.\nDefine acronyms and abbreviations on first usage and if they’re used infrequently.\nUse parallel writing structures for similar things. For example, start each list in the same format.\nPlace distinguishing and important information of a paragraph in the first sentence to aid in scannability.\nUse clear and direct language. Avoid the use of double negatives and exceptions for exceptions.\n\n✅ Recommended: You can continue without a path.\n❌ Not recommended: A missing path won’t prevent you from continuing.\n\nLeft-align text for readability. Don’t center or full-justify text.",
    "crumbs": [
      "General principles",
      "Accessibility"
    ]
  },
  {
    "objectID": "content/en/general-principles/accessibility.html#headings-and-titles",
    "href": "content/en/general-principles/accessibility.html#headings-and-titles",
    "title": "Write accessible documentation",
    "section": "Headings and titles",
    "text": "Headings and titles\nUse descriptive headings and titles because they help a reader navigate their browser and the page. It’s easier to jump between pages and sections of a page if the headings and titles are unique.\n\nUse a heading hierarchy.\nDon’t skip levels of the heading hierarchy. For example, put an h3 element only after an h2 element.\nTo change the visual formatting of a heading, use CSS rather than using a heading level that doesn’t fit the hierarchy.\nDon’t have empty headings or headings with no associated content.\nTag headings using heading elements. In HTML: h1, h2, and so on. In Markdown: #, ##, and so on.\nUse a level-1 heading for the page title or main content heading.\n\nFor more information and examples, see Headings and titles.",
    "crumbs": [
      "General principles",
      "Accessibility"
    ]
  },
  {
    "objectID": "content/en/general-principles/accessibility.html#links",
    "href": "content/en/general-principles/accessibility.html#links",
    "title": "Write accessible documentation",
    "section": "Links",
    "text": "Links\n\nUse meaningful link text. Links should make sense when read out of context.\nDon’t use click here or read this document. Some people who use screen readers jump from link to link to scan a page and need to understand what a link contains.\nUse see to refer to links and cross-references. For more information, see see.\nWhen a link does anything that the reader might not expect, such as downloading a file, opening in a new tab, or jumping to another section on the same page, explain that behavior when you link. For more information, see Explain unexpected link behavior.\nWhen possible, avoid adjacent links. Instead, put a character in between to separate them.",
    "crumbs": [
      "General principles",
      "Accessibility"
    ]
  },
  {
    "objectID": "content/en/general-principles/accessibility.html#lists",
    "href": "content/en/general-principles/accessibility.html#lists",
    "title": "Write accessible documentation",
    "section": "Lists",
    "text": "Lists\n\nIn a procedure, make each instruction a list item.\nUse lists to make it easier for the reader to follow the steps.",
    "crumbs": [
      "General principles",
      "Accessibility"
    ]
  },
  {
    "objectID": "content/en/general-principles/accessibility.html#images",
    "href": "content/en/general-principles/accessibility.html#images",
    "title": "Write accessible documentation",
    "section": "Images",
    "text": "Images\n\nFor every image, provide an alt attribute. For alt attributes that contain alt text, use alt text that adequately summarizes the intent of each image. If the image is purely decorative, use empty alt text.\nDon’t present new information in images. Always provide an equivalent text explanation with the image.\nDon’t repeat images unless absolutely necessary.\nDon’t use images of text, code samples, or terminal output. Use actual text.\nUse SVG instead of PNG if available. SVGs stay sharp when you zoom in on the image.\n\nFor more information, see Text associated with images.",
    "crumbs": [
      "General principles",
      "Accessibility"
    ]
  },
  {
    "objectID": "content/en/general-principles/accessibility.html#videos-recordings-and-gifs",
    "href": "content/en/general-principles/accessibility.html#videos-recordings-and-gifs",
    "title": "Write accessible documentation",
    "section": "Videos, recordings, and GIFs",
    "text": "Videos, recordings, and GIFs\n\nProvide captions, transcripts, or descriptions of audio and video content. For example, you can use the autocaption feature in YouTube.\nEnsure that captions can be translated into major languages.\nDon’t use flickering or flashing elements. They can cause anything from motion sickness to a seizure.",
    "crumbs": [
      "General principles",
      "Accessibility"
    ]
  },
  {
    "objectID": "content/en/general-principles/accessibility.html#buttons-and-icons",
    "href": "content/en/general-principles/accessibility.html#buttons-and-icons",
    "title": "Write accessible documentation",
    "section": "Buttons and icons",
    "text": "Buttons and icons\n\nFor form-submission buttons, use the native HTML button element.\nAn icon is a symbol or image that represents an object or a function. For information about using icons, see the Buttons and icons section of the “UI elements and interaction” page.",
    "crumbs": [
      "General principles",
      "Accessibility"
    ]
  },
  {
    "objectID": "content/en/general-principles/accessibility.html#ui-navigation",
    "href": "content/en/general-principles/accessibility.html#ui-navigation",
    "title": "Write accessible documentation",
    "section": "UI navigation",
    "text": "UI navigation\nWhen you use angle brackets (&gt;) to document menu paths, add an aria-label attribute to help screen readers interpret the brackets as “and then” instead of as “greater than” or “keyboard arrow right”. For more information and examples, see Menu bar.",
    "crumbs": [
      "General principles",
      "Accessibility"
    ]
  },
  {
    "objectID": "content/en/general-principles/accessibility.html#tables",
    "href": "content/en/general-principles/accessibility.html#tables",
    "title": "Write accessible documentation",
    "section": "Tables",
    "text": "Tables\n\nIntroduce tables in the text preceding the table because not all screen readers preannounce tables.\nUse table headings for the first column and the first row only. Use the th element.\nIf your tables include both row and column headings, then mark heading cells with the scope attribute.\nIf your tables have more than one row containing column headings, then use the headers attribute and make sure that the headings have unique IDs.\nAvoid when possible tables in the middle of a numbered procedure.\nDon’t merge cells. Don’t use colspan or rowspan attributes.\nDon’t use tables unless it’s the best method to present your information. Tables are challenging for screen readers. For more information, see List or table.\nDon’t present new information in tables through images or symbols alone; always provide a descriptive alt attribute for the image or symbol. For more information, see Alt text.\n\nFor more information, see Tables.",
    "crumbs": [
      "General principles",
      "Accessibility"
    ]
  },
  {
    "objectID": "content/en/general-principles/accessibility.html#interactive-elements",
    "href": "content/en/general-principles/accessibility.html#interactive-elements",
    "title": "Write accessible documentation",
    "section": "Interactive elements",
    "text": "Interactive elements\nIntroduce an interactive element (such as a button that expands and collapses) in the text preceding the element.\n\n✅ Recommended if practical: To see a list of requirements, expand the Requirements section.\n✅ Recommended: To see a list of requirements, click the arrow_right expander arrow.",
    "crumbs": [
      "General principles",
      "Accessibility"
    ]
  },
  {
    "objectID": "content/en/general-principles/accessibility.html#forms",
    "href": "content/en/general-principles/accessibility.html#forms",
    "title": "Write accessible documentation",
    "section": "Forms",
    "text": "Forms\n\nLabel every input field by using a label element.\nPlace labels outside of fields.\nWhen you’re creating an error message for form validation, clearly state what went wrong and how to fix it—for example: “Name is a required field.”",
    "crumbs": [
      "General principles",
      "Accessibility"
    ]
  },
  {
    "objectID": "content/en/general-principles/accessibility.html#custom-css-and-javascript",
    "href": "content/en/general-principles/accessibility.html#custom-css-and-javascript",
    "title": "Write accessible documentation",
    "section": "Custom CSS and JavaScript",
    "text": "Custom CSS and JavaScript\nTry to use your site’s standard styles and standard JavaScript code as much as possible. However, if you do use custom styles or code, then follow these guidelines:\n\nPick colors that respect accessible color contrast ratios (4.5:1 for text).\nDon’t use visibility:hidden or display:none. Both styles hide information from screen readers.\nAvoid when possible using mouseover events. But if you do use them, then add alternate focus and blur events for keyboard users.\nEnsure that any ordering and positioning defined in styles reflects the DOM and the reading order (such as left to right and top to bottom) of your page.",
    "crumbs": [
      "General principles",
      "Accessibility"
    ]
  },
  {
    "objectID": "content/en/general-principles/accessibility.html#document-rendering",
    "href": "content/en/general-principles/accessibility.html#document-rendering",
    "title": "Write accessible documentation",
    "section": "Document rendering",
    "text": "Document rendering\nMake sure that your document conveys all the information that you intended when you view it in the following contexts:\n\nWithout sound\nUsing only sound\nWithout images, including animation\nWithout color\nUsing a keyboard\nWith screen magnification\nWithout punctuation\n\nDon’t use color, size, location, or other visual cues as the primary way of communicating information.\n\nIf you’re using color, an icon, or outline thickness to convey state, then also provide a secondary cue, such as a change in the text label.\nRefer to buttons and other elements by their label. For visual elements that have no text, don’t try to describe the element. Instead, use the element’s [aria-label](https://www.w3.org/TR/WCAG20-TECHS/ARIA14.html) attribute if possible. For example:\n\n✅ Recommended: Click Save.\n✅ Recommended: Click Notifications.\n❌ Not recommended: Click the bell icon.\n\nDon’t use directional language to orient the reader, such as above, below, or right-hand side. This type of language doesn’t work well for accessibility or for localization reasons. For example, what’s on the right side for left-to-right languages appears on the left side for right-to-left languages.\nDon’t use directional language to refer to a position in a document. For example, the text isn’t below if it’s being read by a screen reader. Instead, use earlier, preceding, or following.\n\n✅ Recommended: In the preceding diagram, clients run jobs on multi-team or single-team clusters.\n❌ Not recommended: In the diagram above, clients run jobs on multi-team or single-team clusters.\n\nIf a UI element is hard to find, provide a screenshot.\n\n✅ Recommended: Click menu Menu.\n❌ Not recommended: In the left-side panel, click the button with three lines.",
    "crumbs": [
      "General principles",
      "Accessibility"
    ]
  },
  {
    "objectID": "content/en/general-principles/accessibility.html#more-resources",
    "href": "content/en/general-principles/accessibility.html#more-resources",
    "title": "Write accessible documentation",
    "section": "More resources",
    "text": "More resources\n\nGoogle’s main accessibility page\nWeb Content Accessibility Guidelines (WCAG) 2.0\nWeb Accessibility Initiative (WAI)\nUsing ARIA\nWeb Accessibility Tutorials",
    "crumbs": [
      "General principles",
      "Accessibility"
    ]
  },
  {
    "objectID": "content/en/general-principles/inclusive-language.html",
    "href": "content/en/general-principles/inclusive-language.html",
    "title": "Write inclusive documentation",
    "section": "",
    "text": "Note: This document includes references to terms that Google considers disrespectful or offensive. The terms are used here to provide usage guidance and alternative terms.\nWe write our developer documentation with inclusivity and diversity in mind. This page is not an exhaustive reference, but provides some general guidelines and examples that illustrate some best practices for writing inclusive documentation.\nFor other writing best practices, see the following resources:",
    "crumbs": [
      "General principles",
      "Inclusive language"
    ]
  },
  {
    "objectID": "content/en/general-principles/inclusive-language.html#avoid-ableist-language",
    "href": "content/en/general-principles/inclusive-language.html#avoid-ableist-language",
    "title": "Write inclusive documentation",
    "section": "Avoid ableist language",
    "text": "Avoid ableist language\nWhen trying to achieve a friendly and conversational tone, problematic ableist language might slip in. This can come in the form of figures of speech and other turns of phrase. Be sensitive to your word choice, especially when aiming for an informal tone. Ableist language includes words or phrases such as crazy, insane, blind to or blind eye to, cripple, dumb, and others. Choose alternative words depending on the context.\n\n\n\n✅ Recommended\n❌ Not recommended\n\n\n\n\nBefore launch, give everything a final check for completeness and clarity.\nBefore launch, give everything a final sanity-check.\n\n\n—\n—\n\n\nThere are some baffling outliers in the data.\nThere are some crazy outliers in the data.\n\n\nIt slows down the service, causing a poor user experience until the queue clears.\nIt cripples the service, causing a poor user experience until the queue clears.\n\n\nReplace the placeholder in this example with the appropriate value.\nReplace the dummy variable in this example with the appropriate value.",
    "crumbs": [
      "General principles",
      "Inclusive language"
    ]
  },
  {
    "objectID": "content/en/general-principles/inclusive-language.html#avoid-unnecessarily-gendered-language",
    "href": "content/en/general-principles/inclusive-language.html#avoid-unnecessarily-gendered-language",
    "title": "Write inclusive documentation",
    "section": "Avoid unnecessarily gendered language",
    "text": "Avoid unnecessarily gendered language\nIn addition to being mindful of the pronouns used in narrative examples, be sensitive to other possible sources of gendered language.\n\n\n\n\n\n\n\n✅ Recommended\n❌ Not recommended\n\n\n\n\nEquipment installation takes around 16 person-hours to complete.\nEquipment installation takes around 16 man-hours to complete.\n\n\n—\n—\n\n\nThis API might be just what your globally conscious company needs to help all of humanity.\nThis API might be just what your globally conscious company needs to help all of mankind.",
    "crumbs": [
      "General principles",
      "Inclusive language"
    ]
  },
  {
    "objectID": "content/en/general-principles/inclusive-language.html#avoid-unnecessarily-violent-language",
    "href": "content/en/general-principles/inclusive-language.html#avoid-unnecessarily-violent-language",
    "title": "Write inclusive documentation",
    "section": "Avoid unnecessarily violent language",
    "text": "Avoid unnecessarily violent language\nAvoid graphically violent or harmful terms. For example, avoid using the term STONITH; instead, describe the process used to stop an errant node in context by using more specific terms.\nIf it’s unavoidable and you must mention a violent or harmful term such as STONITH, mention it once when you first explain the relevant feature, but phrase it in a way that de-emphasizes the term.\n\n✅ Recommended: This might require you to fence failed nodes.\n✅ Sometimes okay: This might require you to fence failed nodes (sometimes referred to as STONITH).\n\nWhen possible, avoid the use of figurative language that can be interpreted as violent, such as hang and hit. Although there might also be nonviolent interpretations for these terms, avoiding their use prevents unintentional harm that might be caused by the violent interpretations.\nAvoid the use of figurative language that relates to the slaughter of animals. For example, avoid using the metaphor of pets versus cattle when comparing on-premises or stateful systems with stateless cloud systems.",
    "crumbs": [
      "General principles",
      "Inclusive language"
    ]
  },
  {
    "objectID": "content/en/general-principles/inclusive-language.html#write-diverse-and-inclusive-examples",
    "href": "content/en/general-principles/inclusive-language.html#write-diverse-and-inclusive-examples",
    "title": "Write inclusive documentation",
    "section": "Write diverse and inclusive examples",
    "text": "Write diverse and inclusive examples\nUse diverse names, genders, ages, and locations in examples. Keep the following advice in mind:\n\nFollow our gender-neutral pronoun guidance.\nAvoid being too culturally specific to the US. Be mindful when referring to specific holidays (see also the word list entry for the holidays), cultural practices, sports, and figures of speech. Being sensitive here also supports writing for a global audience.\nTake care to choose a diverse set of names to help examples reflect the real world diversity of our audience, and see the guidance in that section of the guide for writing about fictional people.\nWhen writing about older adults, avoid terms and figures of speech such as the elderly, the aged, seniors, senior citizens, or 80 years young. Instead, use terms such as older adults or aging population, or mention the person’s relative age or relationship to the other people in your example when those details are relevant.",
    "crumbs": [
      "General principles",
      "Inclusive language"
    ]
  },
  {
    "objectID": "content/en/general-principles/inclusive-language.html#write-about-features-and-users-in-inclusive-ways",
    "href": "content/en/general-principles/inclusive-language.html#write-about-features-and-users-in-inclusive-ways",
    "title": "Write inclusive documentation",
    "section": "Write about features and users in inclusive ways",
    "text": "Write about features and users in inclusive ways\nAvoid referring to people in divisive ways. For example, instead of referring to people as native speakers or non-native speakers of English, consider whether your document needs to discuss this at all, and revise it to discuss the feature in terms that are relevant to anyone regardless of what languages they know.\nAvoid using socially-charged terms for technical concepts where possible. For example, avoid terms such as blacklist, native feature, and first-class citizen, even though these terms might still be widely used. Instead of first-class, consider other terms such as core feature, built-in, or top-level. Choose the best term for your context.\n\nReplace or write around non-inclusive terms\nThis section contains guidance about how to replace or write around a non-inclusive term. If a term is well established in the industry and replacing it could cause confusion, see Replace established terms. If a term occurs in code samples or keywords, see Write around non-inclusive code terms. For information about avoiding non-inclusive jargon, see Jargon.\n\nReplace established terms\nMany non-inclusive terms are in wide use in the industry, such as whitelist. If replacing an established term could cause confusion for readers, you can directly refer to the non-inclusive term on the first use, and put it in parentheses. Then use the inclusive, replacement term throughout the rest of the document.\n\n✅ Recommended: To make sure that administrators get the notification, add them to an allowlist (sometimes called a whitelist). Anyone who isn’t on the allowlist is blocked …\n✅ Recommended: In this model, a Jenkins controller (master) handles HTTP requests. The Jenkins controller is designed to …\n✅ Recommended: In cloud architecture, servers are treated as commodities (sometimes described by using the metaphor cattle, not pets).\n\nIn many cases, instead of directly replacing a word, you can rewrite to improve the clarity of a sentence. For example, instead of replacing the verb whitelist with allowlist, try rewriting the sentence.\n\n✅ Recommended: You can allow requests from a range of IP addresses by entering a CIDR block instead of a single address in the field.\n❌ Not recommended: You can allowlist a range of IP addresses by entering a CIDR block instead of a single address in the field.\n\n\n\nWrite around non-inclusive code terms\nIn some cases, non-inclusive terms are embedded in code (or similar) as names or keywords, and you can’t simply ignore those terms and use different terminology. What you can do, however, is minimize your use of the term (hence avoid propagating it as a term of art), while still providing clear documentation to your readers. Don’t use a non-inclusive name or keyword unless it’s in code font.\nFollowing are scenarios for writing around non-inclusive terms that occur in code and keywords.\nOne scenario is if you’re documenting an existing system in which an entity is already named by using a non-inclusive term. For example, there might be a configuration file that includes the following cluster name:\napiVersion: v1\nkind: Config\npreferences: {}\n\nclusters:\n\\- cluster:\n  name: master\n\\- cluster:\n  name: replica\\-1\nAnother scenario is if your documentation includes a non-inclusive term that’s an established keyword, such as the keyword SLAVE in dialects of SQL:\nSTART SLAVE UNTIL SQL\\_AFTER\\_MTS\\_GAPS;\nThe first time that you refer to a code item that uses a non-inclusive term, you can directly refer to that term, but format it in code font, and put it in parentheses if possible.\n\n✅ Recommended: The configuration file helps you create a parent node (which is named master in the file).\n✅ Recommended: Start the replica by using the START SLAVE statement.\n\nIn subsequent mentions, use the preferred term (parent node, replica). If it’s necessary to refer to the entity name or keyword, continue doing so only with code formatting.",
    "crumbs": [
      "General principles",
      "Inclusive language"
    ]
  },
  {
    "objectID": "content/en/general-principles/inclusive-language.html#avoid-bias-and-harm-when-discussing-disability-and-accessibility",
    "href": "content/en/general-principles/inclusive-language.html#avoid-bias-and-harm-when-discussing-disability-and-accessibility",
    "title": "Write inclusive documentation",
    "section": "Avoid bias and harm when discussing disability and accessibility",
    "text": "Avoid bias and harm when discussing disability and accessibility\nMany developers create products with accessibility and disability in mind. When documenting these features, and when writing about people with disabilities or about accessibility, work to eliminate unintentional bias and harm. Take the time to educate yourself about the ways that the communities that you’re writing about prefer to be identified and described before writing about them in your documentation.\nSome general guidelines in this area include the following:\n\nDon’t describe people without disabilities as normal or healthy. This contributes to othering and alienation of people with disabilities by implying that they are abnormal or sick. Instead, use terms such as nondisabled person, sighted person, hearing person, person without disabilities, or neurotypical person.\nResearch the ways that the people in the communities that you’re writing about prefer to be identified and use the terms that they prefer. In many cases, avoid terms that remove personhood or that define people by their disability. For example, avoid terms such as the disabled or a quadriplegic. Instead, use terms such as people with disabilities or a quadriplegic person.\nHowever, many members of some communities prefer identity-first language—for example, that preference is common in autistic, blind, and Deaf communities. Capitalization of identities also can vary (for some perspectives, visit Identity-First Language and Self-Identification in the Deaf Community). Whenever possible, research and choose terms that respect the ways that people in the communities identify.\nUse see to refer to links and cross-references. For more information, see see.\nAvoid terms that reflect or project feelings and judgments about a person’s disability, such as victim of, suffering from, or wheelchair-bound. Instead, use neutral terms such as experiencing, living with, or uses a wheelchair.\nAvoid euphemisms or patronizing terms such as physically challenged, special, differently abled, or handi-capable.",
    "crumbs": [
      "General principles",
      "Inclusive language"
    ]
  },
  {
    "objectID": "content/en/general-principles/jargon.html",
    "href": "content/en/general-principles/jargon.html",
    "title": "Jargon",
    "section": "",
    "text": "Jargon is the specialized and often figurative terminology of a specific group to represent a larger concept—for example, camel case, swim lane, break-glass procedure, or out-of-the-box. Jargon can also include vaguely defined or overloaded terms like solution, support, or workload.\nTypically, the meaning of jargon isn’t understood except by the specific group. For this reason, jargon can hamper our efforts to publish content that’s clear, that reaches a global audience in multiple languages, that serves readers at various levels of product knowledge, and that’s inclusive of different groups and cultures. For more information about writing with inclusivity and diversity in mind, see Write inclusive documentation.\nHowever, some jargon is widely understood and accepted by our industry or by the intended audience of a document. It can be valuable to include jargon in a document when you know that readers search for those terms. If you’re going to use jargon, consider the following questions:\n\nCan you write around the term? If you don’t need the term for search engine optimization (SEO), try writing around it. For example, instead of writing Hold a post-mortem, write When the project is finished, review what processes worked or didn’t work. Instead of writing Create a back-of-the-envelope design, write Use an informal design process.\nCan you replace the term with a different, more specific term? For example, the word list for this style guide offers several replacement terms: affected area or spatial impact (for blast radius), import or load (for ingest), and ready-made or pre-built (for off-the-shelf). When a term on the word list is marked as “Don’t use” (some jargon can be considered offensive, violent, or not inclusive), replace that term or write around it.\nAre you using the term only once in your document? If so, describe the term in plain language and refer to it in parentheses, or link to a trusted definition.\n\n✅ Recommended: You then move the task to an earlier part of the process (also known as shifting left).\n✅ Recommended: A split-brain situation can develop.\n\nAre you using the term throughout your document? If so, briefly describe the term in parentheses on first reference, or link to a trusted definition.\n\n✅ Recommended: The application is in the same state as a cold standby (a backup or redundant system that’s identical to a primary system).\n✅ Recommended: A better approach is to use a pattern called a dead letter queue.\n\nIs the term used in a command or code sample? If so, use the words only in direct reference to the code items (formatted as code), and make it clear what you’re referring to.\n\n✅ Recommended: Add a user to the allowlist (whitelist) by entering the following: whitelist adduser*EMAIL_ADDRESS*.\n❌ Not recommended: Add a user to the whitelist by entering the following: whitelist adduser*EMAIL_ADDRESS*.\n\n\n\n\n\n Back to top",
    "crumbs": [
      "General principles",
      "Jargon"
    ]
  },
  {
    "objectID": "content/en/general-principles/other-sources.html",
    "href": "content/en/general-principles/other-sources.html",
    "title": "Third-party content",
    "section": "",
    "text": "Don’t copy content from another source because it might violate copyright. Instead, paraphrase and link to their content.\nContent includes the following types: text, images, code, logos, and speech.",
    "crumbs": [
      "General principles",
      "Third-party content"
    ]
  },
  {
    "objectID": "content/en/general-principles/other-sources.html#avoid-third-party-content",
    "href": "content/en/general-principles/other-sources.html#avoid-third-party-content",
    "title": "Third-party content",
    "section": "Avoid third-party content",
    "text": "Avoid third-party content\nUnless you are sure that your company owns the assets, avoid copying from these sources:\n\nThird-party sources: This list includes documentation, websites, books, blogs, videos, images, podcasts, and more.\nReference sources: Avoid copying from dictionaries, encyclopedias, and Wikipedia.\nOpen source product documentation: Open source software (OSS) has different license options, which can range from no reuse without attribution to complete freedom to use the material. It’s not safe to assume that you can reuse this content freely. When in doubt, don’t use their content.\nGitHub content: Different GitHub users might adopt different licenses for their content. It’s not safe to assume that you can reuse this content freely. When in doubt, don’t use their content.",
    "crumbs": [
      "General principles",
      "Third-party content"
    ]
  },
  {
    "objectID": "content/en/general-principles/global-audience.html",
    "href": "content/en/general-principles/global-audience.html",
    "title": "Write for a global audience",
    "section": "",
    "text": "We write our developer documentation in US English, but some of it is translated into languages other than English or is read by developers for whom English is not their primary language.\nWrite with localization, translation, and internationalization in mind. The following list defines these terms:\nFor more information, see Language localization.\nFor other writing best practices, see the following resources:",
    "crumbs": [
      "General principles",
      "Global audience"
    ]
  },
  {
    "objectID": "content/en/general-principles/global-audience.html#best-practices",
    "href": "content/en/general-principles/global-audience.html#best-practices",
    "title": "Write for a global audience",
    "section": "Best practices",
    "text": "Best practices\n\nUse present tense.\nWrite dates and times in unambiguous and clear ways.\nUse screenshots and text in figures sparingly. For more information, see Figures and other images.\nUse qualifying nouns for technical keywords. For example, when referring to a file called example.yaml, call it the example.yaml file and not example.yaml by itself. For more information, see Keywords.\nProvide context. Don’t assume that the reader already knows what you’re talking about.\nAvoid negative constructions when possible. Consider whether it’s necessary to tell the reader what they can’t do instead of what they can.\nAvoid directional language (for example, above or below) in procedural documentation. For more information, see UI elements and interaction.",
    "crumbs": [
      "General principles",
      "Global audience"
    ]
  },
  {
    "objectID": "content/en/general-principles/global-audience.html#write-short-sentences",
    "href": "content/en/general-principles/global-audience.html#write-short-sentences",
    "title": "Write for a global audience",
    "section": "Write short sentences",
    "text": "Write short sentences\nThe shorter the sentence, the easier it is to translate. English sentences can be shorter in length than other languages, so an English sentence of average length might result in a long sentence when translated. Longer sentences can impair understanding, cause rendering issues on the page or product interface, lengthen translation time, and increase translation and review costs.",
    "crumbs": [
      "General principles",
      "Global audience"
    ]
  },
  {
    "objectID": "content/en/general-principles/global-audience.html#use-clear-precise-and-unambiguous-language",
    "href": "content/en/general-principles/global-audience.html#use-clear-precise-and-unambiguous-language",
    "title": "Write for a global audience",
    "section": "Use clear, precise, and unambiguous language",
    "text": "Use clear, precise, and unambiguous language\n\nUse active voice. The subject of the sentence is the person or thing performing the action. With passive voice, it’s often hard for readers to figure out who’s supposed to do something. For more information, see Active voice.\nAddress the reader directly. Use you, instead of the user or they, unless you’re referring to someone who uses the software that the reader is developing. For more information, see Second person and first person.\nUse a simple word. For example, don’t use words like commence when you mean start or begin. Don’t use consequently when you mean so. Don’t use words like utilize or leverage when you mean use. (It’s fine to use these words when you’re conveying a special sense—for example, Cloud Spanner utilizes up to 100% of the available CPU resources.)\nUse a single word when it conveys the same idea as a phrase. For example, don’t use a phrase like a number of when you can use some or many.\nAvoid phrasal verbs when possible. A phrasal verb combines multiple words to form a single verb phrase. These verbs are also known as compound verbs. Try to substitute a simpler verb first. There might not be a better verb; for example, a few exceptions to this rule include set up, log in, and sign in.\n\n✅ Recommended: This document uses the following terms:\n❌ Not recommended: This document makes use of the following terms:\n\nDefine abbreviations. Abbreviations can be confusing out of context, and they don’t translate well. Spell things out whenever possible, at least the first time that you use a given term. For more information, see Abbreviations.\nDon’t use too many modifiers. In particular, don’t use more than two nouns as modifiers of another noun.\n\n✅ Recommended: A cloud-native DevSecOps pipeline in a hybrid environment\n❌ Not recommended: A hybrid cloud-native DevSecOps pipeline\n\nDon’t misplace modifiers. For example, place a word like only immediately before the word or phrase that it relates to. If the meaning is still ambiguous, try rephrasing the sentence.\n\n✅ Recommended: Request only one token.\n✅ Recommended: Request no more than one token.\n❌ Not recommended: Only request one token.\n\nDon’t omit relative pronouns. To provide clarity and to avoid ambiguity, use relative pronouns such as that and which. For more information, see Relative pronouns.\n\n✅ Recommended: You can programmatically update the rules that you previously defined.\n❌ Not recommended: You can programmatically update the rules you previously defined.\n\nClarify antecedents. Using pronouns can get tricky when translators are working with small, unconnected strings of text. Help them out by making things as clear as possible. For example, if a pronoun is ambiguous, then replace it with the appropriate noun.\n\n✅ Recommended: If you use the term green beer in an ad, then make sure that the ad is targeted.\n❌ Not recommended: If you use the term green beer in an ad, then make sure that it’s targeted.\n\nUse helper words. Helper words such as then, that, and of are frequently left out of conversational English. Use these words to avoid ambiguity.\n\n\n\n\n\n\n\n✅ Recommended\n❌ Not recommended\n\n\n\n\nIf the attribute key is not found, then the default value is returned.\nIf the attribute key is not found, the default value is returned.\n\n\n—\n—\n\n\nThis document is intended for data engineers and assumes that you have the following knowledge:\nThis document is intended for data engineers and assumes you have the following knowledge:\n\n\nIdentify all of the datasets.\nIdentify all the datasets.\n\n\nStart the profiler, and then run the app.\nStart the profiler, then run the app.\n\n\n\nSee also Optional pronouns.\nRepeat a word if the redundancy improves comprehension.\n\n\n\n\n\n\n\n✅ Recommended\n❌ Not recommended\n\n\n\n\nIf the VM has started and if you’re able to connect…\nIf the VM has started and you’re able to connect…\n\n\n—\n—\n\n\nThe resource hierarchy design creates both IAM segmentation and network segmentation by default.\nThe resource hierarchy design creates both IAM and network segmentation by default.\n\n\nAn egress rule whose action is allow, whose destination is 0.0.0.0/0, and whose priority is the lowest possible (65535).\nAn egress rule whose action is allow, destination is 0.0.0.0/0, and priority is the lowest possible (65535).",
    "crumbs": [
      "General principles",
      "Global audience"
    ]
  },
  {
    "objectID": "content/en/general-principles/global-audience.html#be-consistent",
    "href": "content/en/general-principles/global-audience.html#be-consistent",
    "title": "Write for a global audience",
    "section": "Be consistent",
    "text": "Be consistent\nIf you use a particular term for a particular concept in one place, then use that exact same term elsewhere, including the same capitalization. If you use different names for the same thing, translators might think you’re referring to different concepts, and thus might use different translations. Inconsistency in terminology and phrasing can greatly increase translation costs, particularly when translation memory and machine translations are used as first steps in translation.\n\nDon’t use the same word to mean different things. In particular, avoid using the same word as both a noun and a verb in close proximity. For examples of the multiple-meanings issue, see the word list entries for once and since.\nUse standardized phrases for frequently used sentences, introductory phrases, and other common tasks. For examples, see introducing links, introducing output, and introducing code samples.\nUse standard English word order. Sentences follow the subject + verb + object order.\nTry to keep the main subject and verb as close to the beginning of the sentence as possible.\nUse the conditional clause first. If you want to tell the audience to do something in a particular circumstance, mention the circumstance before you provide the instruction. For more information, see Sentence structure.\nMake list items consistent. Make list items parallel in structure. Be consistent in your capitalization and punctuation. For more information, see Lists.\nUse consistent typographic formats. Use bold and italics consistently. Don’t switch from using italics for emphasis to underlining. For more information, see Text-formatting summary.\nUse consistent capitalization. For more information, see Capitalization.",
    "crumbs": [
      "General principles",
      "Global audience"
    ]
  },
  {
    "objectID": "content/en/general-principles/global-audience.html#be-inclusive",
    "href": "content/en/general-principles/global-audience.html#be-inclusive",
    "title": "Write for a global audience",
    "section": "Be inclusive",
    "text": "Be inclusive\nYou’re not writing for your culture. Write with inclusivity in mind. For more information, see Writing inclusive documentation.\n\nDon’t be too culturally specific. In particular, don’t refer to specific holidays, cultural practices, or sports unless you’re certain they’re known worldwide.\nUse a diverse set of example names. If you need to use people’s names (for example, as email addresses), use a diverse set of names. For more information, see Example domains and names.\nAvoid colloquialisms, idioms, or slang. Phrases like ballpark figure, back burner, or hang in there can be confusing and difficult to translate.\nAvoid humor. Most humor is difficult to translate, and much humor is culturally specific.\nAvoid referring to seasons. For more information, see Expressing divisions of the year.",
    "crumbs": [
      "General principles",
      "Global audience"
    ]
  },
  {
    "objectID": "content/en/formatting/numbers.html",
    "href": "content/en/formatting/numbers.html",
    "title": "Numbers",
    "section": "",
    "text": "Source: https://developers.google.com/style/numbers\n\nFor information about formatting quantities like 10 MB, see Units of measurement. ## Ordinal numbers\nSpell out all ordinal numbers in text.\n\n✅ Recommended: first, fifth, twelfth, forty-third\n❌ Not recommended: 1st, 5th, 12th, 43rd\n\n\n\nThis section covers when to spell out numbers as words.\nIf it’s important to have the number and associated noun together on the same line, use a nonbreaking space between the number and the noun.\nIn general, spell out the following:\n\nNumbers from zero through nine, except as noted in Numbers as numerals.\n✅ Recommended: two-day total\n✅ Recommended: four options\n✅ Recommended: five minutes\n✅ Recommended: nine developers\nA number that starts a sentence.\n✅ Recommended: Fifteen directories are created.\n\nIn some cases it’s better to rearrange the sentence so that the number appears later.\n\n✅ Recommended: In general, avoid sending files larger than 164 MB as attachments.\n❌ Not recommended: 164 MB is generally considered too large a file to send as an attachment.\n\nException: It’s okay, but non-optimal, to begin a sentence with a four-digit year.\n\nA number that is followed by a numeral.\n✅ Recommended: This procedure creates fifteen 100,000-byte files.\n\nBut\n\n✅ Recommended: This procedure creates 15 of the 100,000-byte files.\nIndefinite and casual numbers.\n\nUsing words like millions or billions is fine for approximate numbers. For precise numbers, use numerals.\n\n✅ Recommended: You can specify thousands of combinations.\n✅ Recommended: The API might return a list of a million songs.\n\n\n\n\nThis section covers when to use numerals to write numbers.\nIf it’s important to have the number and associated noun together on the same line, use a nonbreaking space between the number and the noun.\nIn general, use numerals for the following:\n\nNumbers 10 and greater.\n✅ Recommended: The link expires in 24 hours.\n✅ Recommended: 18 years old\n✅ Recommended: 27 minutes\n✅ Recommended: 728 shipments\n✅ Recommended: 18,000,000 users\n✅ Recommended: 10 chapters\n✅ Recommended: 102 degrees\n\nExceptions: Always use numerals for the following items, even if they’re less than 10:\n\nVersion numbers.\n✅ Recommended: version 3\n\nTechnical quantities, such as amounts of memory, amounts of disk space, numbers of queries, or usage limits.\n\n✅ Recommended: 6 queries per second\n✅ Recommended: 50 Mbps\n✅ Recommended: 64-bit\n\nPage numbers.\nChapter numbers, sections, pages, and so on.\nStep numbers. Avoid referring to step numbers whenever possible, but in edge cases where you have no choice or it makes the most sense, use the numeral.\nPrices.\nNumbers without units, such as numbers used in mathematical expressions.\nNumbers less than 10 when they appear in the same sentence with numbers greater than 9.\n\n✅ Recommended: The menu contains 15 options but 6 of them are deselected.\nNegative numbers.\nMost fractions.\nPercentages.\nDimensions.\nNumbers containing decimal points.\n\nTreat decimal numbers as plural even when less than or equal to 1.0.\n\n✅ Recommended: 1.0 inches\n\nFor decimal numbers less than one, place a zero in front of the decimal point.\n\n✅ Recommended: 0.3 inches\nMeasurements.\n✅ Recommended: 8 pixels\nNumbers in a range.\n\n\n\n\nIn general, avoid using Roman numerals when possible. Instead, use Arabic numerals because they are easier to scan.\nYou can use Roman numerals for sub-steps in numbered procedures.\n\n\n\nExpress fractions as decimal numbers, when possible.\nWhen expressing fractions as words, connect the numerator and denominator with a hyphen unless one of them is already hyphenated.\n\n✅ Recommended: two-fifths\n✅ Recommended: five sixty-fourths\n\n\n\n\nIn general, use numerals and the percent sign (%), without a space between them.\n\n✅ Recommended: 40%\n\nException: If the percentage starts the sentence, then spell out both the number and the word percent.\n\n✅ Recommended: Forty percent of the files\n\n\n\n\nUse a hyphen with no space on either side of it. Do not use an en dash (&ndash;).\n\n✅ Recommended: 2012-2016\n\nFor more information, see the following:\n\nRanges of numbers with units\nRange of numbers\n\n\n\n\nWhen two or more hyphenated compounds that start with numbers modify the same word, use suspended hyphens.\n\n✅ Recommended: You can set up the system to scan for new files at one-, two-, or three-hour intervals.\n\n\n\n\nMake sure that it’s clear what country’s currency you are describing. For more information, see the currency section in Units of measurement.\nFor US dollars, use a comma to delineate the thousands place of whole currency. Use a period to delineate whole currency and fractions of currency. Always include the dollar sign ($) at the beginning of the currency. Do not use any punctuation or spaces to the right of the decimal.\n\n✅ Recommended: The price is $0.006653 per vCPU hour.\n❌ Not recommended: The price is $0.006,653 per vCPU hour.\n✅ Recommended: $10,000 in fees is out of reach for many developers.\n❌ Not recommended: $10 000 in fees is out of reach for many developers.\n\n\n\n\nUse commas and decimal points in accordance with standard American number-formatting.\nSpecifically: in numbers four or more digits long, use commas to set off groups of three digits, counting leftward from the decimal point, in the standard American style. For long decimal numbers, do not use any digit-group separators to the right of the decimal point.\nNote: Even though the International System of Units (SI) uses a thin space as a digit group separator, we use a comma, which is the most common digit group separator used in the US. Use a period for a decimal point, also in the standard American style.\n\n\n\n\n\n\n\nRecommended\nNot recommended\n\n\n\n\nThe limit is 1,532,784 bytes per day.\nThe limit is 1532784 bytes per day.\n\n\nThe API supports up to 2,000 vertices.\nThe API supports up to 2000 vertices.\n\n\n$0.031611/vCPU hour\n$0.031 611/vCPU hour\n\n\n\nNote: Even though in some scientific writing, four-digit numbers don’t use commas, our style is to use a comma for a four-digit number. For more information about decimal points and digit group separators, see Wikipedia’s decimal mark entry.\n\n\n\nUse numerals for dimensions.\nUse a lowercase x between the numerals in the dimensions, with no space between the numerals and the x.\n\n✅ Recommended: 192x192\n❌ Not recommended: 192 x 192\n\n\n\n\nUse standard mathematical notation. Don’t put a space between the base and the exponent.\n\n✅ Recommended: 2 3\n\n\n\n\nAccompany numerical concepts with real-world practical implications to provide tangible meaning. For example, if using a feature incurs additional fees, add a link to pricing calculator.\n\n\n\nAccompany math concepts and numerals with diagrams or other images to support comprehension. For example, if comparing statistics, consider illustrating percentages in a pie chart or a bar graph.",
    "crumbs": [
      "Formatting and organization",
      "Numbers"
    ]
  },
  {
    "objectID": "content/en/formatting/numbers.html#numbers-as-words",
    "href": "content/en/formatting/numbers.html#numbers-as-words",
    "title": "Numbers",
    "section": "",
    "text": "This section covers when to spell out numbers as words.\nIf it’s important to have the number and associated noun together on the same line, use a nonbreaking space between the number and the noun.\nIn general, spell out the following:\n\nNumbers from zero through nine, except as noted in Numbers as numerals.\n✅ Recommended: two-day total\n✅ Recommended: four options\n✅ Recommended: five minutes\n✅ Recommended: nine developers\nA number that starts a sentence.\n✅ Recommended: Fifteen directories are created.\n\nIn some cases it’s better to rearrange the sentence so that the number appears later.\n\n✅ Recommended: In general, avoid sending files larger than 164 MB as attachments.\n❌ Not recommended: 164 MB is generally considered too large a file to send as an attachment.\n\nException: It’s okay, but non-optimal, to begin a sentence with a four-digit year.\n\nA number that is followed by a numeral.\n✅ Recommended: This procedure creates fifteen 100,000-byte files.\n\nBut\n\n✅ Recommended: This procedure creates 15 of the 100,000-byte files.\nIndefinite and casual numbers.\n\nUsing words like millions or billions is fine for approximate numbers. For precise numbers, use numerals.\n\n✅ Recommended: You can specify thousands of combinations.\n✅ Recommended: The API might return a list of a million songs.",
    "crumbs": [
      "Formatting and organization",
      "Numbers"
    ]
  },
  {
    "objectID": "content/en/formatting/numbers.html#numbers-as-numerals",
    "href": "content/en/formatting/numbers.html#numbers-as-numerals",
    "title": "Numbers",
    "section": "",
    "text": "This section covers when to use numerals to write numbers.\nIf it’s important to have the number and associated noun together on the same line, use a nonbreaking space between the number and the noun.\nIn general, use numerals for the following:\n\nNumbers 10 and greater.\n✅ Recommended: The link expires in 24 hours.\n✅ Recommended: 18 years old\n✅ Recommended: 27 minutes\n✅ Recommended: 728 shipments\n✅ Recommended: 18,000,000 users\n✅ Recommended: 10 chapters\n✅ Recommended: 102 degrees\n\nExceptions: Always use numerals for the following items, even if they’re less than 10:\n\nVersion numbers.\n✅ Recommended: version 3\n\nTechnical quantities, such as amounts of memory, amounts of disk space, numbers of queries, or usage limits.\n\n✅ Recommended: 6 queries per second\n✅ Recommended: 50 Mbps\n✅ Recommended: 64-bit\n\nPage numbers.\nChapter numbers, sections, pages, and so on.\nStep numbers. Avoid referring to step numbers whenever possible, but in edge cases where you have no choice or it makes the most sense, use the numeral.\nPrices.\nNumbers without units, such as numbers used in mathematical expressions.\nNumbers less than 10 when they appear in the same sentence with numbers greater than 9.\n\n✅ Recommended: The menu contains 15 options but 6 of them are deselected.\nNegative numbers.\nMost fractions.\nPercentages.\nDimensions.\nNumbers containing decimal points.\n\nTreat decimal numbers as plural even when less than or equal to 1.0.\n\n✅ Recommended: 1.0 inches\n\nFor decimal numbers less than one, place a zero in front of the decimal point.\n\n✅ Recommended: 0.3 inches\nMeasurements.\n✅ Recommended: 8 pixels\nNumbers in a range.",
    "crumbs": [
      "Formatting and organization",
      "Numbers"
    ]
  },
  {
    "objectID": "content/en/formatting/numbers.html#numbers-as-roman-numerals",
    "href": "content/en/formatting/numbers.html#numbers-as-roman-numerals",
    "title": "Numbers",
    "section": "",
    "text": "In general, avoid using Roman numerals when possible. Instead, use Arabic numerals because they are easier to scan.\nYou can use Roman numerals for sub-steps in numbered procedures.",
    "crumbs": [
      "Formatting and organization",
      "Numbers"
    ]
  },
  {
    "objectID": "content/en/formatting/numbers.html#fractions",
    "href": "content/en/formatting/numbers.html#fractions",
    "title": "Numbers",
    "section": "",
    "text": "Express fractions as decimal numbers, when possible.\nWhen expressing fractions as words, connect the numerator and denominator with a hyphen unless one of them is already hyphenated.\n\n✅ Recommended: two-fifths\n✅ Recommended: five sixty-fourths",
    "crumbs": [
      "Formatting and organization",
      "Numbers"
    ]
  },
  {
    "objectID": "content/en/formatting/numbers.html#percentages",
    "href": "content/en/formatting/numbers.html#percentages",
    "title": "Numbers",
    "section": "",
    "text": "In general, use numerals and the percent sign (%), without a space between them.\n\n✅ Recommended: 40%\n\nException: If the percentage starts the sentence, then spell out both the number and the word percent.\n\n✅ Recommended: Forty percent of the files",
    "crumbs": [
      "Formatting and organization",
      "Numbers"
    ]
  },
  {
    "objectID": "content/en/formatting/numbers.html#ranges-of-numbers",
    "href": "content/en/formatting/numbers.html#ranges-of-numbers",
    "title": "Numbers",
    "section": "",
    "text": "Use a hyphen with no space on either side of it. Do not use an en dash (&ndash;).\n\n✅ Recommended: 2012-2016\n\nFor more information, see the following:\n\nRanges of numbers with units\nRange of numbers",
    "crumbs": [
      "Formatting and organization",
      "Numbers"
    ]
  },
  {
    "objectID": "content/en/formatting/numbers.html#suspended-hyphens",
    "href": "content/en/formatting/numbers.html#suspended-hyphens",
    "title": "Numbers",
    "section": "",
    "text": "When two or more hyphenated compounds that start with numbers modify the same word, use suspended hyphens.\n\n✅ Recommended: You can set up the system to scan for new files at one-, two-, or three-hour intervals.",
    "crumbs": [
      "Formatting and organization",
      "Numbers"
    ]
  },
  {
    "objectID": "content/en/formatting/numbers.html#currency",
    "href": "content/en/formatting/numbers.html#currency",
    "title": "Numbers",
    "section": "",
    "text": "Make sure that it’s clear what country’s currency you are describing. For more information, see the currency section in Units of measurement.\nFor US dollars, use a comma to delineate the thousands place of whole currency. Use a period to delineate whole currency and fractions of currency. Always include the dollar sign ($) at the beginning of the currency. Do not use any punctuation or spaces to the right of the decimal.\n\n✅ Recommended: The price is $0.006653 per vCPU hour.\n❌ Not recommended: The price is $0.006,653 per vCPU hour.\n✅ Recommended: $10,000 in fees is out of reach for many developers.\n❌ Not recommended: $10 000 in fees is out of reach for many developers.",
    "crumbs": [
      "Formatting and organization",
      "Numbers"
    ]
  },
  {
    "objectID": "content/en/formatting/numbers.html#commas-and-decimal-points-in-numbers",
    "href": "content/en/formatting/numbers.html#commas-and-decimal-points-in-numbers",
    "title": "Numbers",
    "section": "",
    "text": "Use commas and decimal points in accordance with standard American number-formatting.\nSpecifically: in numbers four or more digits long, use commas to set off groups of three digits, counting leftward from the decimal point, in the standard American style. For long decimal numbers, do not use any digit-group separators to the right of the decimal point.\nNote: Even though the International System of Units (SI) uses a thin space as a digit group separator, we use a comma, which is the most common digit group separator used in the US. Use a period for a decimal point, also in the standard American style.\n\n\n\n\n\n\n\nRecommended\nNot recommended\n\n\n\n\nThe limit is 1,532,784 bytes per day.\nThe limit is 1532784 bytes per day.\n\n\nThe API supports up to 2,000 vertices.\nThe API supports up to 2000 vertices.\n\n\n$0.031611/vCPU hour\n$0.031 611/vCPU hour\n\n\n\nNote: Even though in some scientific writing, four-digit numbers don’t use commas, our style is to use a comma for a four-digit number. For more information about decimal points and digit group separators, see Wikipedia’s decimal mark entry.",
    "crumbs": [
      "Formatting and organization",
      "Numbers"
    ]
  },
  {
    "objectID": "content/en/formatting/numbers.html#dimensions",
    "href": "content/en/formatting/numbers.html#dimensions",
    "title": "Numbers",
    "section": "",
    "text": "Use numerals for dimensions.\nUse a lowercase x between the numerals in the dimensions, with no space between the numerals and the x.\n\n✅ Recommended: 192x192\n❌ Not recommended: 192 x 192",
    "crumbs": [
      "Formatting and organization",
      "Numbers"
    ]
  },
  {
    "objectID": "content/en/formatting/numbers.html#exponents",
    "href": "content/en/formatting/numbers.html#exponents",
    "title": "Numbers",
    "section": "",
    "text": "Use standard mathematical notation. Don’t put a space between the base and the exponent.\n\n✅ Recommended: 2 3",
    "crumbs": [
      "Formatting and organization",
      "Numbers"
    ]
  },
  {
    "objectID": "content/en/formatting/numbers.html#accompany-numerical-concepts-with-real-world-practical-implications",
    "href": "content/en/formatting/numbers.html#accompany-numerical-concepts-with-real-world-practical-implications",
    "title": "Numbers",
    "section": "",
    "text": "Accompany numerical concepts with real-world practical implications to provide tangible meaning. For example, if using a feature incurs additional fees, add a link to pricing calculator.",
    "crumbs": [
      "Formatting and organization",
      "Numbers"
    ]
  },
  {
    "objectID": "content/en/formatting/numbers.html#provide-visuals-for-math-concepts",
    "href": "content/en/formatting/numbers.html#provide-visuals-for-math-concepts",
    "title": "Numbers",
    "section": "",
    "text": "Accompany math concepts and numerals with diagrams or other images to support comprehension. For example, if comparing statistics, consider illustrating percentages in a pie chart or a bar graph.",
    "crumbs": [
      "Formatting and organization",
      "Numbers"
    ]
  },
  {
    "objectID": "content/en/formatting/headings.html",
    "href": "content/en/formatting/headings.html",
    "title": "Headings and titles",
    "section": "",
    "text": "Source: https://developers.google.com/style/headings\n\nUse sentence case for headings and titles. Use descriptive headings and titles because they help a reader navigate their browser and the page. It’s easier to jump between pages and sections of a page if the headings and titles are unique.\n\n\nWrite document titles based on the primary purpose of the document. If a document is primarily a tutorial, but it has a conceptual introduction, write a task-based title. Write section headings based on the type of content that’s in the section.\n\n\n\nGuidance\n✅ Recommended\n❌ Not recommended\n\n\n\n\nFor a task-based heading, start with a bare infinitive, also known as a plain form or base form verb. In English, the imperative mood also uses the base form verb, so it looks the same as the bare infinitive. Task-based headings are frequently used in quickstarts, how-to documents, and tutorials.\nCreate an instance\nCreating an instance\n\n\nFor a conceptual or non-task-based heading, use a noun phrase that doesn’t start with an *-ing_ verb. Noun-phrase headings are frequently used in concept documentation.\nMigration to Google Cloud\nMigrating to Google Cloud\n\n\n\nUse a unique level-1 heading (h1) for each page in a set of documents and only use a level-1 heading once on a page.\nIt’s OK to use task-based and conceptual heading styles in the same document. If a single document includes both task-based and conceptual sections, then use the appropriate phrasing for each section’s heading.\nWhen possible, avoid using -ing verb forms as the first word in any heading or title.\n\n✅ Recommended: Transfer data sets\n❌ Not recommended: Transferring data sets\n\nAn -ing verb form is a present participle or gerund. These verb forms are inconsistently translated when they’re used as the first word in a title, and they increase character count in limited spaces.\nSometimes, there might not be a better alternative to using a gerund, such as the following examples:\n\nBilling\nPricing\n\nIt’s OK to use a gerund in these cases.\nIt’s OK to use an -ing verb form later in a heading or title, such as Introduction to BigQuery monitoring.\nAvoid repeating the exact page title in a heading on the page if possible. For example, if you’re documenting how to create a virtual machine and how to start a virtual machine on the same task-based page, the page title could be Create and start VM instances, with section headings Create a VM and Start a VM.\n\n\nThe following example is a task-based document that includes a conceptual heading and a task-based heading.\n✅ Recommended:\n# Log serving requests by using AI Platform Prediction\n\nThis task-based document shows how to monitor machine learning models. The\ndocument title starts with a bare infinitive.\n\n## ML model monitoring overview\n\nThis section provides a conceptual overview of ML model monitoring. Its title is\na noun phrase.\n\n## Configure notebook settings\n\nThis task-based section provides a series of steps to set variables in a\nnotebook. Its title starts with a bare infinitive.\n\n\n\n\nThis section provides a conceptual overview of ML model monitoring. Its title is a noun phrase.\n\n\n\nThis task-based section provides a series of steps to set variables in a notebook. Its title starts with a bare infinitive.\n\n\n\n\nUse sentence case for headings and titles. For more information, see Capitalization in titles and headings.\nDon’t include numbers in headings to indicate a sequence of sections.\nUse punctuation in headings sparingly, if at all. Punctuation can be a sign that your heading is too complicated. Consider rewriting.\nOnly use an abbreviation of a word in a page title or heading if it’s the more commonly known version of the word. If you do use an abbreviation in the page title or heading, the first instance of the word in a paragraph needs to be defined. You can define the abbreviation in the page title or heading, but consider if the additional length adds value. For SEO, use the more prominent version of the term in headings. For more information, see Abbreviations.\nIn general, guidance that applies to text also applies to headings—for example, contractions and articles.\nAvoid using code items in headings when possible. If you must mention a code item in a heading, add a descriptive noun to the item in code font. For more information, see Grammatical treatment of code elements.\nUse heading tags to structure your content hierarchically—for example, &lt;h1&gt;, &lt;h2&gt;, and &lt;h3&gt; in HTML, or #, ##, and ### in Markdown.\nUse API levels for Android versions.\nTo change the visual formatting of a heading, use CSS rather than using a heading level that doesn’t fit the hierarchy. Don’t make up your own formatting for headings.\nDon’t put a link in a heading because it can easily be confused as a style applied to a heading instead of a link.\nUse a heading hierarchy and take the following items under consideration:\n\nEnsure that each page in your project includes a unique level-1 heading. In some publishing systems, a level-1 heading might be generated automatically based on a page title that you supply.\nDon’t skip levels of the heading hierarchy. For example, put an &lt;h3&gt; tag only under an &lt;h2&gt; tag. ✅ Recommended:\n# Transfer data sets\n\nThis document provides a high-level overview of ways to transfer your data to Google Cloud.\n\n## Estimate costs\n❌ Not recommended:\n# Transfer data sets\n\nThis document provides a high-level overview of ways to transfer your data to Google Cloud.\n\n### Estimate costs\nDon’t use empty headings or headings with no associated content. ✅ Recommended:\n## Migrate VMs to Compute Engine\n\nMigration is not just a single step. The following sections describe the recommended steps.\n\n### Design the migration\n\n### Design the migration\n❌ Not recommended:\n## Migrate VMs to Compute Engine\n\n### Design the migration\n\n\n\n\n\nIf you’re introducing a group of related H3 or lower sections within a larger H2 section, use the phrase the following sections. Don’t refer to the group of sections using the phrases this section or these sections because those phrases are ambiguous.\n✅ Recommended:\n## Views in the data preparation editor\n\nThe following sections describe the views in the data preparation editor.\n\n### Data view\n\n...\n\n### Graph view\n\n...\n\n### Schema view\n\n...",
    "crumbs": [
      "Formatting and organization",
      "Headings and titles"
    ]
  },
  {
    "objectID": "content/en/formatting/headings.html#formatting-a-heading-or-title",
    "href": "content/en/formatting/headings.html#formatting-a-heading-or-title",
    "title": "Headings and titles",
    "section": "",
    "text": "Write document titles based on the primary purpose of the document. If a document is primarily a tutorial, but it has a conceptual introduction, write a task-based title. Write section headings based on the type of content that’s in the section.\n\n\n\nGuidance\n✅ Recommended\n❌ Not recommended\n\n\n\n\nFor a task-based heading, start with a bare infinitive, also known as a plain form or base form verb. In English, the imperative mood also uses the base form verb, so it looks the same as the bare infinitive. Task-based headings are frequently used in quickstarts, how-to documents, and tutorials.\nCreate an instance\nCreating an instance\n\n\nFor a conceptual or non-task-based heading, use a noun phrase that doesn’t start with an *-ing_ verb. Noun-phrase headings are frequently used in concept documentation.\nMigration to Google Cloud\nMigrating to Google Cloud\n\n\n\nUse a unique level-1 heading (h1) for each page in a set of documents and only use a level-1 heading once on a page.\nIt’s OK to use task-based and conceptual heading styles in the same document. If a single document includes both task-based and conceptual sections, then use the appropriate phrasing for each section’s heading.\nWhen possible, avoid using -ing verb forms as the first word in any heading or title.\n\n✅ Recommended: Transfer data sets\n❌ Not recommended: Transferring data sets\n\nAn -ing verb form is a present participle or gerund. These verb forms are inconsistently translated when they’re used as the first word in a title, and they increase character count in limited spaces.\nSometimes, there might not be a better alternative to using a gerund, such as the following examples:\n\nBilling\nPricing\n\nIt’s OK to use a gerund in these cases.\nIt’s OK to use an -ing verb form later in a heading or title, such as Introduction to BigQuery monitoring.\nAvoid repeating the exact page title in a heading on the page if possible. For example, if you’re documenting how to create a virtual machine and how to start a virtual machine on the same task-based page, the page title could be Create and start VM instances, with section headings Create a VM and Start a VM.\n\n\nThe following example is a task-based document that includes a conceptual heading and a task-based heading.\n✅ Recommended:\n# Log serving requests by using AI Platform Prediction\n\nThis task-based document shows how to monitor machine learning models. The\ndocument title starts with a bare infinitive.\n\n## ML model monitoring overview\n\nThis section provides a conceptual overview of ML model monitoring. Its title is\na noun phrase.\n\n## Configure notebook settings\n\nThis task-based section provides a series of steps to set variables in a\nnotebook. Its title starts with a bare infinitive.",
    "crumbs": [
      "Formatting and organization",
      "Headings and titles"
    ]
  },
  {
    "objectID": "content/en/formatting/headings.html#ml-model-monitoring-overview",
    "href": "content/en/formatting/headings.html#ml-model-monitoring-overview",
    "title": "Headings and titles",
    "section": "",
    "text": "This section provides a conceptual overview of ML model monitoring. Its title is a noun phrase.",
    "crumbs": [
      "Formatting and organization",
      "Headings and titles"
    ]
  },
  {
    "objectID": "content/en/formatting/headings.html#configure-notebook-settings",
    "href": "content/en/formatting/headings.html#configure-notebook-settings",
    "title": "Headings and titles",
    "section": "",
    "text": "This task-based section provides a series of steps to set variables in a notebook. Its title starts with a bare infinitive.",
    "crumbs": [
      "Formatting and organization",
      "Headings and titles"
    ]
  },
  {
    "objectID": "content/en/formatting/headings.html#heading-and-title-format",
    "href": "content/en/formatting/headings.html#heading-and-title-format",
    "title": "Headings and titles",
    "section": "",
    "text": "Use sentence case for headings and titles. For more information, see Capitalization in titles and headings.\nDon’t include numbers in headings to indicate a sequence of sections.\nUse punctuation in headings sparingly, if at all. Punctuation can be a sign that your heading is too complicated. Consider rewriting.\nOnly use an abbreviation of a word in a page title or heading if it’s the more commonly known version of the word. If you do use an abbreviation in the page title or heading, the first instance of the word in a paragraph needs to be defined. You can define the abbreviation in the page title or heading, but consider if the additional length adds value. For SEO, use the more prominent version of the term in headings. For more information, see Abbreviations.\nIn general, guidance that applies to text also applies to headings—for example, contractions and articles.\nAvoid using code items in headings when possible. If you must mention a code item in a heading, add a descriptive noun to the item in code font. For more information, see Grammatical treatment of code elements.\nUse heading tags to structure your content hierarchically—for example, &lt;h1&gt;, &lt;h2&gt;, and &lt;h3&gt; in HTML, or #, ##, and ### in Markdown.\nUse API levels for Android versions.\nTo change the visual formatting of a heading, use CSS rather than using a heading level that doesn’t fit the hierarchy. Don’t make up your own formatting for headings.\nDon’t put a link in a heading because it can easily be confused as a style applied to a heading instead of a link.\nUse a heading hierarchy and take the following items under consideration:\n\nEnsure that each page in your project includes a unique level-1 heading. In some publishing systems, a level-1 heading might be generated automatically based on a page title that you supply.\nDon’t skip levels of the heading hierarchy. For example, put an &lt;h3&gt; tag only under an &lt;h2&gt; tag. ✅ Recommended:\n# Transfer data sets\n\nThis document provides a high-level overview of ways to transfer your data to Google Cloud.\n\n## Estimate costs\n❌ Not recommended:\n# Transfer data sets\n\nThis document provides a high-level overview of ways to transfer your data to Google Cloud.\n\n### Estimate costs\nDon’t use empty headings or headings with no associated content. ✅ Recommended:\n## Migrate VMs to Compute Engine\n\nMigration is not just a single step. The following sections describe the recommended steps.\n\n### Design the migration\n\n### Design the migration\n❌ Not recommended:\n## Migrate VMs to Compute Engine\n\n### Design the migration",
    "crumbs": [
      "Formatting and organization",
      "Headings and titles"
    ]
  },
  {
    "objectID": "content/en/formatting/headings.html#refer-to-a-group-of-sections",
    "href": "content/en/formatting/headings.html#refer-to-a-group-of-sections",
    "title": "Headings and titles",
    "section": "",
    "text": "If you’re introducing a group of related H3 or lower sections within a larger H2 section, use the phrase the following sections. Don’t refer to the group of sections using the phrases this section or these sections because those phrases are ambiguous.\n✅ Recommended:\n## Views in the data preparation editor\n\nThe following sections describe the views in the data preparation editor.\n\n### Data view\n\n...\n\n### Graph view\n\n...\n\n### Schema view\n\n...",
    "crumbs": [
      "Formatting and organization",
      "Headings and titles"
    ]
  },
  {
    "objectID": "content/en/formatting/paragraph-structure.html",
    "href": "content/en/formatting/paragraph-structure.html",
    "title": "Paragraph structure",
    "section": "",
    "text": "Source: https://developers.google.com/style/paragraph-structure\n\nBreak up your paragraphs to aid in the scannability of the page and to avoid walls of text. Readers scan for information and read on different devices with different screen sizes. Each paragraph should address a single idea in the fewest words and in the fewest sentences possible.\nDon’t make sentences longer in order to limit the number of sentences in a paragraph. Use shorter sentences and paragraphs.\nA paragraph longer than 5 or 6 sentences is often an indication that the paragraph is trying to convey too much information. If so, break the paragraph into smaller paragraphs or remove some content. However, don’t break paragraphs up if they contain a single idea. It’s OK to have a paragraph with one sentence, and it can be OK if it’s longer than 6 sentences as long as it’s still about one idea.\n\n\nSimilarly to putting the most important information first in a sentence, put the most important information first in a paragraph. Don’t hide the key point of a paragraph at the end of the paragraph. Readers don’t read every word.\n\n\n\nLeft-align text for readability. Don’t center, full-justify, or right-align text.\nDon’t force line breaks (hard returns) within sentences and paragraphs. Line breaks might not work well in resized windows, across different devices, or with enlarged text.",
    "crumbs": [
      "Formatting and organization",
      "Paragraphs"
    ]
  },
  {
    "objectID": "content/en/formatting/paragraph-structure.html#put-critical-information-first",
    "href": "content/en/formatting/paragraph-structure.html#put-critical-information-first",
    "title": "Paragraph structure",
    "section": "",
    "text": "Similarly to putting the most important information first in a sentence, put the most important information first in a paragraph. Don’t hide the key point of a paragraph at the end of the paragraph. Readers don’t read every word.",
    "crumbs": [
      "Formatting and organization",
      "Paragraphs"
    ]
  },
  {
    "objectID": "content/en/formatting/paragraph-structure.html#format-paragraphs",
    "href": "content/en/formatting/paragraph-structure.html#format-paragraphs",
    "title": "Paragraph structure",
    "section": "",
    "text": "Left-align text for readability. Don’t center, full-justify, or right-align text.\nDon’t force line breaks (hard returns) within sentences and paragraphs. Line breaks might not work well in resized windows, across different devices, or with enlarged text.",
    "crumbs": [
      "Formatting and organization",
      "Paragraphs"
    ]
  },
  {
    "objectID": "content/en/formatting/phone-numbers.html",
    "href": "content/en/formatting/phone-numbers.html",
    "title": "Format phone numbers in text",
    "section": "",
    "text": "Source: https://developers.google.com/style/phone-numbers\n\nThis page describes how to use and format phone numbers in technical documentation. This page doesn’t provide guidance on how to enter or use phone numbers in Google or third-party products. If you need information about entering phone numbers in a specific product, consult the product documentation or contact product support.\n\n\nMost phone numbers in our documentation are examples. To show an example phone number, use a US number in the range 800‑555‑0100 through 800‑555‑0199. That range is reserved for use in examples and in fiction.\nNever use a real phone number in examples.\n\n\n\nTo ensure that a phone number is displayed on the same line, use a nonbreaking hyphen (&#8209;) where appropriate in HTML or Markdown.\nExampleHTMLMarkdownMore\n415‑555‑0132\n415&#8209;555&#8209;0132\n415&#8209;555&#8209;0132\n\n\n\nTo format a real phone number in the US, Canada, and other NANP (North American Numbering Plan) countries, use a nonbreaking hyphen to separate the area code, three-digit exchange code, and four-digit number.\n\n✅ Recommended: 415‑555‑0132\n\n\n\n\nTo format a real phone number in non-NANP countries, include the country and area codes. Insert a plus sign immediately before the country code (no space); the plus sign stands in for a prefix known as an exit code, which lets you dial out of a country. Each country has a different exit code.\nFor more information, see the ITU document about standardized formatting for phone numbers.\n\n✅ Recommended: +1‑415‑555‑0132\n\n\n\n\nTo specify a phone extension, follow the phone number with the word extension, and then specify the extension number.\n\n✅ Recommended: 415‑555‑0132, extension 987",
    "crumbs": [
      "Formatting and organization",
      "Phone numbers"
    ]
  },
  {
    "objectID": "content/en/formatting/phone-numbers.html#use-example-phone-numbers",
    "href": "content/en/formatting/phone-numbers.html#use-example-phone-numbers",
    "title": "Format phone numbers in text",
    "section": "",
    "text": "Most phone numbers in our documentation are examples. To show an example phone number, use a US number in the range 800‑555‑0100 through 800‑555‑0199. That range is reserved for use in examples and in fiction.\nNever use a real phone number in examples.",
    "crumbs": [
      "Formatting and organization",
      "Phone numbers"
    ]
  },
  {
    "objectID": "content/en/formatting/phone-numbers.html#format-phone-numbers-in-html-or-markdown",
    "href": "content/en/formatting/phone-numbers.html#format-phone-numbers-in-html-or-markdown",
    "title": "Format phone numbers in text",
    "section": "",
    "text": "To ensure that a phone number is displayed on the same line, use a nonbreaking hyphen (&#8209;) where appropriate in HTML or Markdown.\nExampleHTMLMarkdownMore\n415‑555‑0132\n415&#8209;555&#8209;0132\n415&#8209;555&#8209;0132",
    "crumbs": [
      "Formatting and organization",
      "Phone numbers"
    ]
  },
  {
    "objectID": "content/en/formatting/phone-numbers.html#format-north-american-phone-numbers",
    "href": "content/en/formatting/phone-numbers.html#format-north-american-phone-numbers",
    "title": "Format phone numbers in text",
    "section": "",
    "text": "To format a real phone number in the US, Canada, and other NANP (North American Numbering Plan) countries, use a nonbreaking hyphen to separate the area code, three-digit exchange code, and four-digit number.\n\n✅ Recommended: 415‑555‑0132",
    "crumbs": [
      "Formatting and organization",
      "Phone numbers"
    ]
  },
  {
    "objectID": "content/en/formatting/phone-numbers.html#format-international-phone-numbers",
    "href": "content/en/formatting/phone-numbers.html#format-international-phone-numbers",
    "title": "Format phone numbers in text",
    "section": "",
    "text": "To format a real phone number in non-NANP countries, include the country and area codes. Insert a plus sign immediately before the country code (no space); the plus sign stands in for a prefix known as an exit code, which lets you dial out of a country. Each country has a different exit code.\nFor more information, see the ITU document about standardized formatting for phone numbers.\n\n✅ Recommended: +1‑415‑555‑0132",
    "crumbs": [
      "Formatting and organization",
      "Phone numbers"
    ]
  },
  {
    "objectID": "content/en/formatting/phone-numbers.html#format-phone-numbers-that-include-an-extension",
    "href": "content/en/formatting/phone-numbers.html#format-phone-numbers-that-include-an-extension",
    "title": "Format phone numbers in text",
    "section": "",
    "text": "To specify a phone extension, follow the phone number with the word extension, and then specify the extension number.\n\n✅ Recommended: 415‑555‑0132, extension 987",
    "crumbs": [
      "Formatting and organization",
      "Phone numbers"
    ]
  },
  {
    "objectID": "content/en/formatting/italics-terms.html",
    "href": "content/en/formatting/italics-terms.html",
    "title": "Use italics to discuss terms",
    "section": "",
    "text": "Source: https://developers.google.com/style/italics-terms\n\nThis page describes two circumstances when we italicize terms that we’re introducing or discussing.\nFor more information about italics and other formatting, including HTML and Markdown formatting for italics, see Text-formatting summary.\n\n\nWhen you introduce a new term that you’re defining immediately, use italics on the first mention of the term. Don’t use bold or quotation marks.\n\n✅ Recommended: A Clos network is a kind of multistage circuit switching network.\n\n\n\n\nWhen you refer to a word, phrase, or letter in reference to the word, phrase, or letter itself (sometimes called words as words) use italics. Don’t use bold or quotation marks.\n\n✅ Recommended: Don’t use & (ampersand) as a conjunction. Use the word and instead.\n✅ Recommended: To form a possessive of a singular noun, add ’s to the end of the word.",
    "crumbs": [
      "Formatting and organization",
      "Italics with terms"
    ]
  },
  {
    "objectID": "content/en/formatting/italics-terms.html#new-terms",
    "href": "content/en/formatting/italics-terms.html#new-terms",
    "title": "Use italics to discuss terms",
    "section": "",
    "text": "When you introduce a new term that you’re defining immediately, use italics on the first mention of the term. Don’t use bold or quotation marks.\n\n✅ Recommended: A Clos network is a kind of multistage circuit switching network.",
    "crumbs": [
      "Formatting and organization",
      "Italics with terms"
    ]
  },
  {
    "objectID": "content/en/formatting/italics-terms.html#words-as-words",
    "href": "content/en/formatting/italics-terms.html#words-as-words",
    "title": "Use italics to discuss terms",
    "section": "",
    "text": "When you refer to a word, phrase, or letter in reference to the word, phrase, or letter itself (sometimes called words as words) use italics. Don’t use bold or quotation marks.\n\n✅ Recommended: Don’t use & (ampersand) as a conjunction. Use the word and instead.\n✅ Recommended: To form a possessive of a singular noun, add ’s to the end of the word.",
    "crumbs": [
      "Formatting and organization",
      "Italics with terms"
    ]
  },
  {
    "objectID": "content/en/formatting/lists.html",
    "href": "content/en/formatting/lists.html",
    "title": "Lists",
    "section": "",
    "text": "Source: https://developers.google.com/style/lists\n\n\nTables and lists are both ways to present a set of similarly structured items. Sometimes it’s not obvious when to choose one presentation over the other. To decide which presentation to use, see List or table?\nNote: Don’t use a list to show only one item; a single item isn’t really a list. If you want to set a single item off from surrounding text, then use some other formatting.\n\n\nChoose one of the following list styles:\n\nNumbered list\nBulleted list\nDescription list\n\nThe following sections further describe each list style.\n\n\n\nHTML elements: ol, li\nUsed for:\nA set of items where the sequence is significant, such as ordered steps, phases, or priorities. The following is an example of a numbered list:\n\nHere’s a sequence of steps to follow:\n\nOpen the box.\nRemove the bobcat from the box.\nFeed the bobcat.\n\n\nNested sequential lists are labeled with lowercase letters or lowercase Roman numerals. The following is an example of a nested sequential list:\n\nHere’s a list of things to do after breakfast, in order:\n\nGo shopping.\n\nBuy groceries:\n\nFlour\nEggs\nSugar\nButter\n\nGo to mall:\n\nBuy dress.\nBuy shoes.\n\n\nMake cake.\nBuild birthday present out of spare parts.\nClean house.\n\n\nSee also Sub-steps in numbered procedures.\n\n\nHTML elements: ul, li\nUsed for:\nA set of items that’s not a sequence, such as a set of nonsequential options or examples. Make sure it’s clear whether or not every item is required. The following is an example of a bulleted list:\n\nHere’s a list of things that can go wrong, in no particular order:\n\nYour bicycle might explode.\nThe sun might go out.\nAn ant might break its leg and require a tiny splint.\n\n\n\n\n\n\n[!NOTE] The list type name in the original text is “Description list that uses bulleted run-in headings.” Since the “Description list” formatting in the original uses the HTML dl, dt, and dd tags——which have no direct equivalent in Markdown, thus some adjustments have been made here.\n\nHTML elements: ul, li\nUsed for:\nA set of introductory terms or phrases, each followed by a description, definition, or explanation. Use this type of list if you want to highlight and explain several concepts or save space. For information about how to format and punctuate run-in headings and their descriptions, see Description lists that use run-in headings in this document.\nThe following is an example of a description list that uses bulleted run-in headings:\n\nHere are some descriptions of types of birds:\n\nEmu: the best kind of bird\nCrow: the other best kind of bird\nPeacock: also the best kind of bird\nPhoenix: an even better kind of bird\n\n\n\n\n\n\nAny list item can contain more than one paragraph.\nTo create multiple paragraphs, use the p element rather than using the br element. (The HTML specification describes which uses of the br element are legitimate and which aren’t.)\nExample of a list item that contains more than one paragraph:\n\nThis list item is a single paragraph.\nThis list item contains multiple paragraphs.\n\nAs you can see!\n\nThis is another list item that’s only one paragraph long.\n\n\n\n\nIntroduce a list with the appropriate context. In most cases, precede a list with an introductory sentence. The sentence can end with a colon or a period; usually a colon if it immediately precedes the list, usually a period if there’s more material (such as a note paragraph) between the introduction and the list.\nIf the list doesn’t need any additional context other than the heading that immediately precedes the list, it’s OK to not introduce a list with an introductory sentence.\nIntroduce a list with a complete sentence, not a partial one that’s completed by the list items. You can also use the following as a noun phrase (see following in the word list).\n✅ Recommended:\n\nUse the Submit button for any of the following purposes:\n\nTo submit the form.\nTo indicate that you’re done.\nTo allow the next person to enter their data.\n\nTo get the USB driver, follow these steps:\n\nClick Tools &gt; Android &gt; SDK Manager.\nSelect Google USB Driver, and then click OK.\n\nIf you need to add an instance manually, do the following:\n\nClick Create instance.\nFor Name, enter a name.\n\nObjectives\n\nCreate an instance\nSnapshot an instance\nDelete an instance\n\n\n❌ Not recommended:\n\nUse the Submit button to:\n\nSubmit the form.\nIndicate that you’re done.\nAllow the next person to enter their data.\n\nTo get the USB driver:\n\nClick Tools &gt; Android &gt; SDK Manager.\nSelect Google USB Driver, and then click OK.\n\nIf you need to add an instance manually:\n\nClick Create instance.\nFor Name, enter a name.\n\nObjectives In the following tutorial, you will complete the following tasks:\n\nCreate an instance\nSnapshot an instance\nDelete an instance\n\n\nFor information about introducing sub-steps, see Sub-steps in numbered procedures.\nFor information about punctuation and capitalization of lists, see Capitalization and end punctuation.\n\n\n\nUse nonstandard numbering in the following situations:\n\nTo present a list in reverse-numerical order, use an ol element with a reversed attribute.\nTo set a value manually, use the value attribute. In some cases, setting a value manually can be convenient. However, in most cases, it isn’t a good idea to manually number a list item in a numbered list, because if the number of items changes later, you’ll have to manually change the value.\n\n\n\n\nFor information about sub-steps in a numbered procedure, see Procedures.\n\n\n\nUse the same syntax/structure for all list items in a given list, if possible.\n\n\n\nCapitalization and end punctuation depend on the type of list and the contents of the list.\n\n\nStart each list item with a capital letter, unless case is an important part of the information conveyed by the list—such as in a list of glossary terms.\nEnd each list item with a period or other appropriate sentence-ending punctuation, except in the following cases:\n\nIf the item consists of a single word, don’t add end punctuation.\nIf the item doesn’t include a verb, don’t add end punctuation.\nIf the item is entirely in code font, don’t add end punctuation.\nIf the item is entirely link text or a document title, don’t add end punctuation.\n\nIf you end up with inconsistent punctuation in your list, then either rewrite your list to use parallel construction or add end punctuation to every list item for consistency.\n✅ Recommended:\nThe following words are adjectives:\n\nBig\nSmall\nGratuitous\n\n✅ Recommended:\nThe SDK supports the following UI elements:\n\nText box\nBulleted list\nButton\n\n✅ Recommended:\nThe API supports the following actions:\n\nCreate\nReplace\nUpdate\nDelete\n\n✅ Recommended:\nYou can do any of the following by using the API:\n\nCreate an item.\nReplace one item with another.\nUpdate an item.\nDelete an item.\n\n\n\n\n\n[!NOTE] Sorry! Because the formatting in the original text is difficult to represent in Markdown, this section is not provided. To view the original content, click here: Description lists\n\n\n\n\nIn most contexts, format run-in headings as follows:\n\nStart the run-in heading with a capital letter.\nEnd the run-in heading with a period or a colon, but be consistent within the list.\nYou can decide whether to bold the punctuation that ends the heading based on factors such as on-page consistency.\n\nFor the descriptions that follow the punctuation, capitalize the first letter as follows:\n\nIf the text follows a period, start the text with a capital letter.\nIf the text follows a colon, start the text with a lowercase letter.\n\nTo end the descriptive text, punctuate as follows:\n\nIf the description follows a period, end the description with a period.\nIf the description follows a colon, do one of the following:\n\nIf the description is a list of items or short phrases without verbs, don’t include a period.\nIf the description includes a verb or expresses a standalone thought, end the description with a period.\n\n\nDon’t use a dash to set off a description from an item in a description list. For more information, see Colons instead of dashes in lists.\n✅ Recommended:\n\nThe following words are adjectives:\n\nBig: a short word\nRelevant: a fancy word\nGratuitous: a long word\nPurple: a vibrant color\n\n\n✅ Recommended:\n\nThe coffee shop has several great choices:\n\nCoffee: latte, mocha, cappuccino, espresso, macchiato\nTea: chai tea, chai latte, black tea, green tea, herbal tea\n\n\n✅ Recommended:\n\nBudget Airlines reduces your ticket cost in several ways:\n\nIt increases fuel economy by reducing baggage weight. By charging astronomical prices for anything larger than a wallet….\nIt carries more passengers per flight. By reducing leg room to industry and medical minimums, it fits more seats….\n\n\n\n\nNote: The guidelines here about list punctuation differ from the Material Design guidelines. If you’re writing UI text rather than prose documentation, then follow the Material Design guidelines.\n\n\n\n\n\nWhen you write a list in a paragraph, use serial commas to separate the items.\nAvoid ending a list with etc. or phrases like and so on. Instead, introduce the list in a way that makes it clear that the list isn’t all-inclusive.\n\n✅ Recommended: The service processes data like event logs, clickstream data, social network interactions, and e-commerce transactions.\n❌ Not recommended: The service processes event logs, clickstream data, social network interactions, e-commerce transactions, etc.\n\nFor more information, see etc.",
    "crumbs": [
      "Formatting and organization",
      "Lists"
    ]
  },
  {
    "objectID": "content/en/formatting/lists.html#types-of-lists",
    "href": "content/en/formatting/lists.html#types-of-lists",
    "title": "Lists",
    "section": "",
    "text": "Choose one of the following list styles:\n\nNumbered list\nBulleted list\nDescription list\n\nThe following sections further describe each list style.",
    "crumbs": [
      "Formatting and organization",
      "Lists"
    ]
  },
  {
    "objectID": "content/en/formatting/lists.html#numbered-list",
    "href": "content/en/formatting/lists.html#numbered-list",
    "title": "Lists",
    "section": "",
    "text": "HTML elements: ol, li\nUsed for:\nA set of items where the sequence is significant, such as ordered steps, phases, or priorities. The following is an example of a numbered list:\n\nHere’s a sequence of steps to follow:\n\nOpen the box.\nRemove the bobcat from the box.\nFeed the bobcat.\n\n\nNested sequential lists are labeled with lowercase letters or lowercase Roman numerals. The following is an example of a nested sequential list:\n\nHere’s a list of things to do after breakfast, in order:\n\nGo shopping.\n\nBuy groceries:\n\nFlour\nEggs\nSugar\nButter\n\nGo to mall:\n\nBuy dress.\nBuy shoes.\n\n\nMake cake.\nBuild birthday present out of spare parts.\nClean house.\n\n\nSee also Sub-steps in numbered procedures.\n\n\nHTML elements: ul, li\nUsed for:\nA set of items that’s not a sequence, such as a set of nonsequential options or examples. Make sure it’s clear whether or not every item is required. The following is an example of a bulleted list:\n\nHere’s a list of things that can go wrong, in no particular order:\n\nYour bicycle might explode.\nThe sun might go out.\nAn ant might break its leg and require a tiny splint.\n\n\n\n\n\n\n[!NOTE] The list type name in the original text is “Description list that uses bulleted run-in headings.” Since the “Description list” formatting in the original uses the HTML dl, dt, and dd tags——which have no direct equivalent in Markdown, thus some adjustments have been made here.\n\nHTML elements: ul, li\nUsed for:\nA set of introductory terms or phrases, each followed by a description, definition, or explanation. Use this type of list if you want to highlight and explain several concepts or save space. For information about how to format and punctuate run-in headings and their descriptions, see Description lists that use run-in headings in this document.\nThe following is an example of a description list that uses bulleted run-in headings:\n\nHere are some descriptions of types of birds:\n\nEmu: the best kind of bird\nCrow: the other best kind of bird\nPeacock: also the best kind of bird\nPhoenix: an even better kind of bird",
    "crumbs": [
      "Formatting and organization",
      "Lists"
    ]
  },
  {
    "objectID": "content/en/formatting/lists.html#multiple-paragraph-list-items",
    "href": "content/en/formatting/lists.html#multiple-paragraph-list-items",
    "title": "Lists",
    "section": "",
    "text": "Any list item can contain more than one paragraph.\nTo create multiple paragraphs, use the p element rather than using the br element. (The HTML specification describes which uses of the br element are legitimate and which aren’t.)\nExample of a list item that contains more than one paragraph:\n\nThis list item is a single paragraph.\nThis list item contains multiple paragraphs.\n\nAs you can see!\n\nThis is another list item that’s only one paragraph long.",
    "crumbs": [
      "Formatting and organization",
      "Lists"
    ]
  },
  {
    "objectID": "content/en/formatting/lists.html#introductory-sentences-for-lists",
    "href": "content/en/formatting/lists.html#introductory-sentences-for-lists",
    "title": "Lists",
    "section": "",
    "text": "Introduce a list with the appropriate context. In most cases, precede a list with an introductory sentence. The sentence can end with a colon or a period; usually a colon if it immediately precedes the list, usually a period if there’s more material (such as a note paragraph) between the introduction and the list.\nIf the list doesn’t need any additional context other than the heading that immediately precedes the list, it’s OK to not introduce a list with an introductory sentence.\nIntroduce a list with a complete sentence, not a partial one that’s completed by the list items. You can also use the following as a noun phrase (see following in the word list).\n✅ Recommended:\n\nUse the Submit button for any of the following purposes:\n\nTo submit the form.\nTo indicate that you’re done.\nTo allow the next person to enter their data.\n\nTo get the USB driver, follow these steps:\n\nClick Tools &gt; Android &gt; SDK Manager.\nSelect Google USB Driver, and then click OK.\n\nIf you need to add an instance manually, do the following:\n\nClick Create instance.\nFor Name, enter a name.\n\nObjectives\n\nCreate an instance\nSnapshot an instance\nDelete an instance\n\n\n❌ Not recommended:\n\nUse the Submit button to:\n\nSubmit the form.\nIndicate that you’re done.\nAllow the next person to enter their data.\n\nTo get the USB driver:\n\nClick Tools &gt; Android &gt; SDK Manager.\nSelect Google USB Driver, and then click OK.\n\nIf you need to add an instance manually:\n\nClick Create instance.\nFor Name, enter a name.\n\nObjectives In the following tutorial, you will complete the following tasks:\n\nCreate an instance\nSnapshot an instance\nDelete an instance\n\n\nFor information about introducing sub-steps, see Sub-steps in numbered procedures.\nFor information about punctuation and capitalization of lists, see Capitalization and end punctuation.",
    "crumbs": [
      "Formatting and organization",
      "Lists"
    ]
  },
  {
    "objectID": "content/en/formatting/lists.html#unusual-list-numbering",
    "href": "content/en/formatting/lists.html#unusual-list-numbering",
    "title": "Lists",
    "section": "",
    "text": "Use nonstandard numbering in the following situations:\n\nTo present a list in reverse-numerical order, use an ol element with a reversed attribute.\nTo set a value manually, use the value attribute. In some cases, setting a value manually can be convenient. However, in most cases, it isn’t a good idea to manually number a list item in a numbered list, because if the number of items changes later, you’ll have to manually change the value.",
    "crumbs": [
      "Formatting and organization",
      "Lists"
    ]
  },
  {
    "objectID": "content/en/formatting/lists.html#sub-steps-in-a-numbered-procedure",
    "href": "content/en/formatting/lists.html#sub-steps-in-a-numbered-procedure",
    "title": "Lists",
    "section": "",
    "text": "For information about sub-steps in a numbered procedure, see Procedures.",
    "crumbs": [
      "Formatting and organization",
      "Lists"
    ]
  },
  {
    "objectID": "content/en/formatting/lists.html#parallel-syntax",
    "href": "content/en/formatting/lists.html#parallel-syntax",
    "title": "Lists",
    "section": "",
    "text": "Use the same syntax/structure for all list items in a given list, if possible.",
    "crumbs": [
      "Formatting and organization",
      "Lists"
    ]
  },
  {
    "objectID": "content/en/formatting/lists.html#capitalization-and-end-punctuation",
    "href": "content/en/formatting/lists.html#capitalization-and-end-punctuation",
    "title": "Lists",
    "section": "",
    "text": "Capitalization and end punctuation depend on the type of list and the contents of the list.\n\n\nStart each list item with a capital letter, unless case is an important part of the information conveyed by the list—such as in a list of glossary terms.\nEnd each list item with a period or other appropriate sentence-ending punctuation, except in the following cases:\n\nIf the item consists of a single word, don’t add end punctuation.\nIf the item doesn’t include a verb, don’t add end punctuation.\nIf the item is entirely in code font, don’t add end punctuation.\nIf the item is entirely link text or a document title, don’t add end punctuation.\n\nIf you end up with inconsistent punctuation in your list, then either rewrite your list to use parallel construction or add end punctuation to every list item for consistency.\n✅ Recommended:\nThe following words are adjectives:\n\nBig\nSmall\nGratuitous\n\n✅ Recommended:\nThe SDK supports the following UI elements:\n\nText box\nBulleted list\nButton\n\n✅ Recommended:\nThe API supports the following actions:\n\nCreate\nReplace\nUpdate\nDelete\n\n✅ Recommended:\nYou can do any of the following by using the API:\n\nCreate an item.\nReplace one item with another.\nUpdate an item.\nDelete an item.\n\n\n\n\n\n[!NOTE] Sorry! Because the formatting in the original text is difficult to represent in Markdown, this section is not provided. To view the original content, click here: Description lists\n\n\n\n\nIn most contexts, format run-in headings as follows:\n\nStart the run-in heading with a capital letter.\nEnd the run-in heading with a period or a colon, but be consistent within the list.\nYou can decide whether to bold the punctuation that ends the heading based on factors such as on-page consistency.\n\nFor the descriptions that follow the punctuation, capitalize the first letter as follows:\n\nIf the text follows a period, start the text with a capital letter.\nIf the text follows a colon, start the text with a lowercase letter.\n\nTo end the descriptive text, punctuate as follows:\n\nIf the description follows a period, end the description with a period.\nIf the description follows a colon, do one of the following:\n\nIf the description is a list of items or short phrases without verbs, don’t include a period.\nIf the description includes a verb or expresses a standalone thought, end the description with a period.\n\n\nDon’t use a dash to set off a description from an item in a description list. For more information, see Colons instead of dashes in lists.\n✅ Recommended:\n\nThe following words are adjectives:\n\nBig: a short word\nRelevant: a fancy word\nGratuitous: a long word\nPurple: a vibrant color\n\n\n✅ Recommended:\n\nThe coffee shop has several great choices:\n\nCoffee: latte, mocha, cappuccino, espresso, macchiato\nTea: chai tea, chai latte, black tea, green tea, herbal tea\n\n\n✅ Recommended:\n\nBudget Airlines reduces your ticket cost in several ways:\n\nIt increases fuel economy by reducing baggage weight. By charging astronomical prices for anything larger than a wallet….\nIt carries more passengers per flight. By reducing leg room to industry and medical minimums, it fits more seats….\n\n\n\n\nNote: The guidelines here about list punctuation differ from the Material Design guidelines. If you’re writing UI text rather than prose documentation, then follow the Material Design guidelines.",
    "crumbs": [
      "Formatting and organization",
      "Lists"
    ]
  },
  {
    "objectID": "content/en/formatting/lists.html#comma-separated-lists",
    "href": "content/en/formatting/lists.html#comma-separated-lists",
    "title": "Lists",
    "section": "",
    "text": "When you write a list in a paragraph, use serial commas to separate the items.\nAvoid ending a list with etc. or phrases like and so on. Instead, introduce the list in a way that makes it clear that the list isn’t all-inclusive.\n\n✅ Recommended: The service processes data like event logs, clickstream data, social network interactions, and e-commerce transactions.\n❌ Not recommended: The service processes event logs, clickstream data, social network interactions, e-commerce transactions, etc.\n\nFor more information, see etc.",
    "crumbs": [
      "Formatting and organization",
      "Lists"
    ]
  },
  {
    "objectID": "content/en/formatting/procedures.html",
    "href": "content/en/formatting/procedures.html",
    "title": "Procedures",
    "section": "",
    "text": "Source: https://developers.google.com/style/procedures\n\n\n\nIn most cases, introduce a procedure with an introductory sentence. This introductory sentence should provide context to the reader that isn’t part of the section heading. Don’t simply repeat the heading: if the heading explains what the procedure is, and no additional context is needed, then don’t include an introductory statement.\nThe sentence can end with a colon or a period. Use a colon if it immediately precedes the procedure. Use a period if there’s more material (such as a note paragraph) between the introduction and the procedure.\nYou can introduce a procedure with an imperative statement. Don’t introduce a procedure with a partial sentence that’s completed by the numbered steps.\n\n✅ Recommended: To customize the buttons, follow these steps:\n✅ Also recommended: Customize the buttons:\n✅ Also recommended: To customize the buttons, do the following:\n❌ Not recommended: To customize the buttons:\n\nFor more information about introducing lists, see Lists.\n\n\n\nWhen a procedure consists of only one step, write the step in one sentence and format it as a bulleted list.\n✅ Recommended:\n\n\nTo clear (flush) the entire log, click Clear logcat.\n\n\n❌ Not recommended:\n\nTo clear (flush) the entire log, follow this step:\n\nClick Clear logcat.\n\n\n❌ Also not recommended:\n\nTo clear (flush) the entire log, follow this step:\n\nClick Clear logcat.\n\n\n\n\n\nIn a numbered procedure, sub-steps are labeled with lowercase letters, and sub-sub-steps get lowercase Roman numerals.\nWhen a step has sub-steps, treat the step like an introductory sentence: put a colon or a period at the end of the step, as appropriate.\nFor more information about lists, see Lists.\n✅ Recommended:\n\n\nTo add a VM instance, do the following:\n\nClick Create instance.\nFor Name, enter a name for the VM instance, and then do the following:\n\nFor Region, specify where you want to deploy the VM instance.\nFor Machine type, select an option.\n\nClick Create.\n\nTo connect to the VM instance by using SSH, click SSH.\n\n\n\n\n\nTo document a complex procedural step, use the following order:\n\nDescribe the action to take.\nList a command, if necessary.\nExplain any placeholders that are used in the command. For more information, see Formatting placeholders.\nExplain the command in more detail, if necessary.\nList the output of the command, if necessary. For more information, see Output from commands.\nIn a separate paragraph, explain the result of an action, or any output, if necessary.\n\nThe following example demonstrates the preceding order:\n\nPlan the Terraform deployment:\nterraform plan -out=NAME\nReplace NAME with the name of your Terraform plan.\nThe terraform plan command does the following:\n\nParses the Terraform configuration, building a list of resources to provision.\nRefreshes the current state of resources already provisioned in Google Cloud.\nCreates a plan to make the currently provisioned resources match the parsed configuration.\n\nThe output is similar to the following:\n  Plan: 26 to add, 0 to change, 0 to destroy.\n  This plan was saved to: NAME\n\nThe output shows what resources to add, change, or destroy.\n\n\n\nIn general, use one step for each action. However, you can combine small actions into one step by using angle brackets (&gt;) for sequential menu selections.\n✅ Recommended:\n\n\nClick Next &gt; Finish.\n\n\n✅ Also recommended:\n\n\nClick File &gt; New &gt; Document.\n\n\nDon’t make the steps too long. If they feel too long, consider splitting them into multiple steps.\n\n\n\nIn general, if there’s more than one way to complete a task, then document one procedure that’s accessible for all readers. If all methods are accessible, pick the shortest and simplest approach if possible. If you need to document multiple ways to complete a task, then separate them in different pages, headings, or tabs.\nThe following guidelines can help you choose which procedure to document:\n\nChoose a procedure that lets readers do all the steps by using only a keyboard.\nChoose the shortest procedure.\nChoose a procedure that uses a programming language that most of your audience is familiar with.\n\n\n\n\nAvoid repeating procedures. Instead, reference those procedures and link to them.\n✅ Recommended:\n\n\nCreate a user as you did in the previous step.\n\n\n✅ Also recommended:\n\n\nCreate a user as you did in the previous step.\n\n\n\n\n\nFor an optional step, at the beginning of the step, type Optional followed by a colon.\n✅ Recommended:\n\n\nOptional: Type an arbitrary string …\n\n\n❌ Not recommended:\n\n\n(Optional) Type an arbitrary string …\n\n\n\n\n\nTell the reader where to complete an action—for example, in a particular tool or UI field—before you state the action.\n✅ Recommended:\n\n\nIn Google Docs, click File&gt; New&gt; Document.\nIn the Google Cloud console, go to the Monitoring page.\n\n\n❌ Not recommended:\n\n\nClick File&gt; New&gt; Document in Google Docs.\nGo to the Monitoring page in the Google Cloud console.\n\n\nIf a set of procedures is split across multiple headings, then in each procedure, restate where the reader completes the action. For example, if two procedures in a document take place in the console, then start both procedures with “In the console …”\n\n\n\nFor some steps, it’s useful to state the goal that the step accomplishes.\nWhen a step includes a goal, state the goal before the action. This structure helps readers understand and complete the step more easily.\n✅ Recommended:\n\n\nTo start a new document, click File&gt; New&gt; Document.\n\n\n❌ Not recommended:\n\nClick File&gt; New&gt; Document to start a new document.\n\nSometimes, the preceding format can imply that the required step is optional. In such cases, use the following format:\n✅ Recommended:\n\n\nStart a new document: click File&gt; New&gt; Document.\n\n\nIt’s usually clear within the context of a procedure whether a step is required. In such cases, the “To …” format is more natural than the colon format.\nTo determine whether you need to use the colon format, consider how the goal of the step relates to the goal of the procedure. For example, in a procedure for creating a bar chart, a step with the goal “To create the chart” is clearly required. A step with the goal “To enhance the chart” is also unlikely to create confusion. But a step with the goal “To sort the data by date” might or might not be necessary. To clarify that the step isn’t optional, use “Sort the data by date:” instead.\n\n\n\nSome steps consist of an action along with a resulting reaction that helps the reader navigate to the next step. State the action first and the result second. Keep the result in the same paragraph as the action. But also consider whether you can avoid repetitiveness and overwhelming the reader with too much bolding of UI elements.\n✅ Recommended:\n\n\nClick Run. The query results appear after the query runs.\n\n\n✅ Recommended:\n\n\nClick Enter.\nIn the New file dialog that appears, click Next.\n\n\n❌ Not recommended:\n\n\nClick Enter. The New file dialog appears.\nIn the New file dialog, click Next.\n\n\nFor information about describing output, see Output from commands.\nOther steps benefit from including a justification for why the step is important. State the action first and the justification second.\n✅ Recommended:\n\n\nStore the private key in a secure location. You need it later.\n\n\n\n\n\n\n\n\nGuidance\n✅ Recommended\n❌ Not recommended\n\n\n\n\nMake sure that the first sentence in a procedural step includes an imperative verb.\nClone the repository that contains the sample data.\nYou need the project ID later in this document. Retrieve the project ID.\n\n\nUse complete sentences.\n\n\n\n\nUse parallel structure and consistent verb form.\nDownload the service account key to your local machine. Click More, and then click Download.\nDownload the service account key to your local machine by clicking More and then clicking Download file.\n\n\nFor an optional step, type Optional: as the first word of the step.\nOptional: Type an arbitrary string…\n(Optional) Type an arbitrary string…\n\n\nSet the context (such as a tool or an environment) in which the reader performs a procedure. If there are multiple headings associated with a set of procedures, restate the context of the procedure in the first step, even if the context is the same as in the previous procedure.\nIn Cloud Shell, connect to the development cluster. In the Google Cloud console, go to the BigQuery page.\n\n\n\nWrite in the order that the reader needs to follow. State the location of the action before stating the action.\nIn Google Docs, click File&gt; New&gt; Document. In the Google Cloud console, go to the Monitoring page.\nClick File&gt; New&gt; Document in Google Docs. Go to the Monitoring page in the Google Cloud console.\n\n\nState the purpose or goal of the action before stating the action.\nTo start a new document, click File&gt; New&gt; Document.\nClick File&gt; New&gt; Document to start a new document.\n\n\nDon’t use directional language to orient the reader, such as above, below, or right-hand side. This type of language doesn’t work well for accessibility or for localization. If a UI element is hard to find, provide a screenshot. For information about documenting icons, see Buttons and icons.\nClick Menu. In the preceding diagram,… In the following diagram,…\nClick the button with three lines. In the above diagram, … In the diagram below, …\n\n\nDon’t use please.\nTo open a document, click File&gt; Open.\nTo open a document, please click File&gt; Open.\n\n\nAvoid using run the following command to introduce code. Instead, focus on what the command does.\nIn Cloud Shell, deploy the load generator:… Define a firewall rule to allow internal traffic:…\nIn Cloud Shell, deploy the load generator by running the following command:… Run the following command:…\n\n\nIf the reader must press Enter after a step, then include that instruction as part of the step.\nClick the search box, type custom function, and then press Enter.\n1. Click the search box and type custom function. 2. Press Enter.\n\n\nDon’t include keyboard shortcuts.\nCopy the command, and then paste it…\nPress Ctrl+C, and then press Ctrl+V…\n\n\nWhen there’s more than one way to do something, give only the best way. Giving alternate ways can confuse readers.\n\n\n\n\nIf your procedure includes code samples, see how to format code samples.\n\n\n\n\nIf your procedure includes commands, see how to format commands.\n\n\n\n\nEnsure that the reader has the information that they need in order to prepare for the task ahead of time. Having information in advance supports task management, executive functioning, memory, and emotional regulation.\nThe following hardware and software are required:…\n\n\n\nInclude as few steps as possible to complete the task. Limit interruptions in the path.\n\n\n\n\nFocus on one reader decision at a time. Separate each instruction by making each instruction a separate list item.",
    "crumbs": [
      "Formatting and organization",
      "Procedures"
    ]
  },
  {
    "objectID": "content/en/formatting/procedures.html#introductory-sentences",
    "href": "content/en/formatting/procedures.html#introductory-sentences",
    "title": "Procedures",
    "section": "",
    "text": "In most cases, introduce a procedure with an introductory sentence. This introductory sentence should provide context to the reader that isn’t part of the section heading. Don’t simply repeat the heading: if the heading explains what the procedure is, and no additional context is needed, then don’t include an introductory statement.\nThe sentence can end with a colon or a period. Use a colon if it immediately precedes the procedure. Use a period if there’s more material (such as a note paragraph) between the introduction and the procedure.\nYou can introduce a procedure with an imperative statement. Don’t introduce a procedure with a partial sentence that’s completed by the numbered steps.\n\n✅ Recommended: To customize the buttons, follow these steps:\n✅ Also recommended: Customize the buttons:\n✅ Also recommended: To customize the buttons, do the following:\n❌ Not recommended: To customize the buttons:\n\nFor more information about introducing lists, see Lists.",
    "crumbs": [
      "Formatting and organization",
      "Procedures"
    ]
  },
  {
    "objectID": "content/en/formatting/procedures.html#single-step-procedures",
    "href": "content/en/formatting/procedures.html#single-step-procedures",
    "title": "Procedures",
    "section": "",
    "text": "When a procedure consists of only one step, write the step in one sentence and format it as a bulleted list.\n✅ Recommended:\n\n\nTo clear (flush) the entire log, click Clear logcat.\n\n\n❌ Not recommended:\n\nTo clear (flush) the entire log, follow this step:\n\nClick Clear logcat.\n\n\n❌ Also not recommended:\n\nTo clear (flush) the entire log, follow this step:\n\nClick Clear logcat.",
    "crumbs": [
      "Formatting and organization",
      "Procedures"
    ]
  },
  {
    "objectID": "content/en/formatting/procedures.html#sub-steps-in-numbered-procedures",
    "href": "content/en/formatting/procedures.html#sub-steps-in-numbered-procedures",
    "title": "Procedures",
    "section": "",
    "text": "In a numbered procedure, sub-steps are labeled with lowercase letters, and sub-sub-steps get lowercase Roman numerals.\nWhen a step has sub-steps, treat the step like an introductory sentence: put a colon or a period at the end of the step, as appropriate.\nFor more information about lists, see Lists.\n✅ Recommended:\n\n\nTo add a VM instance, do the following:\n\nClick Create instance.\nFor Name, enter a name for the VM instance, and then do the following:\n\nFor Region, specify where you want to deploy the VM instance.\nFor Machine type, select an option.\n\nClick Create.\n\nTo connect to the VM instance by using SSH, click SSH.",
    "crumbs": [
      "Formatting and organization",
      "Procedures"
    ]
  },
  {
    "objectID": "content/en/formatting/procedures.html#order-of-multiple-components-in-a-step",
    "href": "content/en/formatting/procedures.html#order-of-multiple-components-in-a-step",
    "title": "Procedures",
    "section": "",
    "text": "To document a complex procedural step, use the following order:\n\nDescribe the action to take.\nList a command, if necessary.\nExplain any placeholders that are used in the command. For more information, see Formatting placeholders.\nExplain the command in more detail, if necessary.\nList the output of the command, if necessary. For more information, see Output from commands.\nIn a separate paragraph, explain the result of an action, or any output, if necessary.\n\nThe following example demonstrates the preceding order:\n\nPlan the Terraform deployment:\nterraform plan -out=NAME\nReplace NAME with the name of your Terraform plan.\nThe terraform plan command does the following:\n\nParses the Terraform configuration, building a list of resources to provision.\nRefreshes the current state of resources already provisioned in Google Cloud.\nCreates a plan to make the currently provisioned resources match the parsed configuration.\n\nThe output is similar to the following:\n  Plan: 26 to add, 0 to change, 0 to destroy.\n  This plan was saved to: NAME\n\nThe output shows what resources to add, change, or destroy.",
    "crumbs": [
      "Formatting and organization",
      "Procedures"
    ]
  },
  {
    "objectID": "content/en/formatting/procedures.html#multi-action-procedures",
    "href": "content/en/formatting/procedures.html#multi-action-procedures",
    "title": "Procedures",
    "section": "",
    "text": "In general, use one step for each action. However, you can combine small actions into one step by using angle brackets (&gt;) for sequential menu selections.\n✅ Recommended:\n\n\nClick Next &gt; Finish.\n\n\n✅ Also recommended:\n\n\nClick File &gt; New &gt; Document.\n\n\nDon’t make the steps too long. If they feel too long, consider splitting them into multiple steps.",
    "crumbs": [
      "Formatting and organization",
      "Procedures"
    ]
  },
  {
    "objectID": "content/en/formatting/procedures.html#multiple-procedures-for-the-same-task",
    "href": "content/en/formatting/procedures.html#multiple-procedures-for-the-same-task",
    "title": "Procedures",
    "section": "",
    "text": "In general, if there’s more than one way to complete a task, then document one procedure that’s accessible for all readers. If all methods are accessible, pick the shortest and simplest approach if possible. If you need to document multiple ways to complete a task, then separate them in different pages, headings, or tabs.\nThe following guidelines can help you choose which procedure to document:\n\nChoose a procedure that lets readers do all the steps by using only a keyboard.\nChoose the shortest procedure.\nChoose a procedure that uses a programming language that most of your audience is familiar with.",
    "crumbs": [
      "Formatting and organization",
      "Procedures"
    ]
  },
  {
    "objectID": "content/en/formatting/procedures.html#repetitive-procedures",
    "href": "content/en/formatting/procedures.html#repetitive-procedures",
    "title": "Procedures",
    "section": "",
    "text": "Avoid repeating procedures. Instead, reference those procedures and link to them.\n✅ Recommended:\n\n\nCreate a user as you did in the previous step.\n\n\n✅ Also recommended:\n\n\nCreate a user as you did in the previous step.",
    "crumbs": [
      "Formatting and organization",
      "Procedures"
    ]
  },
  {
    "objectID": "content/en/formatting/procedures.html#optional-steps",
    "href": "content/en/formatting/procedures.html#optional-steps",
    "title": "Procedures",
    "section": "",
    "text": "For an optional step, at the beginning of the step, type Optional followed by a colon.\n✅ Recommended:\n\n\nOptional: Type an arbitrary string …\n\n\n❌ Not recommended:\n\n\n(Optional) Type an arbitrary string …",
    "crumbs": [
      "Formatting and organization",
      "Procedures"
    ]
  },
  {
    "objectID": "content/en/formatting/procedures.html#steps-that-say-where-to-complete-a-task",
    "href": "content/en/formatting/procedures.html#steps-that-say-where-to-complete-a-task",
    "title": "Procedures",
    "section": "",
    "text": "Tell the reader where to complete an action—for example, in a particular tool or UI field—before you state the action.\n✅ Recommended:\n\n\nIn Google Docs, click File&gt; New&gt; Document.\nIn the Google Cloud console, go to the Monitoring page.\n\n\n❌ Not recommended:\n\n\nClick File&gt; New&gt; Document in Google Docs.\nGo to the Monitoring page in the Google Cloud console.\n\n\nIf a set of procedures is split across multiple headings, then in each procedure, restate where the reader completes the action. For example, if two procedures in a document take place in the console, then start both procedures with “In the console …”",
    "crumbs": [
      "Formatting and organization",
      "Procedures"
    ]
  },
  {
    "objectID": "content/en/formatting/procedures.html#steps-with-goals",
    "href": "content/en/formatting/procedures.html#steps-with-goals",
    "title": "Procedures",
    "section": "",
    "text": "For some steps, it’s useful to state the goal that the step accomplishes.\nWhen a step includes a goal, state the goal before the action. This structure helps readers understand and complete the step more easily.\n✅ Recommended:\n\n\nTo start a new document, click File&gt; New&gt; Document.\n\n\n❌ Not recommended:\n\nClick File&gt; New&gt; Document to start a new document.\n\nSometimes, the preceding format can imply that the required step is optional. In such cases, use the following format:\n✅ Recommended:\n\n\nStart a new document: click File&gt; New&gt; Document.\n\n\nIt’s usually clear within the context of a procedure whether a step is required. In such cases, the “To …” format is more natural than the colon format.\nTo determine whether you need to use the colon format, consider how the goal of the step relates to the goal of the procedure. For example, in a procedure for creating a bar chart, a step with the goal “To create the chart” is clearly required. A step with the goal “To enhance the chart” is also unlikely to create confusion. But a step with the goal “To sort the data by date” might or might not be necessary. To clarify that the step isn’t optional, use “Sort the data by date:” instead.",
    "crumbs": [
      "Formatting and organization",
      "Procedures"
    ]
  },
  {
    "objectID": "content/en/formatting/procedures.html#steps-with-results-or-justifications",
    "href": "content/en/formatting/procedures.html#steps-with-results-or-justifications",
    "title": "Procedures",
    "section": "",
    "text": "Some steps consist of an action along with a resulting reaction that helps the reader navigate to the next step. State the action first and the result second. Keep the result in the same paragraph as the action. But also consider whether you can avoid repetitiveness and overwhelming the reader with too much bolding of UI elements.\n✅ Recommended:\n\n\nClick Run. The query results appear after the query runs.\n\n\n✅ Recommended:\n\n\nClick Enter.\nIn the New file dialog that appears, click Next.\n\n\n❌ Not recommended:\n\n\nClick Enter. The New file dialog appears.\nIn the New file dialog, click Next.\n\n\nFor information about describing output, see Output from commands.\nOther steps benefit from including a justification for why the step is important. State the action first and the justification second.\n✅ Recommended:\n\n\nStore the private key in a secure location. You need it later.",
    "crumbs": [
      "Formatting and organization",
      "Procedures"
    ]
  },
  {
    "objectID": "content/en/formatting/procedures.html#summary-of-guidelines-for-writing-procedures",
    "href": "content/en/formatting/procedures.html#summary-of-guidelines-for-writing-procedures",
    "title": "Procedures",
    "section": "",
    "text": "Guidance\n✅ Recommended\n❌ Not recommended\n\n\n\n\nMake sure that the first sentence in a procedural step includes an imperative verb.\nClone the repository that contains the sample data.\nYou need the project ID later in this document. Retrieve the project ID.\n\n\nUse complete sentences.\n\n\n\n\nUse parallel structure and consistent verb form.\nDownload the service account key to your local machine. Click More, and then click Download.\nDownload the service account key to your local machine by clicking More and then clicking Download file.\n\n\nFor an optional step, type Optional: as the first word of the step.\nOptional: Type an arbitrary string…\n(Optional) Type an arbitrary string…\n\n\nSet the context (such as a tool or an environment) in which the reader performs a procedure. If there are multiple headings associated with a set of procedures, restate the context of the procedure in the first step, even if the context is the same as in the previous procedure.\nIn Cloud Shell, connect to the development cluster. In the Google Cloud console, go to the BigQuery page.\n\n\n\nWrite in the order that the reader needs to follow. State the location of the action before stating the action.\nIn Google Docs, click File&gt; New&gt; Document. In the Google Cloud console, go to the Monitoring page.\nClick File&gt; New&gt; Document in Google Docs. Go to the Monitoring page in the Google Cloud console.\n\n\nState the purpose or goal of the action before stating the action.\nTo start a new document, click File&gt; New&gt; Document.\nClick File&gt; New&gt; Document to start a new document.\n\n\nDon’t use directional language to orient the reader, such as above, below, or right-hand side. This type of language doesn’t work well for accessibility or for localization. If a UI element is hard to find, provide a screenshot. For information about documenting icons, see Buttons and icons.\nClick Menu. In the preceding diagram,… In the following diagram,…\nClick the button with three lines. In the above diagram, … In the diagram below, …\n\n\nDon’t use please.\nTo open a document, click File&gt; Open.\nTo open a document, please click File&gt; Open.\n\n\nAvoid using run the following command to introduce code. Instead, focus on what the command does.\nIn Cloud Shell, deploy the load generator:… Define a firewall rule to allow internal traffic:…\nIn Cloud Shell, deploy the load generator by running the following command:… Run the following command:…\n\n\nIf the reader must press Enter after a step, then include that instruction as part of the step.\nClick the search box, type custom function, and then press Enter.\n1. Click the search box and type custom function. 2. Press Enter.\n\n\nDon’t include keyboard shortcuts.\nCopy the command, and then paste it…\nPress Ctrl+C, and then press Ctrl+V…\n\n\nWhen there’s more than one way to do something, give only the best way. Giving alternate ways can confuse readers.\n\n\n\n\nIf your procedure includes code samples, see how to format code samples.\n\n\n\n\nIf your procedure includes commands, see how to format commands.\n\n\n\n\nEnsure that the reader has the information that they need in order to prepare for the task ahead of time. Having information in advance supports task management, executive functioning, memory, and emotional regulation.\nThe following hardware and software are required:…\n\n\n\nInclude as few steps as possible to complete the task. Limit interruptions in the path.\n\n\n\n\nFocus on one reader decision at a time. Separate each instruction by making each instruction a separate list item.",
    "crumbs": [
      "Formatting and organization",
      "Procedures"
    ]
  },
  {
    "objectID": "content/en/key-resources/text-formatting.html",
    "href": "content/en/key-resources/text-formatting.html",
    "title": "Text-formatting summary",
    "section": "",
    "text": "The page summarizes, and provides a quick reference for, many of the general text-formatting conventions covered elsewhere in the style guide. For more information, see Visual formatting.",
    "crumbs": [
      "Key resources",
      "Text-formatting summary"
    ]
  },
  {
    "objectID": "content/en/key-resources/text-formatting.html#bold",
    "href": "content/en/key-resources/text-formatting.html#bold",
    "title": "Text-formatting summary",
    "section": "Bold",
    "text": "Bold\nUse bold formatting, &lt;b&gt; or **, only for UI elements and run-in headings, including at the beginning of notices.\nAlthough a double underscore, __, can also indicate bold styling in Markdown, it can be difficult to distinguish in a text editor. It’s best to use the double asterisk for bold in Markdown.",
    "crumbs": [
      "Key resources",
      "Text-formatting summary"
    ]
  },
  {
    "objectID": "content/en/key-resources/text-formatting.html#italic",
    "href": "content/en/key-resources/text-formatting.html#italic",
    "title": "Text-formatting summary",
    "section": "Italic",
    "text": "Italic\nIn general, use italics sparingly.\nWhen you’re discussing or introducing terms, such as when defining terms or using words as words, use italics formatting, &lt;i&gt; or _. For more information, see Use italics to discuss terms.\nWhen you need to add emphasis to indicate importance, use italics, not bold or underline. But usually, your words can carry the emphasis without adding italics. To indicate semantic emphasis in HTML, use the em element, which renders as italics in most contexts. To indicate emphasis in Markdown, use underscores (_), which render as italics; you can’t do semantic tagging in Markdown.\nAlthough an asterisk, *, can also indicate italics in Markdown, we recommend underscores to make it easier for humans to distinguish italics from bold in the Markdown file.\nItalicize titles of books, movies, web series, and other full-length works, unless they’re part of a link. For more information, see Cross-references and linking.\nItalicize mathematical variables and version variables. For example, x + y = 3, version 1.4.x.",
    "crumbs": [
      "Key resources",
      "Text-formatting summary"
    ]
  },
  {
    "objectID": "content/en/key-resources/text-formatting.html#underline",
    "href": "content/en/key-resources/text-formatting.html#underline",
    "title": "Text-formatting summary",
    "section": "Underline",
    "text": "Underline\nReserve underlining for link text. For more information, see Style link text.",
    "crumbs": [
      "Key resources",
      "Text-formatting summary"
    ]
  },
  {
    "objectID": "content/en/key-resources/text-formatting.html#code-font",
    "href": "content/en/key-resources/text-formatting.html#code-font",
    "title": "Text-formatting summary",
    "section": "Code font",
    "text": "Code font\nUse &lt;code&gt; in HTML or ` in Markdown to apply a monospace font and other styling to code in text, inline code, and user input.\nUse code blocks, &lt;pre&gt; or ```, for code samples or other blocks of code.\nDo not override or modify font styles inline.\nUse code font to mark up code, such as filenames, class names, method names, HTTP status codes, console output, and placeholders. For more information, see Some specific items to put in code font.",
    "crumbs": [
      "Key resources",
      "Text-formatting summary"
    ]
  },
  {
    "objectID": "content/en/key-resources/text-formatting.html#capitalization",
    "href": "content/en/key-resources/text-formatting.html#capitalization",
    "title": "Text-formatting summary",
    "section": "Capitalization",
    "text": "Capitalization\nUse American English style for general capitalization.\nUse sentence case in all headings, titles, and navigation.\nUse all-capitals for placeholders.",
    "crumbs": [
      "Key resources",
      "Text-formatting summary"
    ]
  },
  {
    "objectID": "content/en/key-resources/text-formatting.html#quotation-marks",
    "href": "content/en/key-resources/text-formatting.html#quotation-marks",
    "title": "Text-formatting summary",
    "section": "Quotation marks",
    "text": "Quotation marks\nIn general, use American English style when punctuating quotations.\nFor titles of shorter works——such as articles or episodes in a web series——put titles in quotation marks, unless they’re part of a link.",
    "crumbs": [
      "Key resources",
      "Text-formatting summary"
    ]
  },
  {
    "objectID": "content/en/key-resources/text-formatting.html#font-type-size-and-color",
    "href": "content/en/key-resources/text-formatting.html#font-type-size-and-color",
    "title": "Text-formatting summary",
    "section": "Font type, size, and color",
    "text": "Font type, size, and color\nDo not override global styles for font type, size, or color.\nUse semantic HTML or Markdown to control the style of text on a page——for example, code tags in HTML (&lt;code&gt;) or backticks in Markdown (`)——instead of manually styling text with a monospace font.",
    "crumbs": [
      "Key resources",
      "Text-formatting summary"
    ]
  },
  {
    "objectID": "content/en/key-resources/text-formatting.html#other-punctuation-conventions",
    "href": "content/en/key-resources/text-formatting.html#other-punctuation-conventions",
    "title": "Text-formatting summary",
    "section": "Other punctuation conventions",
    "text": "Other punctuation conventions\nDon’t use ampersands (&) as conjunctions or shorthand for and. Use and instead. That includes headings and navigation. Exception: It’s okay to use & in cases where you need to refer to a UI element or the name of a menu that uses &.\nPut quotation marks and end punctuation outside of link text. For more information, see the Punctuation around link text and Quotation marks and italics sections of the “Cross-references and linking” page.",
    "crumbs": [
      "Key resources",
      "Text-formatting summary"
    ]
  },
  {
    "objectID": "content/en/key-resources/product-names.html",
    "href": "content/en/key-resources/product-names.html",
    "title": "Product names",
    "section": "",
    "text": "This page describes how to use product names.",
    "crumbs": [
      "Key resources",
      "Product names"
    ]
  },
  {
    "objectID": "content/en/key-resources/product-names.html#capitalize-product-names",
    "href": "content/en/key-resources/product-names.html#capitalize-product-names",
    "title": "Product names",
    "section": "Capitalize product names",
    "text": "Capitalize product names\nIn general, Google product names are in title case, sometimes called init-capped, which means that every word is capitalized except for prepositions like of or on and articles like a or the. When you refer to a Google product, use title case except when you’re matching a UI label. For information about how to refer to UI labels, see UI elements and interaction.\nWhen you write about any product, follow the official capitalization for the names of brands, companies, software, products, services, features, and terms defined by companies and open source communities.\n\nFor example, if you’re using Kubernetes-related terms, then follow the capitalization that’s shown in the Kubernetes Concepts documentation.\n\n✅ Recommended in a Kubernetes context: A Job creates one or more Pods.\n✅ Recommended: The Cloud Scheduler job publishes a message to a Pub/Sub topic at one-minute intervals.\n\nIf an official name begins with a lowercase letter, then put it in lowercase even at the start of a sentence. But it’s better to revise the sentence to avoid putting a lowercase word at the start, if possible.\n\n✅ Recommended: You can use macOS to run the app.\n❌ Not recommended: macOS can run the app.\n\n\n\nFeature names\nA feature is a distinctive attribute or capability of a product. Features are usually described in terms of what they can do as part of a product. In general, feature names are lowercase, although there are exceptions.\nWhen you write about a feature, don’t capitalize it unless the name is officially capitalized. If you’re unsure, follow the precedent that’s set by other documents that describe the feature. As with products, match the capitalization of a UI label if you’re referring to one.\nFor more general information about capitalization, see Capitalization.",
    "crumbs": [
      "Key resources",
      "Product names"
    ]
  },
  {
    "objectID": "content/en/key-resources/product-names.html#shorten-google-product-names",
    "href": "content/en/key-resources/product-names.html#shorten-google-product-names",
    "title": "Product names",
    "section": "Shorten Google product names",
    "text": "Shorten Google product names\nWhen referring to a Google product, sometimes you might want to abbreviate the product name. For example, when you’re referring to Google Spreadsheets, it can be awkward to refer to it as Google Spreadsheets every time; sometimes you might want to call it Spreadsheets.\nUse the full trademarked product name. Don’t abbreviate product names, except in cases where you’re matching a UI label. In such cases, make it clear that you’re referring to the Google product and not some other thing with a similar name.\nAlso consider whether you need to refer to a product name throughout a document, or if you can use a more general term. For example, if you’ve established that you’re talking about Anthos Service Mesh, you can probably frame your discussion around the concept of a service mesh throughout much of the document.",
    "crumbs": [
      "Key resources",
      "Product names"
    ]
  },
  {
    "objectID": "content/en/key-resources/product-names.html#possessives-of-product-names",
    "href": "content/en/key-resources/product-names.html#possessives-of-product-names",
    "title": "Product names",
    "section": "Possessives of product names",
    "text": "Possessives of product names\nFor information about forming possessives with product names, see Product, feature, and company names.",
    "crumbs": [
      "Key resources",
      "Product names"
    ]
  },
  {
    "objectID": "content/en/key-resources/product-names.html#articles-before-product-names",
    "href": "content/en/key-resources/product-names.html#articles-before-product-names",
    "title": "Product names",
    "section": "Articles before product names",
    "text": "Articles before product names\nDon’t use the before a product name unless you’re using the name to modify something else. Do use the before tool and API names.\n\n✅ Recommended: Using Cloud Datastore with Cloud Dataproc\n✅ Recommended: The Cloud Datastore options page\n✅ Recommended: The Google Cloud console\n✅ Recommended: The Transcoder API\n✅ Recommended: The gcloud CLI\n❌ Not recommended: Using the Cloud Datastore with Cloud Dataproc\n\nIf you use a product name as a modifier with an indefinite article (a or an), pay close attention to which article precedes the product name.\nRecommended: An Anthos Service Mesh environment\nRecommended: A Service Mesh environment\nFor more information about using articles, see Articles.",
    "crumbs": [
      "Key resources",
      "Product names"
    ]
  },
  {
    "objectID": "content/en/key-resources/product-names.html#use-service-to-refer-to-multiple-products",
    "href": "content/en/key-resources/product-names.html#use-service-to-refer-to-multiple-products",
    "title": "Product names",
    "section": "Use “service” to refer to multiple products",
    "text": "Use “service” to refer to multiple products\nIt’s OK to refer to Google products as services, such as the Google Kubernetes Engine service or the Compute Engine service. However, if the term services leads to ambiguity, use the product names.",
    "crumbs": [
      "Key resources",
      "Product names"
    ]
  },
  {
    "objectID": "content/en/key-resources/product-names.html#dont-use-product-names-as-verbs",
    "href": "content/en/key-resources/product-names.html#dont-use-product-names-as-verbs",
    "title": "Product names",
    "section": "Don’t use product names as verbs",
    "text": "Don’t use product names as verbs\nDon’t use product names or feature names as verbs.",
    "crumbs": [
      "Key resources",
      "Product names"
    ]
  },
  {
    "objectID": "content/en/introduction/highlights.html",
    "href": "content/en/introduction/highlights.html",
    "title": "Highlights",
    "section": "",
    "text": "The style guide covers a lot of material, so the following page provides an overview of its most important points. For more information about topics on the page, follow the links.",
    "crumbs": [
      "Introduction",
      "Highlights"
    ]
  },
  {
    "objectID": "content/en/introduction/highlights.html#tone-and-content",
    "href": "content/en/introduction/highlights.html#tone-and-content",
    "title": "Highlights",
    "section": "Tone and content",
    "text": "Tone and content\n\nBe conversational and friendly without being frivolous.\nDon’t pre-announce anything in documentation.\nUse descriptive link text.\nWrite accessibly.\nWrite for a global audience.",
    "crumbs": [
      "Introduction",
      "Highlights"
    ]
  },
  {
    "objectID": "content/en/introduction/highlights.html#language-and-grammar",
    "href": "content/en/introduction/highlights.html#language-and-grammar",
    "title": "Highlights",
    "section": "Language and grammar",
    "text": "Language and grammar\n\nUse second person: “you” rather than “we.”\nUse active voice: make clear who’s performing the action.\nUse standard American spelling and punctuation.\nPut conditions before instructions, not after.\nFor usage and spelling of specific words, see the word list.",
    "crumbs": [
      "Introduction",
      "Highlights"
    ]
  },
  {
    "objectID": "content/en/introduction/highlights.html#formatting-punctuation-and-organization",
    "href": "content/en/introduction/highlights.html#formatting-punctuation-and-organization",
    "title": "Highlights",
    "section": "Formatting, punctuation, and organization",
    "text": "Formatting, punctuation, and organization\n\nUse sentence case for document titles and section headings.\nUse numbered lists for sequences.\nUse bulleted lists for most other lists.\nUse description lists for pairs of related pieces of data.\nUse serial commas.\nPut code-related text in code font.\nPut UI elements in bold.\nUse unambiguous date formatting.",
    "crumbs": [
      "Introduction",
      "Highlights"
    ]
  },
  {
    "objectID": "content/en/introduction/highlights.html#images",
    "href": "content/en/introduction/highlights.html#images",
    "title": "Highlights",
    "section": "Images",
    "text": "Images\n\nProvide alt text.\nProvide high-resolution or vector images when practical.",
    "crumbs": [
      "Introduction",
      "Highlights"
    ]
  },
  {
    "objectID": "content/en/introduction/whats-new.html",
    "href": "content/en/introduction/whats-new.html",
    "title": "What’s new",
    "section": "",
    "text": "This page provides a summary of significant changes to the style guide.",
    "crumbs": [
      "Introduction",
      "What's new"
    ]
  },
  {
    "objectID": "content/en/introduction/whats-new.html#may-8-2025",
    "href": "content/en/introduction/whats-new.html#may-8-2025",
    "title": "What’s new",
    "section": "May 8, 2025",
    "text": "May 8, 2025\n\n\n\nNew guidance or change\nPage\n\n\n\n\nRemoved outdated language that indicated that a list of options is treated differently than other unordered lists.\nLists\n\n\n—\n—\n\n\nAdded a page about writing prescriptive documentation.\nPrescriptive documentation,Word list\n\n\nRemoved guidance that said to include empty parentheses after method names.\nCode in text\n\n\nChanged footnotes guidance to recommend using numbers instead of symbols.\nFootnotes\n\n\nSimplified contractions guidance, removing excess explanations and examples.\nContractions\n\n\nAdded examples to guidance about introducing sections of a document.\nHeadings and titles\n\n\nAdded an example service account ID.\nExample domains and names\n\n\nSimplified and clarified guidance about articles, including using articles before abbreviations and product names.\nAbbreviations,Articles (a, an, the),Product names,Word list\n\n\nIncluded a general explanation of why we don’t document future features.\nDocument future features\n\n\nRevised guidance to recommend using an abbreviation in a title or heading only if the abbreviation is the more commonly known version of the word.\nHeadings and titles\n\n\nAdded a suggestion that when you use an imperative in running text, consider whether to write a procedure instead.\nSecond person and first person\n\n\nGeneralized existing guidance on what to do when jargon is part of a command or code sample.\nJargon\n\n\nConsolidated guidance about cross-references and linking into one page.\nCross-references and linking\n\n\nAdded some specific reasons why we avoid directional language when orienting the reader to information on a page.\nWrite accessible documentation\n\n\nClarified that spacing around icons is a judgment call based on readability.\nUI elements and interaction\n\n\nRemoved an example phone number.\nExample domains and names\n\n\nRemoved the word list entry for property because its usage heavily depends on the technical context.\nWord list\n\n\nNew word list entries: choose, confidential, sensitive, image, Fast Healthcare Interoperability Resources (FHIR)\nWord list",
    "crumbs": [
      "Introduction",
      "What's new"
    ]
  },
  {
    "objectID": "content/en/introduction/whats-new.html#january-17-2025",
    "href": "content/en/introduction/whats-new.html#january-17-2025",
    "title": "What’s new",
    "section": "January 17, 2025",
    "text": "January 17, 2025\n\n\n\nNew guidance or change\nPage\n\n\n\n\nConsolidated spelling guidance into the introduction to the word list. Extended guidance about how to use the preferred dictionary to determine which spelling to use for a word with multiple spellings.\nWord list\n\n\n—\n—\n\n\nGeneralized guidance about when to use spaces or tabs for indentation in code samples.\nCode samples\n\n\nChanged guidance for formatting telephone numbers to recommend using dashes instead of parentheses to set the area code off from the rest of the number.\nFormat phone numbers\n\n\nExtended and clarified recommendation to avoid the abbreviations i.e., e.g., and etc. in most cases.\nAbbreviations,Comma-separated lists",
    "crumbs": [
      "Introduction",
      "What's new"
    ]
  },
  {
    "objectID": "content/en/html-css/html-formatting.html",
    "href": "content/en/html-css/html-formatting.html",
    "title": "HTML formatting",
    "section": "",
    "text": "Follow Google’s HTML/CSS Style Guide. Exception: don’t leave out optional elements.\nIn particular, following are some basic guidelines from that style guide, which generally apply to other documentation source files, too (such as YAML and Markdown):\n\nDon’t use tabs to indent text; use spaces only. Different text editors interpret tabs differently, and some Markdown features expect spaces and not tabs.\nIndent by two spaces per indentation level.\nUse all-lowercase for elements and attributes.\nDon’t leave trailing spaces at the end of a line (except as needed for Markdown).\n\n\n\nBreak lines at 80 characters except in the following cases:\n\nInformation in a meta element at the beginning of a file must be on a single line, so those lines can be as long as needed.\nIf a URL in a link has a line break, the link won’t work. If a URL is longer than 80 characters (quite common), you’re stuck with it. In that case, put the URL on its own line with the href attribute to make it easier to review the text before and after, as the following example shows:\n\nYou can find more information in &lt;a href=\"https://example.com/long-url/johan-gambolputty-de-von-ausfern-…-von-hautkopf-of-ulm.html\"&gt;his biography.&lt;/a&gt;\nBreak code snippets (in &lt;pre&gt; blocks) at 80 characters:\n\nOlder files might use different line lengths. If you’re making small changes to a file that has a consistent line length other than 80 characters, then make your changes conform to that file’s line length rather than reformatting the whole file.\nWhen adding line breaks, make sure that you don’t change the meaning of the code! If you’re not familiar with the programming language, ask for help from someone who is. But sometimes you just can’t avoid a long line.",
    "crumbs": [
      "HTML and CSS",
      "HTML formatting"
    ]
  },
  {
    "objectID": "content/en/html-css/html-formatting.html#line-length",
    "href": "content/en/html-css/html-formatting.html#line-length",
    "title": "HTML formatting",
    "section": "",
    "text": "Break lines at 80 characters except in the following cases:\n\nInformation in a meta element at the beginning of a file must be on a single line, so those lines can be as long as needed.\nIf a URL in a link has a line break, the link won’t work. If a URL is longer than 80 characters (quite common), you’re stuck with it. In that case, put the URL on its own line with the href attribute to make it easier to review the text before and after, as the following example shows:\n\nYou can find more information in &lt;a href=\"https://example.com/long-url/johan-gambolputty-de-von-ausfern-…-von-hautkopf-of-ulm.html\"&gt;his biography.&lt;/a&gt;\nBreak code snippets (in &lt;pre&gt; blocks) at 80 characters:\n\nOlder files might use different line lengths. If you’re making small changes to a file that has a consistent line length other than 80 characters, then make your changes conform to that file’s line length rather than reformatting the whole file.\nWhen adding line breaks, make sure that you don’t change the meaning of the code! If you’re not familiar with the programming language, ask for help from someone who is. But sometimes you just can’t avoid a long line.",
    "crumbs": [
      "HTML and CSS",
      "HTML formatting"
    ]
  },
  {
    "objectID": "content/en/punctuation/semicolons.html",
    "href": "content/en/punctuation/semicolons.html",
    "title": "Semicolons",
    "section": "",
    "text": "Semicolons\n\nSource: https://developers.google.com/style/semicolons\n\nIf possible, avoid using semicolons. In a few cases, a semicolon is preferred:\n\nWhen joining two closely related independent clauses where a period or a comma is not as effective.\n✅ Recommended: You can easily test compatibility by computing the centroid; if it is on the opposite side of the planet, reverse the order of your vertices.\nWhen preceding a conjunctive adverb (like therefore) or a phrase (like that is) that joins two independent clauses.\n✅ Recommended: This setup places the head-tracked node below the Main Camera; therefore, only the stereo cameras are affected by the user’s head motion.\n✅ Recommended: The URL from which a video ad loads; that is, the URL to use to fetch that video ad.\nWhen separating a series of long or complex items that contain their own punctuation.\n✅ Recommended: If you don’t have time, then focus on the improvements that will have the greatest benefit: what matters most to your users; what is most important to fix; and what is easy or feasible to fix in the available time.\n✅ Recommended: Review your document one more time, checking for the following: present tense and active voice; typos, punctuation, and grammar; and whether you can shorten anything.\n\nNotice that in the final example, the second item in the list is itself a list.\n\n\n\n\n Back to top",
    "crumbs": [
      "Punctuation",
      "Semicolons"
    ]
  },
  {
    "objectID": "content/en/punctuation/hyphens.html",
    "href": "content/en/punctuation/hyphens.html",
    "title": "Hyphens",
    "section": "",
    "text": "Source: https://developers.google.com/style/hyphens\n\nUse a hyphen (-) when needed for clarity. A hyphen can separate parts of words to avoid misreadings, and it can combine terms when they should be read as a unit.\n\n\nGuidance for hyphenation isn’t always straightforward because it depends on the following circumstances:\n\nLocation. For example, does a term precede a noun, or does it follow a verb?\nInterpretation and readability. Is a sentence ambiguous or unclear if a term is not hyphenated?\nConvention. For some terms, our guidance tells us to always hyphenate or never hyphenate, even if the convention seems to contradict other guidance.\n\nIn addition, there are many exceptions to general hyphenation guidance. If you’re not sure whether to hyphenate a term, in addition to reviewing the guidelines on this page, check the following sources (in this order):\n\nThe documentation that you’re working with. If there’s an established convention for hyphenating a term in a particular documentation set, follow that convention.\nThe word list in this style guide.\nThe Merriam-Webster dictionary.\n\nAs always, deviate from our guidance when it serves your readers. For more information, see Break the rules.\n\n[!NOTE] Don’t use a hyphen (-) or a double hyphen (–) in place of a dash (—). The dash is a distinct punctuation mark that has different uses. For more information, see Dashes.\n\n\n\n\nIn general, don’t use a hyphen between a prefix and the main noun.\n\n✅ Recommended: infrastructure, megabyte, metadata, preprocessing, pseudocode, semiconductor\n\n\n\nAdd a hyphen after a prefix in the following circumstances:\n\nIf the prefix is self or cross: self-managing, cross-region\nIf the noun is capitalized or is a number: non-Google, post-2000\nTo avoid confusion or difficulty in reading: de-energize, intra-index, re-mark, re-sign\nIf the prefix is for a term that already has hyphens or spaces: un-Google-like, non-twentieth-century\nTo be consistent within a document: pre-processing, post-processing\n\n\n\n\nThe non prefix follows the same guidelines, but because it can easily form words that are hard to parse, it’s often hyphenated. Use your best judgment, taking into account consistency within your documentation. The following recommendations show contrasting usages that you can use as examples.\n\n✅ Recommended: noncurrent, nonempty, noninteractive, nonpublic\n✅ Recommended: non-existence, non-integer, non-key, non-managed, non-negative\n\nWhen using non as a prefix, add a hyphen before hyphenated compound words.\n\n✅ Recommended: non-KSA-based, non-self-sustaining\n\n\n\n\n\nA compound is a term that combines more than one word. Compounds can be closed as one word with no spaces, open with spaces between words, or hyphenated.\n\n\nIn general, write compound nouns in their closed (one-word, unhyphenated) form. If you see that Merriam-Webster.com uses the two-word or hyphenated form, but you see that the closed form is the predominant convention in your context or trending in that direction (as compounds often do), then use the closed form.\n\n✅ Recommended: webpage\n✅ Recommended: hostname\n✅ Recommended: tradeoff\n✅ Recommended: workaround\n\n\n\nOur word list includes exceptions for well-established terms that commonly use a hyphen or a space, such as multi-region and style sheet. In some cases, we note that noun, verb, and adjective versions of a word are treated differently.\nWhen the components of a unit of measurement are multiplied by each other, hyphenate them.\n\n✅ Recommended: 5 vCPU-hours\n✅ Recommended: 40 person-hours\n\n\n\n\n\nIf needed for clarity, hyphenate compound modifiers that come before a noun. This guideline can be subjective. However, except as noted in this section, it’s almost never wrong to hyphenate a compound before a noun to ensure clarity.\n\n✅ Recommended: A well-designed app\n✅ Recommended: Android-specific techniques\n\nUse a hyphen after more or most if you need to clarify what those words modify.\n\n✅ Recommended: The most common scenario\n✅ Recommended: Edge locations with more-reliable internet links\n\nIn general, avoid writing compound modifiers that have more than two words. Instead, move some words after the noun. If you must use this type of compound, then use a hyphen between each word as needed for clarity.\n\n✅ Recommended: test cases that are specific to the 2023 edition\n✅ Recommended: cross-data-center replication\n❌ Not recommended: edition-2023-specific test cases\n\n\n\nDon’t hyphenate adverbs that end in -ly except when needed for clarity.\n\n✅ Recommended: Publicly available implementations\n❌ Not recommended: Publicly-available implementations\n\nDon’t use hyphens in compounds that are conventionally not hyphenated. Follow the guidance in the word list or check the convention in the documentation that you’re working with.\n\n✅ Recommended: A managed instance group (MIG)\n✅ Recommended: A machine learning model\n\nWhen a number and unit of measurement combine to modify a noun, don’t hyphenate unless the hyphen is needed for clarity.\n\n✅ Recommended: 200&nbsp;GB disk (200 GB disk)\n\n\n\n\n\nIn general, you don’t need to add a hyphen to a compound that follows a verb.\n\n✅ Recommended: The app is well designed.\n✅ Recommended: The logs are written in real time.\n✅ Recommended: The product supports high availability.\n✅ Recommended: The app uses techniques that are Android specific.\n✅ Recommended: Customers can use the utility as is.\n✅ Recommended: Get profile information for the currently authorized user.\n\n\n\nSome compound terms are always hyphenated, even if they follow a verb. To check, look the term up in the word list. If it isn’t in the list, check the Merriam-Webster dictionary. As always, follow the convention in the documentation that you’re working with.\n\n✅ Recommended: You can deploy the app on-premises.\n✅ Recommended: The docs describe how to create an add-on.\n✅ Recommended: The utility works with apps that are cloud-based and cloud-adjacent.\n✅ Recommended: This page is customer-facing.\n✅ Recommended: The app is designed to be user-friendly.\n✅ Recommended: The goal is to produce an experience that’s game-like.\n\n\n\n\n\n\nUse a hyphen, not an en dash (&ndash;), to indicate a range of numbers. If a hyphen introduces ambiguity, use words such as from, to, and through for clarity. Don’t mix hyphens with words. For information about how to represent a range of numbers that includes units, see Ranges of numbers with units.\n\n✅ Recommended: 8-20 files\n✅ Recommended: 5-10 minutes\n✅ Recommended: from 8 to 20 files\n❌ Not recommended: from 8-20 files\n\n\n\n\nNever place a space on either side of a hyphen except when using a suspended hyphen, in which case you can leave a space after (but not before) the hyphen.\n\n\n\nWhen two or more compound modifiers have a common base, you can keep the hyphens but leave out the base for all except the last modifier. In the following examples, the base is hour.\n\n✅ Recommended: You can set up the system to scan for new files at one- or two-hour intervals.\n✅ Recommended: You can set up the system to scan for new files at one-, two-, or three-hour intervals.",
    "crumbs": [
      "Punctuation",
      "Hyphens"
    ]
  },
  {
    "objectID": "content/en/punctuation/hyphens.html#general-guidelines",
    "href": "content/en/punctuation/hyphens.html#general-guidelines",
    "title": "Hyphens",
    "section": "",
    "text": "Guidance for hyphenation isn’t always straightforward because it depends on the following circumstances:\n\nLocation. For example, does a term precede a noun, or does it follow a verb?\nInterpretation and readability. Is a sentence ambiguous or unclear if a term is not hyphenated?\nConvention. For some terms, our guidance tells us to always hyphenate or never hyphenate, even if the convention seems to contradict other guidance.\n\nIn addition, there are many exceptions to general hyphenation guidance. If you’re not sure whether to hyphenate a term, in addition to reviewing the guidelines on this page, check the following sources (in this order):\n\nThe documentation that you’re working with. If there’s an established convention for hyphenating a term in a particular documentation set, follow that convention.\nThe word list in this style guide.\nThe Merriam-Webster dictionary.\n\nAs always, deviate from our guidance when it serves your readers. For more information, see Break the rules.\n\n[!NOTE] Don’t use a hyphen (-) or a double hyphen (–) in place of a dash (—). The dash is a distinct punctuation mark that has different uses. For more information, see Dashes.",
    "crumbs": [
      "Punctuation",
      "Hyphens"
    ]
  },
  {
    "objectID": "content/en/punctuation/hyphens.html#prefixes",
    "href": "content/en/punctuation/hyphens.html#prefixes",
    "title": "Hyphens",
    "section": "",
    "text": "In general, don’t use a hyphen between a prefix and the main noun.\n\n✅ Recommended: infrastructure, megabyte, metadata, preprocessing, pseudocode, semiconductor\n\n\n\nAdd a hyphen after a prefix in the following circumstances:\n\nIf the prefix is self or cross: self-managing, cross-region\nIf the noun is capitalized or is a number: non-Google, post-2000\nTo avoid confusion or difficulty in reading: de-energize, intra-index, re-mark, re-sign\nIf the prefix is for a term that already has hyphens or spaces: un-Google-like, non-twentieth-century\nTo be consistent within a document: pre-processing, post-processing\n\n\n\n\nThe non prefix follows the same guidelines, but because it can easily form words that are hard to parse, it’s often hyphenated. Use your best judgment, taking into account consistency within your documentation. The following recommendations show contrasting usages that you can use as examples.\n\n✅ Recommended: noncurrent, nonempty, noninteractive, nonpublic\n✅ Recommended: non-existence, non-integer, non-key, non-managed, non-negative\n\nWhen using non as a prefix, add a hyphen before hyphenated compound words.\n\n✅ Recommended: non-KSA-based, non-self-sustaining",
    "crumbs": [
      "Punctuation",
      "Hyphens"
    ]
  },
  {
    "objectID": "content/en/punctuation/hyphens.html#compounds",
    "href": "content/en/punctuation/hyphens.html#compounds",
    "title": "Hyphens",
    "section": "",
    "text": "A compound is a term that combines more than one word. Compounds can be closed as one word with no spaces, open with spaces between words, or hyphenated.\n\n\nIn general, write compound nouns in their closed (one-word, unhyphenated) form. If you see that Merriam-Webster.com uses the two-word or hyphenated form, but you see that the closed form is the predominant convention in your context or trending in that direction (as compounds often do), then use the closed form.\n\n✅ Recommended: webpage\n✅ Recommended: hostname\n✅ Recommended: tradeoff\n✅ Recommended: workaround\n\n\n\nOur word list includes exceptions for well-established terms that commonly use a hyphen or a space, such as multi-region and style sheet. In some cases, we note that noun, verb, and adjective versions of a word are treated differently.\nWhen the components of a unit of measurement are multiplied by each other, hyphenate them.\n\n✅ Recommended: 5 vCPU-hours\n✅ Recommended: 40 person-hours\n\n\n\n\n\nIf needed for clarity, hyphenate compound modifiers that come before a noun. This guideline can be subjective. However, except as noted in this section, it’s almost never wrong to hyphenate a compound before a noun to ensure clarity.\n\n✅ Recommended: A well-designed app\n✅ Recommended: Android-specific techniques\n\nUse a hyphen after more or most if you need to clarify what those words modify.\n\n✅ Recommended: The most common scenario\n✅ Recommended: Edge locations with more-reliable internet links\n\nIn general, avoid writing compound modifiers that have more than two words. Instead, move some words after the noun. If you must use this type of compound, then use a hyphen between each word as needed for clarity.\n\n✅ Recommended: test cases that are specific to the 2023 edition\n✅ Recommended: cross-data-center replication\n❌ Not recommended: edition-2023-specific test cases\n\n\n\nDon’t hyphenate adverbs that end in -ly except when needed for clarity.\n\n✅ Recommended: Publicly available implementations\n❌ Not recommended: Publicly-available implementations\n\nDon’t use hyphens in compounds that are conventionally not hyphenated. Follow the guidance in the word list or check the convention in the documentation that you’re working with.\n\n✅ Recommended: A managed instance group (MIG)\n✅ Recommended: A machine learning model\n\nWhen a number and unit of measurement combine to modify a noun, don’t hyphenate unless the hyphen is needed for clarity.\n\n✅ Recommended: 200&nbsp;GB disk (200 GB disk)\n\n\n\n\n\nIn general, you don’t need to add a hyphen to a compound that follows a verb.\n\n✅ Recommended: The app is well designed.\n✅ Recommended: The logs are written in real time.\n✅ Recommended: The product supports high availability.\n✅ Recommended: The app uses techniques that are Android specific.\n✅ Recommended: Customers can use the utility as is.\n✅ Recommended: Get profile information for the currently authorized user.\n\n\n\nSome compound terms are always hyphenated, even if they follow a verb. To check, look the term up in the word list. If it isn’t in the list, check the Merriam-Webster dictionary. As always, follow the convention in the documentation that you’re working with.\n\n✅ Recommended: You can deploy the app on-premises.\n✅ Recommended: The docs describe how to create an add-on.\n✅ Recommended: The utility works with apps that are cloud-based and cloud-adjacent.\n✅ Recommended: This page is customer-facing.\n✅ Recommended: The app is designed to be user-friendly.\n✅ Recommended: The goal is to produce an experience that’s game-like.",
    "crumbs": [
      "Punctuation",
      "Hyphens"
    ]
  },
  {
    "objectID": "content/en/punctuation/hyphens.html#range-of-numbers",
    "href": "content/en/punctuation/hyphens.html#range-of-numbers",
    "title": "Hyphens",
    "section": "",
    "text": "Use a hyphen, not an en dash (&ndash;), to indicate a range of numbers. If a hyphen introduces ambiguity, use words such as from, to, and through for clarity. Don’t mix hyphens with words. For information about how to represent a range of numbers that includes units, see Ranges of numbers with units.\n\n✅ Recommended: 8-20 files\n✅ Recommended: 5-10 minutes\n✅ Recommended: from 8 to 20 files\n❌ Not recommended: from 8-20 files",
    "crumbs": [
      "Punctuation",
      "Hyphens"
    ]
  },
  {
    "objectID": "content/en/punctuation/hyphens.html#spaces-around-hyphens",
    "href": "content/en/punctuation/hyphens.html#spaces-around-hyphens",
    "title": "Hyphens",
    "section": "",
    "text": "Never place a space on either side of a hyphen except when using a suspended hyphen, in which case you can leave a space after (but not before) the hyphen.",
    "crumbs": [
      "Punctuation",
      "Hyphens"
    ]
  },
  {
    "objectID": "content/en/punctuation/hyphens.html#suspended-hyphens",
    "href": "content/en/punctuation/hyphens.html#suspended-hyphens",
    "title": "Hyphens",
    "section": "",
    "text": "When two or more compound modifiers have a common base, you can keep the hyphens but leave out the base for all except the last modifier. In the following examples, the base is hour.\n\n✅ Recommended: You can set up the system to scan for new files at one- or two-hour intervals.\n✅ Recommended: You can set up the system to scan for new files at one-, two-, or three-hour intervals.",
    "crumbs": [
      "Punctuation",
      "Hyphens"
    ]
  },
  {
    "objectID": "content/en/punctuation/periods.html",
    "href": "content/en/punctuation/periods.html",
    "title": "Periods and other end punctuation",
    "section": "",
    "text": "Source: https://developers.google.com/style/periods\n\nEnd a complete sentence with a period, unless it’s a question. There are exceptions for working in lists.\n\n\nWhether to end a list item with a period depends on several factors, including the kind of list that the item appears in.\nFor details about how to use periods in lists, see the Capitalization and end punctuation section of the “Lists” page.\n\n\n\nWhen a period immediately follows a URL or a file path, it can be hard to tell whether the period is part of the URL.\nTo indicate that the punctuating period isn’t part of the URL, try one of the following techniques:\n\nWhenever possible, avoid putting URLs in text.\nRewrite the sentence so that the URL isn’t at the end of the sentence.\nPut the URL on a separate line from the text, omitting the final period.\n\nIf the URL is a link, it generally looks different from the surrounding text. For example, in most browsers, link text is blue by default. This formatting helps distinguish the URL from the period.\n\n✅ Recommended:\n\nWe use your feedback to improve the Animals API, in accordance with Example Pet Store’s Privacy Policy:\nhttp://www.examplepetstore.com/privacy/\n\n❌ Not recommended:\n\nWe use your feedback to improve the Animals API, in accordance with Example Pet Store’s Privacy Policy at http://www.examplepetstore.com/privacy/.\nWhen you do put a period after a URL, don’t leave any space between the last character of the URL and the period.\n\n\n\nWhen a sentence ends with material inside quotation marks, place the period inside the quotation marks even if the period isn’t part of the material inside the quotation marks. An exception to this guideline applies if you’re using quotation marks around a keyword or other literal string. For more information, see Commas and periods with quotation marks.\n\n✅ Recommended: … you might say “Fixed typo.”\n\nIf the material inside the quotation marks ends with a question mark or an exclamation point, don’t use a period.\n\n✅ Recommended: Children always ask “Why?”\n\n\n\n\nIf the last part of a sentence is contained inside parentheses, put the period after the closing parenthesis.\nIf the parentheses contain a complete sentence, put the period inside the parentheses.\n\n✅ Recommended: Your application could show a notification when a relevant file or folder has changed (even if that change occurs while your application isn’t running).\n✅ Recommended: App Engine applications are easy to create, easy to maintain, and easy to scale. (With App Engine, there are no servers for you to maintain.)\n\nFor more information, see Parentheses.\n\n\n\nDon’t end headings with periods.\nFor more information, see Headings.\n\n\n\nUse a period to represent a decimal point. (Using a comma to separate the decimal part of a number is the editorial custom in some countries, but not in the US.)\nFor more information, see Numbers.\n\n\n\nSee Figure captions.\n\n\n\nSee Alt text.\n\n\n\nPut a period after a shortened word.\nDon’t put periods after the letters of an acronym or initialism.\nFor more information, see Abbreviations.\n\n\n\nLeave only one space between sentences.\n\n\n\nDon’t use exclamation points in text except when they’re part of a code example.",
    "crumbs": [
      "Punctuation",
      "Periods and end punctuation"
    ]
  },
  {
    "objectID": "content/en/punctuation/periods.html#periods-with-lists",
    "href": "content/en/punctuation/periods.html#periods-with-lists",
    "title": "Periods and other end punctuation",
    "section": "",
    "text": "Whether to end a list item with a period depends on several factors, including the kind of list that the item appears in.\nFor details about how to use periods in lists, see the Capitalization and end punctuation section of the “Lists” page.",
    "crumbs": [
      "Punctuation",
      "Periods and end punctuation"
    ]
  },
  {
    "objectID": "content/en/punctuation/periods.html#periods-with-urls",
    "href": "content/en/punctuation/periods.html#periods-with-urls",
    "title": "Periods and other end punctuation",
    "section": "",
    "text": "When a period immediately follows a URL or a file path, it can be hard to tell whether the period is part of the URL.\nTo indicate that the punctuating period isn’t part of the URL, try one of the following techniques:\n\nWhenever possible, avoid putting URLs in text.\nRewrite the sentence so that the URL isn’t at the end of the sentence.\nPut the URL on a separate line from the text, omitting the final period.\n\nIf the URL is a link, it generally looks different from the surrounding text. For example, in most browsers, link text is blue by default. This formatting helps distinguish the URL from the period.\n\n✅ Recommended:\n\nWe use your feedback to improve the Animals API, in accordance with Example Pet Store’s Privacy Policy:\nhttp://www.examplepetstore.com/privacy/\n\n❌ Not recommended:\n\nWe use your feedback to improve the Animals API, in accordance with Example Pet Store’s Privacy Policy at http://www.examplepetstore.com/privacy/.\nWhen you do put a period after a URL, don’t leave any space between the last character of the URL and the period.",
    "crumbs": [
      "Punctuation",
      "Periods and end punctuation"
    ]
  },
  {
    "objectID": "content/en/punctuation/periods.html#periods-with-quotation-marks",
    "href": "content/en/punctuation/periods.html#periods-with-quotation-marks",
    "title": "Periods and other end punctuation",
    "section": "",
    "text": "When a sentence ends with material inside quotation marks, place the period inside the quotation marks even if the period isn’t part of the material inside the quotation marks. An exception to this guideline applies if you’re using quotation marks around a keyword or other literal string. For more information, see Commas and periods with quotation marks.\n\n✅ Recommended: … you might say “Fixed typo.”\n\nIf the material inside the quotation marks ends with a question mark or an exclamation point, don’t use a period.\n\n✅ Recommended: Children always ask “Why?”",
    "crumbs": [
      "Punctuation",
      "Periods and end punctuation"
    ]
  },
  {
    "objectID": "content/en/punctuation/periods.html#periods-with-parentheses",
    "href": "content/en/punctuation/periods.html#periods-with-parentheses",
    "title": "Periods and other end punctuation",
    "section": "",
    "text": "If the last part of a sentence is contained inside parentheses, put the period after the closing parenthesis.\nIf the parentheses contain a complete sentence, put the period inside the parentheses.\n\n✅ Recommended: Your application could show a notification when a relevant file or folder has changed (even if that change occurs while your application isn’t running).\n✅ Recommended: App Engine applications are easy to create, easy to maintain, and easy to scale. (With App Engine, there are no servers for you to maintain.)\n\nFor more information, see Parentheses.",
    "crumbs": [
      "Punctuation",
      "Periods and end punctuation"
    ]
  },
  {
    "objectID": "content/en/punctuation/periods.html#periods-with-headings",
    "href": "content/en/punctuation/periods.html#periods-with-headings",
    "title": "Periods and other end punctuation",
    "section": "",
    "text": "Don’t end headings with periods.\nFor more information, see Headings.",
    "crumbs": [
      "Punctuation",
      "Periods and end punctuation"
    ]
  },
  {
    "objectID": "content/en/punctuation/periods.html#periods-with-numbers",
    "href": "content/en/punctuation/periods.html#periods-with-numbers",
    "title": "Periods and other end punctuation",
    "section": "",
    "text": "Use a period to represent a decimal point. (Using a comma to separate the decimal part of a number is the editorial custom in some countries, but not in the US.)\nFor more information, see Numbers.",
    "crumbs": [
      "Punctuation",
      "Periods and end punctuation"
    ]
  },
  {
    "objectID": "content/en/punctuation/periods.html#periods-with-captions",
    "href": "content/en/punctuation/periods.html#periods-with-captions",
    "title": "Periods and other end punctuation",
    "section": "",
    "text": "See Figure captions.",
    "crumbs": [
      "Punctuation",
      "Periods and end punctuation"
    ]
  },
  {
    "objectID": "content/en/punctuation/periods.html#periods-with-alt-text",
    "href": "content/en/punctuation/periods.html#periods-with-alt-text",
    "title": "Periods and other end punctuation",
    "section": "",
    "text": "See Alt text.",
    "crumbs": [
      "Punctuation",
      "Periods and end punctuation"
    ]
  },
  {
    "objectID": "content/en/punctuation/periods.html#periods-with-abbreviations",
    "href": "content/en/punctuation/periods.html#periods-with-abbreviations",
    "title": "Periods and other end punctuation",
    "section": "",
    "text": "Put a period after a shortened word.\nDon’t put periods after the letters of an acronym or initialism.\nFor more information, see Abbreviations.",
    "crumbs": [
      "Punctuation",
      "Periods and end punctuation"
    ]
  },
  {
    "objectID": "content/en/punctuation/periods.html#spaces-between-sentences",
    "href": "content/en/punctuation/periods.html#spaces-between-sentences",
    "title": "Periods and other end punctuation",
    "section": "",
    "text": "Leave only one space between sentences.",
    "crumbs": [
      "Punctuation",
      "Periods and end punctuation"
    ]
  },
  {
    "objectID": "content/en/punctuation/periods.html#exclamation-points",
    "href": "content/en/punctuation/periods.html#exclamation-points",
    "title": "Periods and other end punctuation",
    "section": "",
    "text": "Don’t use exclamation points in text except when they’re part of a code example.",
    "crumbs": [
      "Punctuation",
      "Periods and end punctuation"
    ]
  },
  {
    "objectID": "content/en/punctuation/quotation-marks.html",
    "href": "content/en/punctuation/quotation-marks.html",
    "title": "Quotation marks",
    "section": "",
    "text": "Source: https://developers.google.com/style/quotation-marks\n\nUse straight double quotation marks and apostrophes.\n\n\nIn technical writing, we don’t use quotation marks much, aside from instances of code.\nGenerally, you can use quotation marks for titles of shorter works such as articles or episodes in a web series, unless they’re part of a link. For more information, see cross-references.\nFor most titles that are full-length works, we use italics.\nFor examples of when to use quotation marks in regular text, see the following table:\n\n\n\nGuidance\nExample\n\n\n\n\nReferring to a section of a larger document or piece, if you can’t link to the section directly.\nThe technique is described in the section “Deploying containers” of the Containers overview video.\n\n\nReferring to the title of a parent document when you’re already linking to a section\nThe machine learning (ML) workflow section of “Introduction to Vertex AI” describes the machine learning workflow for Vertex AI.\n\n\nDirectly citing a person or quoting a slogan or motto.\nMartin Fowler has said, “We are still learning the techniques to write software effectively.”\n\n\nUsing a term metaphorically, but only if it’s not an established usage in the domain.\nThis configuration forms an “island” within the network that is not connected to the external network.\n\n\n\nFor more information, see Text-formatting summary.\n\n\n\nCommas and periods go inside quotation marks.\n\n✅ Recommended: See the section titled “Care and feeding of the emu.”\n❌ Not recommended: See the section titled “Care and feeding of the emu”.\n\nException: When you put a keyword or other literal string in quotation marks, put any other punctuation outside the quotation marks. In those cases, the quotation marks indicate an exact literal string, so don’t add anything extraneous inside the quotation marks. However, in general, don’t put quotation marks around an item that’s in code font, unless the quotation marks are part of the item.\n\n✅ Recommended: If you enter escape, the program crashes.\n✅ Acceptable: If you enter “escape”, the program crashes.\n❌ Not recommended: If you enter “escape,” the program crashes.\n\n\n\n\nMost typefaces support two forms of quotation marks and apostrophes: straight marks and curly, or typographic, marks. Some tools, like Google Docs, automatically convert straight quotation marks and apostrophes to the curly versions as you type. However, our guidance is to always use straight quotation marks and straight apostrophes in developer documentation, for the following reasons:\n\nIt makes writing documents easier.\n\nCode requires straight marks, so it’s simpler to use straight marks everywhere in developer documentation than to use them in code but not in text.\nTools that automatically change straight marks to curly marks (such as word processors) often make mistakes.\nHumans who manually type curly marks also often make mistakes.\nManually typing curly marks can be difficult on some platforms.\n\nIt makes reviewing documents easier.\n\nWhen you’re proofreading a document, it can be hard to see whether marks are straight or curly, and which direction they point in.\n\n\nIn the following examples, the first example uses straight quotation marks and the second example uses curly quotation marks:\n\n✅ Recommended: The section’s title is “Care and feeding of the emu.”\n❌ Not recommended: The section’s title is “Care and feeding of the emu.”\n\n\n\n\nThe only times to use single quotation marks in our documentation are the following:\n\nIn code examples, in languages that use single quotation marks.\nWhen nesting a quotation inside another quotation.\n\nIn the latter case, put the primary speaker’s quote in double quotation marks and the quote inside the primary speaker’s quote in single quotation marks.\n\n✅ Recommended: She said, “I heard him shout ‘Help,’ and saw him floundering in the water.”\n❌ Not recommended: She said, ‘I heard him shout “Help”, and saw him floundering in the water’.\n\n\n[!NOTE] For information about how to use quotation marks with links, see Quotation marks and italics.",
    "crumbs": [
      "Punctuation",
      "Quotation marks"
    ]
  },
  {
    "objectID": "content/en/punctuation/quotation-marks.html#when-to-use-quotation-marks",
    "href": "content/en/punctuation/quotation-marks.html#when-to-use-quotation-marks",
    "title": "Quotation marks",
    "section": "",
    "text": "In technical writing, we don’t use quotation marks much, aside from instances of code.\nGenerally, you can use quotation marks for titles of shorter works such as articles or episodes in a web series, unless they’re part of a link. For more information, see cross-references.\nFor most titles that are full-length works, we use italics.\nFor examples of when to use quotation marks in regular text, see the following table:\n\n\n\nGuidance\nExample\n\n\n\n\nReferring to a section of a larger document or piece, if you can’t link to the section directly.\nThe technique is described in the section “Deploying containers” of the Containers overview video.\n\n\nReferring to the title of a parent document when you’re already linking to a section\nThe machine learning (ML) workflow section of “Introduction to Vertex AI” describes the machine learning workflow for Vertex AI.\n\n\nDirectly citing a person or quoting a slogan or motto.\nMartin Fowler has said, “We are still learning the techniques to write software effectively.”\n\n\nUsing a term metaphorically, but only if it’s not an established usage in the domain.\nThis configuration forms an “island” within the network that is not connected to the external network.\n\n\n\nFor more information, see Text-formatting summary.",
    "crumbs": [
      "Punctuation",
      "Quotation marks"
    ]
  },
  {
    "objectID": "content/en/punctuation/quotation-marks.html#commas-and-periods-with-quotation-marks",
    "href": "content/en/punctuation/quotation-marks.html#commas-and-periods-with-quotation-marks",
    "title": "Quotation marks",
    "section": "",
    "text": "Commas and periods go inside quotation marks.\n\n✅ Recommended: See the section titled “Care and feeding of the emu.”\n❌ Not recommended: See the section titled “Care and feeding of the emu”.\n\nException: When you put a keyword or other literal string in quotation marks, put any other punctuation outside the quotation marks. In those cases, the quotation marks indicate an exact literal string, so don’t add anything extraneous inside the quotation marks. However, in general, don’t put quotation marks around an item that’s in code font, unless the quotation marks are part of the item.\n\n✅ Recommended: If you enter escape, the program crashes.\n✅ Acceptable: If you enter “escape”, the program crashes.\n❌ Not recommended: If you enter “escape,” the program crashes.",
    "crumbs": [
      "Punctuation",
      "Quotation marks"
    ]
  },
  {
    "objectID": "content/en/punctuation/quotation-marks.html#straight-and-curly-quotation-marks",
    "href": "content/en/punctuation/quotation-marks.html#straight-and-curly-quotation-marks",
    "title": "Quotation marks",
    "section": "",
    "text": "Most typefaces support two forms of quotation marks and apostrophes: straight marks and curly, or typographic, marks. Some tools, like Google Docs, automatically convert straight quotation marks and apostrophes to the curly versions as you type. However, our guidance is to always use straight quotation marks and straight apostrophes in developer documentation, for the following reasons:\n\nIt makes writing documents easier.\n\nCode requires straight marks, so it’s simpler to use straight marks everywhere in developer documentation than to use them in code but not in text.\nTools that automatically change straight marks to curly marks (such as word processors) often make mistakes.\nHumans who manually type curly marks also often make mistakes.\nManually typing curly marks can be difficult on some platforms.\n\nIt makes reviewing documents easier.\n\nWhen you’re proofreading a document, it can be hard to see whether marks are straight or curly, and which direction they point in.\n\n\nIn the following examples, the first example uses straight quotation marks and the second example uses curly quotation marks:\n\n✅ Recommended: The section’s title is “Care and feeding of the emu.”\n❌ Not recommended: The section’s title is “Care and feeding of the emu.”",
    "crumbs": [
      "Punctuation",
      "Quotation marks"
    ]
  },
  {
    "objectID": "content/en/punctuation/quotation-marks.html#single-quotation-marks",
    "href": "content/en/punctuation/quotation-marks.html#single-quotation-marks",
    "title": "Quotation marks",
    "section": "",
    "text": "The only times to use single quotation marks in our documentation are the following:\n\nIn code examples, in languages that use single quotation marks.\nWhen nesting a quotation inside another quotation.\n\nIn the latter case, put the primary speaker’s quote in double quotation marks and the quote inside the primary speaker’s quote in single quotation marks.\n\n✅ Recommended: She said, “I heard him shout ‘Help,’ and saw him floundering in the water.”\n❌ Not recommended: She said, ‘I heard him shout “Help”, and saw him floundering in the water’.\n\n\n[!NOTE] For information about how to use quotation marks with links, see Quotation marks and italics.",
    "crumbs": [
      "Punctuation",
      "Quotation marks"
    ]
  },
  {
    "objectID": "content/en/punctuation/ellipses.html",
    "href": "content/en/punctuation/ellipses.html",
    "title": "Ellipses",
    "section": "",
    "text": "Source: https://developers.google.com/style/ellipses\n\nIn general, don’t use ellipses. An ellipsis is made up of three contiguous periods. Ellipses indicate the omission of part of a sentence, paragraph, or larger block of text where the omission is not pertinent to the understanding of the subject at hand.\n\n\nWhen ellipses are used to indicate hesitation, they are called suspension points. Don’t use ellipses this way in our documentation.\n\n❌ Not recommended: The answer is … wait for it … that you shouldn’t do this.\n\n\n\n\nWhen ellipses appear in a user interface, exclude them from the documentation describing the user interface unless their omission could cause confusion. For example, if the text on the button in the UI reads Save …, document it as click Save.\n\n\n\nDon’t use ellipses in your written documentation; omit any unnecessary information and include all necessary information.\nHowever, it’s acceptable to use ellipses in quoted text (to replace a portion of the quoted text) except when they appear at the beginning or end of the text.\n\n❌ Not recommended: My high school English teacher made me learn that Shakespeare quote about all the world being a stage and ” … all the men and women merely players.”\n❌ Not recommended: My high school English teacher made me learn that Shakespeare quote: “All the world’s a stage, And all the men and women merely players ….”\n\nThe previous example ended with four ellipsis points. The final ellipsis point is, in fact, a period. So when the material that you’re omitting contains one or more sentence boundaries, use four dots instead of three.\n\n✅ Recommended: My high school English teacher made me learn that Shakespeare quote: “All the world’s a stage, …. And one man in his time plays many parts.”\n\n\n\n\nKeep all three ellipsis points together. When creating an ellipsis, instead of the ellipsis character, use three periods in a row. Insert one space before and after the ellipsis unless a punctuation mark immediately follows the ellipsis; in this case, don’t insert a space after the ellipsis.\n\n✅ Recommended: You don’t need to understand all the other Python code in there … we’ll explain it all in class.\n✅ Also recommended: You don’t need to understand all the other Python code in there …; we’ll explain it all in class.\n❌ Not recommended: You don’t need to understand all the other Python code in there…we’ll explain it all in class.",
    "crumbs": [
      "Punctuation",
      "Ellipses"
    ]
  },
  {
    "objectID": "content/en/punctuation/ellipses.html#ellipses-as-suspension-points",
    "href": "content/en/punctuation/ellipses.html#ellipses-as-suspension-points",
    "title": "Ellipses",
    "section": "",
    "text": "When ellipses are used to indicate hesitation, they are called suspension points. Don’t use ellipses this way in our documentation.\n\n❌ Not recommended: The answer is … wait for it … that you shouldn’t do this.",
    "crumbs": [
      "Punctuation",
      "Ellipses"
    ]
  },
  {
    "objectID": "content/en/punctuation/ellipses.html#ellipses-in-a-user-interface",
    "href": "content/en/punctuation/ellipses.html#ellipses-in-a-user-interface",
    "title": "Ellipses",
    "section": "",
    "text": "When ellipses appear in a user interface, exclude them from the documentation describing the user interface unless their omission could cause confusion. For example, if the text on the button in the UI reads Save …, document it as click Save.",
    "crumbs": [
      "Punctuation",
      "Ellipses"
    ]
  },
  {
    "objectID": "content/en/punctuation/ellipses.html#ellipses-in-text",
    "href": "content/en/punctuation/ellipses.html#ellipses-in-text",
    "title": "Ellipses",
    "section": "",
    "text": "Don’t use ellipses in your written documentation; omit any unnecessary information and include all necessary information.\nHowever, it’s acceptable to use ellipses in quoted text (to replace a portion of the quoted text) except when they appear at the beginning or end of the text.\n\n❌ Not recommended: My high school English teacher made me learn that Shakespeare quote about all the world being a stage and ” … all the men and women merely players.”\n❌ Not recommended: My high school English teacher made me learn that Shakespeare quote: “All the world’s a stage, And all the men and women merely players ….”\n\nThe previous example ended with four ellipsis points. The final ellipsis point is, in fact, a period. So when the material that you’re omitting contains one or more sentence boundaries, use four dots instead of three.\n\n✅ Recommended: My high school English teacher made me learn that Shakespeare quote: “All the world’s a stage, …. And one man in his time plays many parts.”",
    "crumbs": [
      "Punctuation",
      "Ellipses"
    ]
  },
  {
    "objectID": "content/en/punctuation/ellipses.html#punctuation-and-spacing-of-ellipses",
    "href": "content/en/punctuation/ellipses.html#punctuation-and-spacing-of-ellipses",
    "title": "Ellipses",
    "section": "",
    "text": "Keep all three ellipsis points together. When creating an ellipsis, instead of the ellipsis character, use three periods in a row. Insert one space before and after the ellipsis unless a punctuation mark immediately follows the ellipsis; in this case, don’t insert a space after the ellipsis.\n\n✅ Recommended: You don’t need to understand all the other Python code in there … we’ll explain it all in class.\n✅ Also recommended: You don’t need to understand all the other Python code in there …; we’ll explain it all in class.\n❌ Not recommended: You don’t need to understand all the other Python code in there…we’ll explain it all in class.",
    "crumbs": [
      "Punctuation",
      "Ellipses"
    ]
  },
  {
    "objectID": "content/en/linking/headings-targets.html",
    "href": "content/en/linking/headings-targets.html",
    "title": "Make headings into link targets",
    "section": "",
    "text": "Source: https://developers.google.com/style/headings-targets\n\nThis page discusses how to turn a heading into a link target by using an id attribute. For more information about how to format headings, see Headings and titles.\nIn some content management systems, anchors are automatically created for headings. However, you might want to add a custom anchor to a heading for several reasons:\n\nYou want to use an anchor that’s shorter than the automatically generated anchor.\nYou want to use an anchor for content that might be frequently linked to. Adding a custom anchor reduces the likelihood of breaking existing links if the heading text changes later.\nYou want to revise a heading. If the anchor for the heading is generated automatically, then the anchor changes when you revise the heading, breaking existing links.\n\n\n\nTo add an anchor to a heading in Markdown, add the following code to the end of the line that the heading is on. For anchor text, use lowercase letters, and put hyphens between words. In the following, replace *ID_OF_ANCHOR* with your anchor text——for example, conserve-habitat.\n{: #ID_OF_ANCHOR }\n✅ Recommended:\n## Help conserve habitat for pollinators {: #help-conserve-habitat-for-pollinators }\n✅ Also recommended:\n## Help conserve habitat for pollinators {: #conserve-habitat }\n✅ Acceptable:\n## Help conserve habitat for pollinators {: id='conserve-habitat' }\n✅ Acceptable:\n## Help conserve habitat for pollinators {: id=\"conserve-habitat\" }\n\n\n\nIf you revise a heading in a content management system where anchors are automatically created, you can create a custom anchor to avoid breaking existing links. If the heading already has a custom anchor, don’t change the anchor unless it contains a term that you want to remove (such as a disrespectful term).\nTo create the custom anchor, use the older ID string for the heading. You can find the ID string by inspecting the heading on the published page. For example, if you change a heading from Introduction to some things to Introduction to everything, then add a custom anchor that uses the older ID string and formatting.\n## Introduction to everything {: #introduction-to-some-things }\nIf you need to change an existing custom anchor, you should check your content management system to update any links that use the old anchor. Inbound links that use the old anchor still reach the page but not the specific section or heading.",
    "crumbs": [
      "Linking",
      "Headings as link targets"
    ]
  },
  {
    "objectID": "content/en/linking/headings-targets.html#add-a-custom-anchor",
    "href": "content/en/linking/headings-targets.html#add-a-custom-anchor",
    "title": "Make headings into link targets",
    "section": "",
    "text": "To add an anchor to a heading in Markdown, add the following code to the end of the line that the heading is on. For anchor text, use lowercase letters, and put hyphens between words. In the following, replace *ID_OF_ANCHOR* with your anchor text——for example, conserve-habitat.\n{: #ID_OF_ANCHOR }\n✅ Recommended:\n## Help conserve habitat for pollinators {: #help-conserve-habitat-for-pollinators }\n✅ Also recommended:\n## Help conserve habitat for pollinators {: #conserve-habitat }\n✅ Acceptable:\n## Help conserve habitat for pollinators {: id='conserve-habitat' }\n✅ Acceptable:\n## Help conserve habitat for pollinators {: id=\"conserve-habitat\" }",
    "crumbs": [
      "Linking",
      "Headings as link targets"
    ]
  },
  {
    "objectID": "content/en/linking/headings-targets.html#revise-a-heading",
    "href": "content/en/linking/headings-targets.html#revise-a-heading",
    "title": "Make headings into link targets",
    "section": "",
    "text": "If you revise a heading in a content management system where anchors are automatically created, you can create a custom anchor to avoid breaking existing links. If the heading already has a custom anchor, don’t change the anchor unless it contains a term that you want to remove (such as a disrespectful term).\nTo create the custom anchor, use the older ID string for the heading. You can find the ID string by inspecting the heading on the published page. For example, if you change a heading from Introduction to some things to Introduction to everything, then add a custom anchor that uses the older ID string and formatting.\n## Introduction to everything {: #introduction-to-some-things }\nIf you need to change an existing custom anchor, you should check your content management system to update any links that use the old anchor. Inbound links that use the old anchor still reach the page but not the specific section or heading.",
    "crumbs": [
      "Linking",
      "Headings as link targets"
    ]
  },
  {
    "objectID": "content/en/index.html",
    "href": "content/en/index.html",
    "title": "Google developer documentation style guide",
    "section": "",
    "text": "[!NOTE]\nIn progress: This style guide is not completed yet, thus you might hit some broken links. Feel free to submit bugs and suggestions via Issues.\n\n\n\n\nAbout this guide\nHighlights\nWhat’s new\nPhilosophy of this style guide\n\n\n\n\n\nWord list\nProduct names\nText-formatting summary\n\n\n\n\n\nAccessibility\nExcessive claims\nFuture features\nGlobal audience\nInclusive language\nJargon\nPrescriptive documentation\nThird-party content\nTimeless documentation\nVoice and tone\n\n\n\n\n\nAbbreviations\nActive voice\nAnthropomorphism\nArticles (a, an, the)\nCapitalization\nContractions\nPlurals in parentheses\nPossessives\nPrepositions\nPresent tense\nPronouns\nSecond person\nSentence structure\nVerbs in reference documents\n\n\n\n\n\nColons\nCommas\nDashes\nEllipses\nHyphens\nParentheses\nPeriods and end punctuation\nQuotation marks\nSemicolons\nSlashes\n\n\n\n\n\nDates and times\nExamples\nFigures and other images\nFootnotes\nHeadings and titles\nItalics with terms\nLists\nNotes and other notices\nNumbers\nParagraphs\nPhone numbers\nPlural of a single letter\nProcedures\nTables\nUnits of measurement\n\n\n\n\n\nCross-references and linking\nHeadings as link targets\n\n\n\n\n\nThis category needs help.\n\n\n[API reference code comments]\n[Code in text]\n[Code samples]"
  },
  {
    "objectID": "content/en/index.html#introduction",
    "href": "content/en/index.html#introduction",
    "title": "Google developer documentation style guide",
    "section": "",
    "text": "About this guide\nHighlights\nWhat’s new\nPhilosophy of this style guide"
  },
  {
    "objectID": "content/en/index.html#key-resources",
    "href": "content/en/index.html#key-resources",
    "title": "Google developer documentation style guide",
    "section": "",
    "text": "Word list\nProduct names\nText-formatting summary"
  },
  {
    "objectID": "content/en/index.html#general-principles",
    "href": "content/en/index.html#general-principles",
    "title": "Google developer documentation style guide",
    "section": "",
    "text": "Accessibility\nExcessive claims\nFuture features\nGlobal audience\nInclusive language\nJargon\nPrescriptive documentation\nThird-party content\nTimeless documentation\nVoice and tone"
  },
  {
    "objectID": "content/en/index.html#language-and-grammar",
    "href": "content/en/index.html#language-and-grammar",
    "title": "Google developer documentation style guide",
    "section": "",
    "text": "Abbreviations\nActive voice\nAnthropomorphism\nArticles (a, an, the)\nCapitalization\nContractions\nPlurals in parentheses\nPossessives\nPrepositions\nPresent tense\nPronouns\nSecond person\nSentence structure\nVerbs in reference documents"
  },
  {
    "objectID": "content/en/index.html#punctuation",
    "href": "content/en/index.html#punctuation",
    "title": "Google developer documentation style guide",
    "section": "",
    "text": "Colons\nCommas\nDashes\nEllipses\nHyphens\nParentheses\nPeriods and end punctuation\nQuotation marks\nSemicolons\nSlashes"
  },
  {
    "objectID": "content/en/index.html#formatting-and-organization",
    "href": "content/en/index.html#formatting-and-organization",
    "title": "Google developer documentation style guide",
    "section": "",
    "text": "Dates and times\nExamples\nFigures and other images\nFootnotes\nHeadings and titles\nItalics with terms\nLists\nNotes and other notices\nNumbers\nParagraphs\nPhone numbers\nPlural of a single letter\nProcedures\nTables\nUnits of measurement"
  },
  {
    "objectID": "content/en/index.html#linking",
    "href": "content/en/index.html#linking",
    "title": "Google developer documentation style guide",
    "section": "",
    "text": "Cross-references and linking\nHeadings as link targets"
  },
  {
    "objectID": "content/en/index.html#computer-interfaces",
    "href": "content/en/index.html#computer-interfaces",
    "title": "Google developer documentation style guide",
    "section": "",
    "text": "This category needs help.\n\n\n[API reference code comments]\n[Code in text]\n[Code samples]"
  },
  {
    "objectID": "content/en/grammar/pronouns.html",
    "href": "content/en/grammar/pronouns.html",
    "title": "Pronouns",
    "section": "",
    "text": "Source: https://developers.google.com/style/pronouns\n\nEnsure that a pronoun clearly refers to its antecedent (the noun that it’s replacing).\n\n\nAvoid vague and confusing references between a pronoun and its antecedent.\n\n✅ Recommended: If you type text in the field, the text doesn’t change.\n❌ Not recommended: If you type text in the field, it doesn’t change.\n✅ Recommended: The name of the function to execute in the given script. The name does not include parentheses or parameters.\n❌ Not recommended: The name of the function to execute in the given script. It does not include parentheses or parameters.\n\nIn many cases, it’s best to follow a demonstrative pronoun (like this and these) with a noun.\n\n✅ Recommended: Set this value to true.\n❌ Not recommended: Set this to true.\n✅ Recommended: These approaches are your best options.\n❌ Not recommended: These are your best options.\n\n\n\n\nDon’t use gender-specific pronouns unless the person you’re referring to is actually that gender.\nIn particular, don’t use he, him, his, she, or her as gender-neutral pronouns, and don’t use he/she or (s)he or other such punctuational approaches. Instead, use the singular they.\nSingular they has been in use for a long time; for example, Jane Austen used it, and in 2015 the Washington Postadopted it as part of their official style.\nFor more suggestions, see The Chicago Manual of Style, 16th edition, section 5.225, “Nine techniques for achieving gender neutrality.”\n\n\n\nTo avoid ambiguity and clarify meaning in sentences, use optional pronouns such as that and which.\n\n\n\n\n\n\n\nRecommended\nNot recommended\n\n\n\n\nRight-click the link that you want to open.\nRight-click the link you want to open.\n\n\nYou can use other option parameters, which are described in the following section.\nYou can use other option parameters, described in the following section.\n\n\n\nFor more information, see Relative pronouns.\n\n\n\nAvoid first-person pronouns (I, we, us, our, and ours) except in the following contexts:\n\nThe questions in FAQs.\nA document whose author makes comments in the first person.\nUsing we to refer to your organization, after using your organization’s name. For example, “Example Pet Store recommends that you feed your aardvark Standardized Aardvark Treats. We cannot guarantee the happiness of your aardvark otherwise.”\n\nUse the second-person pronoun (you) whenever possible. For more information about second person, see Second person and first person.\n\n\n\nThere are several relative pronouns. This section concerns only three of them: that, which, and who.\nThat and which don’t mean exactly the same thing, so don’t substitute one for the other:\n\nThat introduces a restrictive clause. It isn’t preceded by a comma.\n✅ Recommended: The echidna that has a long snout is furry.\n\nThis sentence describes a particular echidna, the one that has a long snout.\n\nWhich introduces a nonrestrictive clause and is preceded by a comma.\n✅ Recommended: The echidna, which has a long snout, is furry.\n\nThis sentence describes all echidnas, and mentions in passing that they all have long snouts.\nFor more information about restrictive and nonrestrictive clauses and whether to use that or which, read what Grammar Girl has to say on the subject.\nWhen you’re referring to a person, you can use who instead of that. If you’re not sure which pronoun is appropriate in your context, then it’s generally OK to use that.\nYou can use whose to refer to people, animals, and things. Whose is the possessive form of both who and which.\n\n✅ Recommended: Examine the variables whose values are set at compile time.",
    "crumbs": [
      "Language and grammar",
      "Pronouns"
    ]
  },
  {
    "objectID": "content/en/grammar/pronouns.html#ambiguous-pronoun-references",
    "href": "content/en/grammar/pronouns.html#ambiguous-pronoun-references",
    "title": "Pronouns",
    "section": "",
    "text": "Avoid vague and confusing references between a pronoun and its antecedent.\n\n✅ Recommended: If you type text in the field, the text doesn’t change.\n❌ Not recommended: If you type text in the field, it doesn’t change.\n✅ Recommended: The name of the function to execute in the given script. The name does not include parentheses or parameters.\n❌ Not recommended: The name of the function to execute in the given script. It does not include parentheses or parameters.\n\nIn many cases, it’s best to follow a demonstrative pronoun (like this and these) with a noun.\n\n✅ Recommended: Set this value to true.\n❌ Not recommended: Set this to true.\n✅ Recommended: These approaches are your best options.\n❌ Not recommended: These are your best options.",
    "crumbs": [
      "Language and grammar",
      "Pronouns"
    ]
  },
  {
    "objectID": "content/en/grammar/pronouns.html#gender-neutral-pronouns",
    "href": "content/en/grammar/pronouns.html#gender-neutral-pronouns",
    "title": "Pronouns",
    "section": "",
    "text": "Don’t use gender-specific pronouns unless the person you’re referring to is actually that gender.\nIn particular, don’t use he, him, his, she, or her as gender-neutral pronouns, and don’t use he/she or (s)he or other such punctuational approaches. Instead, use the singular they.\nSingular they has been in use for a long time; for example, Jane Austen used it, and in 2015 the Washington Postadopted it as part of their official style.\nFor more suggestions, see The Chicago Manual of Style, 16th edition, section 5.225, “Nine techniques for achieving gender neutrality.”",
    "crumbs": [
      "Language and grammar",
      "Pronouns"
    ]
  },
  {
    "objectID": "content/en/grammar/pronouns.html#optional-pronouns",
    "href": "content/en/grammar/pronouns.html#optional-pronouns",
    "title": "Pronouns",
    "section": "",
    "text": "To avoid ambiguity and clarify meaning in sentences, use optional pronouns such as that and which.\n\n\n\n\n\n\n\nRecommended\nNot recommended\n\n\n\n\nRight-click the link that you want to open.\nRight-click the link you want to open.\n\n\nYou can use other option parameters, which are described in the following section.\nYou can use other option parameters, described in the following section.\n\n\n\nFor more information, see Relative pronouns.",
    "crumbs": [
      "Language and grammar",
      "Pronouns"
    ]
  },
  {
    "objectID": "content/en/grammar/pronouns.html#personal-pronouns",
    "href": "content/en/grammar/pronouns.html#personal-pronouns",
    "title": "Pronouns",
    "section": "",
    "text": "Avoid first-person pronouns (I, we, us, our, and ours) except in the following contexts:\n\nThe questions in FAQs.\nA document whose author makes comments in the first person.\nUsing we to refer to your organization, after using your organization’s name. For example, “Example Pet Store recommends that you feed your aardvark Standardized Aardvark Treats. We cannot guarantee the happiness of your aardvark otherwise.”\n\nUse the second-person pronoun (you) whenever possible. For more information about second person, see Second person and first person.",
    "crumbs": [
      "Language and grammar",
      "Pronouns"
    ]
  },
  {
    "objectID": "content/en/grammar/pronouns.html#relative-pronouns",
    "href": "content/en/grammar/pronouns.html#relative-pronouns",
    "title": "Pronouns",
    "section": "",
    "text": "There are several relative pronouns. This section concerns only three of them: that, which, and who.\nThat and which don’t mean exactly the same thing, so don’t substitute one for the other:\n\nThat introduces a restrictive clause. It isn’t preceded by a comma.\n✅ Recommended: The echidna that has a long snout is furry.\n\nThis sentence describes a particular echidna, the one that has a long snout.\n\nWhich introduces a nonrestrictive clause and is preceded by a comma.\n✅ Recommended: The echidna, which has a long snout, is furry.\n\nThis sentence describes all echidnas, and mentions in passing that they all have long snouts.\nFor more information about restrictive and nonrestrictive clauses and whether to use that or which, read what Grammar Girl has to say on the subject.\nWhen you’re referring to a person, you can use who instead of that. If you’re not sure which pronoun is appropriate in your context, then it’s generally OK to use that.\nYou can use whose to refer to people, animals, and things. Whose is the possessive form of both who and which.\n\n✅ Recommended: Examine the variables whose values are set at compile time.",
    "crumbs": [
      "Language and grammar",
      "Pronouns"
    ]
  },
  {
    "objectID": "content/en/grammar/voice.html",
    "href": "content/en/grammar/voice.html",
    "title": "Active voice",
    "section": "",
    "text": "Source: https://developers.google.com/style/voice\n\nIn general, use active voice (in which the grammatical subject of the sentence is the person or thing performing the action) instead of passive voice (in which the grammatical subject of the sentence is the person or thing being acted upon), although there are exceptions. Make clear who’s performing the action.\nIn passive voice, it’s easy to neglect to indicate who or what is performing a particular action. In this kind of construction, it’s often hard for readers to figure out who’s supposed to do something (such as the reader, the computer, the server, an end user, or a visitor to a web page).\n\n✅ Recommended: Send a query to the service. The server sends an acknowledgment.\n❌ Not recommended: The service is queried, and an acknowledgment is sent.\n\nIt’s possible to indicate who’s performing the action in passive voice (using by), but the resulting prose is generally not as good as if you were to recast the sentence as active voice. So whenever possible, make the doer the subject of the sentence.\n\n✅ Recommended: Send a query to the service. The server sends an acknowledgment.\n❌ Not recommended: The service is queried by you, and an acknowledgment is sent by the server.\n\nFor more information, see Active voice vs. passive voice in Google’s Technical Writing One guide.\n\n\nIn certain cases, it’s okay to use passive voice. For example, passive can be okay in the following instances:\n\nTo emphasize an object over an action.\n✅ Recommended: The file is saved.\nTo de-emphasize a subject or actor.\n✅ Recommended: Over 50 conflicts were found in the file.\n❌ Not recommended: You created over 50 conflicts in the file.\nIf your readers don’t need to know who’s responsible for the action.\n✅ Recommended: The database was purged in January.",
    "crumbs": [
      "Language and grammar",
      "Active voice"
    ]
  },
  {
    "objectID": "content/en/grammar/voice.html#exceptions",
    "href": "content/en/grammar/voice.html#exceptions",
    "title": "Active voice",
    "section": "",
    "text": "In certain cases, it’s okay to use passive voice. For example, passive can be okay in the following instances:\n\nTo emphasize an object over an action.\n✅ Recommended: The file is saved.\nTo de-emphasize a subject or actor.\n✅ Recommended: Over 50 conflicts were found in the file.\n❌ Not recommended: You created over 50 conflicts in the file.\nIf your readers don’t need to know who’s responsible for the action.\n✅ Recommended: The database was purged in January.",
    "crumbs": [
      "Language and grammar",
      "Active voice"
    ]
  },
  {
    "objectID": "content/en/grammar/reference-verbs.html",
    "href": "content/en/grammar/reference-verbs.html",
    "title": "Verb forms in reference documentation",
    "section": "",
    "text": "Verb forms in reference documentation\n\nSource: https://developers.google.com/style/reference-verbs\n\nWhen you’re writing reference documentation for a method, phrase the main method description in terms of what the method does (gets, lists, creates, searches), rather than what the developer would use it to do (get, list, create, search).\nIt’s a subtle distinction that manifests mostly in whether the initial verb in the description has an -s at the end or not.\n\n✅ Recommended: tasks.insert: Creates a new task on the specified task list.\n❌ Not recommended: tasks.insert: Create a new task on the specified task list.\n\nFor more information and examples, see the Google Cloud API design guide.\n\n\n\n\n Back to top",
    "crumbs": [
      "Language and grammar",
      "Verbs in reference documents"
    ]
  },
  {
    "objectID": "content/en/grammar/anthropomorphism.html",
    "href": "content/en/grammar/anthropomorphism.html",
    "title": "Anthropomorphism",
    "section": "",
    "text": "Anthropomorphism\n\nSource: https://developers.google.com/style/anthropomorphism\n\nDon’t attribute human qualities to software or hardware.\nAnthropomorphism is a category of figurative language, which is less precise and is often harder to understand and translate than direct language. For more information, see Write for a global audience.\n\n✅ Recommended: A Delimiter object specifies where to split a string.\n❌ Not recommended: A Delimiter object tells the splitter where a string should be broken.\n✅ Recommended: The PC detects a new device.\n❌ Not recommended: The PC sees a new device.\n\n\n\n\n\n Back to top",
    "crumbs": [
      "Language and grammar",
      "Anthropomorphism"
    ]
  },
  {
    "objectID": "content/en/grammar/articles.html",
    "href": "content/en/grammar/articles.html",
    "title": "Articles (a, an, the)",
    "section": "",
    "text": "Articles (a, an, the)\n\nSource: https://developers.google.com/style/articles\n\nFor ease of comprehension and translation, include definite and indefinite articles (a, an, and the) in your writing. Don’t skip articles for brevity, including in headings and titles.\n\n✅ Recommended: Create a VM instance\n❌ Not recommended: Create VM instance\n\nFor more information about using standard English word order and about writing for a global audience in general, see Write for a global audience.\nFor more information about writing clear headings and titles, see Headings and titles.\nFor information about using articles before product names, see Articles before product names.\nFor information about using a or an before an abbreviation when the pronunciation of the abbreviation can vary, see Indefinite articles before abbreviations.\n\n\n\n\n Back to top",
    "crumbs": [
      "Language and grammar",
      "Articles (a, an, the)"
    ]
  },
  {
    "objectID": "content/en/grammar/sentence-structure.html",
    "href": "content/en/grammar/sentence-structure.html",
    "title": "Sentence structure",
    "section": "",
    "text": "Sentence structure\n\nSource: https://developers.google.com/style/sentence-structure\n\nIf you want to tell the reader to do something, try to mention the circumstance, conditions, or goal before you provide the instruction. Mentioning the circumstance first lets the reader skip the instruction if it doesn’t apply. For information about how to apply this guideline to procedural instructions, see Procedures.\n\n\n\n\n\n\n\nRecommended\nNot recommended\n\n\n\n\nFor more information, see [link to other document].\nSee [link to other document] for more information.\n\n\nTo delete the entire document, click Delete.\nClick Delete if you want to delete the entire document.\n\n\nIf your app is located in one of the following regions, using custom domains might add noticeable latency to responses:\nUsing custom domains might add noticeable latency to responses if your app is located in one of the following regions:\n\n\n\n\n\n\n\n Back to top",
    "crumbs": [
      "Language and grammar",
      "Sentence structure"
    ]
  },
  {
    "objectID": "content/en/grammar/capitalization.html",
    "href": "content/en/grammar/capitalization.html",
    "title": "Capitalization",
    "section": "",
    "text": "Source: https://developers.google.com/style/capitalization\n\nFollow the standard capitalization rules for American English. Additionally, do the following:\n\nDon’t use unnecessary capitalization; before you capitalize a word, think about why (and whether) it should be capitalized.\nDon’t rely on a difference in capitalization to convey meaning. For example, although people who are familiar with Kubernetes probably understand that a capitalized Pod is a Kubernetes unit, and a lowercase pod is any other kind of pod, that distinction is likely lost on many casual readers or those who are new to the domain.\nDon’t use all-uppercase, except in the following contexts: in official names, in abbreviations that are always written in all-caps, or when referring to code that uses all-caps.\nDon’t use camel case, except in official names or when referring to code that uses camel case.\n\nFor information about how to capitalize specific words, see the word list.\n\n\nFor information about how to capitalize product names, see Product names.\n\n\n\nIn document titles and headings, use sentence case. That is, capitalize only the first word in the title, the first word in a subheading after a colon, and any proper nouns or other terms that are always capitalized a certain way.\nEven though you’re using sentence case, don’t put a period at the end of a title or heading.\n\n\nIn references to any title or heading from a document that follows this guide, use sentence case even if the title or heading itself uses title case. That way, when the title or heading is eventually updated to sentence case, the reference will match.\nWhen you reference the title of any work or source that doesn’t follow this guide, retain the original capitalization.\nFor more information about internal and external references, see Cross-references and linking.\nFor more information about formatting references to third-party sources, see HTML and semantic tagging.\n\n\n\n\nUse a lowercase letter to begin the first word of the text immediately following a colon, unless the text is one of the following:\n\nA proper noun (Open source software: Hadoop)\nA heading; see also Capitalization in titles and headings\nA quotation (Arthurian wit: “Bring me yon sworde”)\nText that follows a label such as Caution or Note\n\n\n\n\nUse sentence case for captions. Use sentence case for labels, callouts, and other text in images and diagrams.\n\n\n\nUse lowercase for glossary and index terms unless the term is a proper noun or has another reason to require capitalization.\nUse sentence case for glossary definitions.\n\n\n\nWhen a hyphenated word is the first word in a sentence or in a heading, capitalize only the first element in the word, unless a subsequent element is a proper noun or proper adjective.\n\n\n\nUse sentence case for items in all types of lists. For more information, see Capitalization and end punctuation.\n\n\n\nUse sentence case for all the elements in a table: contents, headings, labels, and captions.\n\n\n\nDon’t use a casing style name, such as camel case or snake case, to describe a casing style. These names don’t localize well and they aren’t standardized. Instead, explain what the requirements are and provide an example.\n\n✅ Recommended: Enter the value for the attribute field in the format where there are no spaces between words and the first letter of each word is capitalized—for example, AssertionAccount.",
    "crumbs": [
      "Language and grammar",
      "Capitalization"
    ]
  },
  {
    "objectID": "content/en/grammar/capitalization.html#capitalize-product-names",
    "href": "content/en/grammar/capitalization.html#capitalize-product-names",
    "title": "Capitalization",
    "section": "",
    "text": "For information about how to capitalize product names, see Product names.",
    "crumbs": [
      "Language and grammar",
      "Capitalization"
    ]
  },
  {
    "objectID": "content/en/grammar/capitalization.html#capitalization-in-titles-and-headings",
    "href": "content/en/grammar/capitalization.html#capitalization-in-titles-and-headings",
    "title": "Capitalization",
    "section": "",
    "text": "In document titles and headings, use sentence case. That is, capitalize only the first word in the title, the first word in a subheading after a colon, and any proper nouns or other terms that are always capitalized a certain way.\nEven though you’re using sentence case, don’t put a period at the end of a title or heading.\n\n\nIn references to any title or heading from a document that follows this guide, use sentence case even if the title or heading itself uses title case. That way, when the title or heading is eventually updated to sentence case, the reference will match.\nWhen you reference the title of any work or source that doesn’t follow this guide, retain the original capitalization.\nFor more information about internal and external references, see Cross-references and linking.\nFor more information about formatting references to third-party sources, see HTML and semantic tagging.",
    "crumbs": [
      "Language and grammar",
      "Capitalization"
    ]
  },
  {
    "objectID": "content/en/grammar/capitalization.html#capitalization-and-colons",
    "href": "content/en/grammar/capitalization.html#capitalization-and-colons",
    "title": "Capitalization",
    "section": "",
    "text": "Use a lowercase letter to begin the first word of the text immediately following a colon, unless the text is one of the following:\n\nA proper noun (Open source software: Hadoop)\nA heading; see also Capitalization in titles and headings\nA quotation (Arthurian wit: “Bring me yon sworde”)\nText that follows a label such as Caution or Note",
    "crumbs": [
      "Language and grammar",
      "Capitalization"
    ]
  },
  {
    "objectID": "content/en/grammar/capitalization.html#capitalization-and-figures",
    "href": "content/en/grammar/capitalization.html#capitalization-and-figures",
    "title": "Capitalization",
    "section": "",
    "text": "Use sentence case for captions. Use sentence case for labels, callouts, and other text in images and diagrams.",
    "crumbs": [
      "Language and grammar",
      "Capitalization"
    ]
  },
  {
    "objectID": "content/en/grammar/capitalization.html#capitalization-in-glossaries-and-indexes",
    "href": "content/en/grammar/capitalization.html#capitalization-in-glossaries-and-indexes",
    "title": "Capitalization",
    "section": "",
    "text": "Use lowercase for glossary and index terms unless the term is a proper noun or has another reason to require capitalization.\nUse sentence case for glossary definitions.",
    "crumbs": [
      "Language and grammar",
      "Capitalization"
    ]
  },
  {
    "objectID": "content/en/grammar/capitalization.html#capitalization-and-hyphenated-words",
    "href": "content/en/grammar/capitalization.html#capitalization-and-hyphenated-words",
    "title": "Capitalization",
    "section": "",
    "text": "When a hyphenated word is the first word in a sentence or in a heading, capitalize only the first element in the word, unless a subsequent element is a proper noun or proper adjective.",
    "crumbs": [
      "Language and grammar",
      "Capitalization"
    ]
  },
  {
    "objectID": "content/en/grammar/capitalization.html#capitalization-in-lists",
    "href": "content/en/grammar/capitalization.html#capitalization-in-lists",
    "title": "Capitalization",
    "section": "",
    "text": "Use sentence case for items in all types of lists. For more information, see Capitalization and end punctuation.",
    "crumbs": [
      "Language and grammar",
      "Capitalization"
    ]
  },
  {
    "objectID": "content/en/grammar/capitalization.html#capitalization-for-tables-in-text",
    "href": "content/en/grammar/capitalization.html#capitalization-for-tables-in-text",
    "title": "Capitalization",
    "section": "",
    "text": "Use sentence case for all the elements in a table: contents, headings, labels, and captions.",
    "crumbs": [
      "Language and grammar",
      "Capitalization"
    ]
  },
  {
    "objectID": "content/en/grammar/capitalization.html#special-capitalization-style-names",
    "href": "content/en/grammar/capitalization.html#special-capitalization-style-names",
    "title": "Capitalization",
    "section": "",
    "text": "Don’t use a casing style name, such as camel case or snake case, to describe a casing style. These names don’t localize well and they aren’t standardized. Instead, explain what the requirements are and provide an example.\n\n✅ Recommended: Enter the value for the attribute field in the format where there are no spaces between words and the first letter of each word is capitalized—for example, AssertionAccount.",
    "crumbs": [
      "Language and grammar",
      "Capitalization"
    ]
  },
  {
    "objectID": "content/en/naming/filenames.html",
    "href": "content/en/naming/filenames.html",
    "title": "Filenames and file types",
    "section": "",
    "text": "Make file and directory names lowercase, with the occasional exception for consistency, to make file searches easier and search results more useful. For example, because most Unix-style operating systems are case sensitive, they can’t find a file named Impersonate-Service-Accounts.html if you search for impersonate-service-accounts.html. Linux and macOS interpret these as two distinct files.\nUse hyphens, not underscores, to separate words—for example, query-data.html. Search engines interpret hyphens in file and directory names as spaces between words. Underscores are generally not recognized, meaning that their presence can negatively affect SEO.\nUse only standard ASCII alphanumeric characters in file and directory names.\nDon’t use generic page names such as document1.html.\n\n\nIf you’re adding to a directory where everything else already uses underscores, and it’s not feasible to change everything to hyphens, it’s okay to use underscores to stay consistent.\nFor example, if the directory already has lesson_1.jd, lesson_2.jd, and lesson_3.jd, it’s okay to add your new file as lesson_4.jd instead of lesson-4.jd. However, in all other situations, use hyphens.\n✅ Recommended: avoiding-cliches.jd\n✅ Sometimes OK: avoiding_cliches.jd\n❌ Not recommended: avoidingcliches.jd\n❌ Not recommended: avoidingCliches.jd\n❌ Not recommended: avoiding-clichés.jd\n\n\n\nIt’s okay to have some inconsistency in filenames if it can’t otherwise be avoided. For example, sometimes tools that generate reference documentation produce filenames based on different style requirements or based on the design and naming conventions of the product or API itself. In those cases, it’s okay to make exceptions for those files.\n\n\n\n\nThe following sections discuss how to reference files.\n\n\nWhen referring to a specific file, do the following:\n\nUse code font.\nInclude the word file after the filename. For more information, see Grammatical treatment of code elements.\nUse the exact spelling of the filename even if it doesn’t follow naming guidelines.\nIf a sample of the file is included on the page, follow the code sample guidelines and precede a code sample with an introductory sentence or paragraph that includes the filename.\n\n✅ Recommended: In the following build.sh file, modify the default values for all parameters:\n\n\n\nWhen interacting with files and file types, don’t use the file types as a verb.\n✅ Recommended: Extract a zip file.\n❌ Not recommended: Unzip a zip file.\n\n\n\nWhen you’re discussing a file type, use the formal name of the type, not the filename extension. (The file type name is often in all caps because many file type names are acronyms or initialisms.) Do not use the filename extension to refer generically to the file type.\n✅ Recommended: a PNG file\n❌ Not recommended: a .png file\n✅ Recommended: a Bash file\n❌ Not recommended: an .sh file\nThe following table lists some examples of filename extensions and the corresponding file type names to use.\n\n\n\nExtension\nFile type name\n\n\n\n\n.adoc\nAsciiDoc file\n\n\n.csv\nCSV file\n\n\n.exe\nexecutable file\n\n\n.gif\nGIF file\n\n\n.img\ndisk image file\n\n\n.ipynb\nIPYNB file\n\n\n.jar\nJAR file\n\n\n.jpg, .jpeg\nJPEG file\n\n\n.json\nJSON file\n\n\n.md\nMarkdown file\n\n\n.pdf\nPDF file\n\n\n.png\nPNG file\n\n\n.ps\nPowerShell file\n\n\n.py\nPython file\n\n\n.sh\nBash file\n\n\n.sql\nSQL file\n\n\n.svg\nSVG file\n\n\n.tar\ntar file\n\n\n.tf\nTerraform file\n\n\n.tiff\nTIFF file\n\n\n.txt\ntext file\n\n\n.yaml\nYAML file\n\n\n.zip\nzip file",
    "crumbs": [
      "Names and naming",
      "Filenames"
    ]
  },
  {
    "objectID": "content/en/naming/filenames.html#guidelines-for-names",
    "href": "content/en/naming/filenames.html#guidelines-for-names",
    "title": "Filenames and file types",
    "section": "",
    "text": "Make file and directory names lowercase, with the occasional exception for consistency, to make file searches easier and search results more useful. For example, because most Unix-style operating systems are case sensitive, they can’t find a file named Impersonate-Service-Accounts.html if you search for impersonate-service-accounts.html. Linux and macOS interpret these as two distinct files.\nUse hyphens, not underscores, to separate words—for example, query-data.html. Search engines interpret hyphens in file and directory names as spaces between words. Underscores are generally not recognized, meaning that their presence can negatively affect SEO.\nUse only standard ASCII alphanumeric characters in file and directory names.\nDon’t use generic page names such as document1.html.\n\n\nIf you’re adding to a directory where everything else already uses underscores, and it’s not feasible to change everything to hyphens, it’s okay to use underscores to stay consistent.\nFor example, if the directory already has lesson_1.jd, lesson_2.jd, and lesson_3.jd, it’s okay to add your new file as lesson_4.jd instead of lesson-4.jd. However, in all other situations, use hyphens.\n✅ Recommended: avoiding-cliches.jd\n✅ Sometimes OK: avoiding_cliches.jd\n❌ Not recommended: avoidingcliches.jd\n❌ Not recommended: avoidingCliches.jd\n❌ Not recommended: avoiding-clichés.jd\n\n\n\nIt’s okay to have some inconsistency in filenames if it can’t otherwise be avoided. For example, sometimes tools that generate reference documentation produce filenames based on different style requirements or based on the design and naming conventions of the product or API itself. In those cases, it’s okay to make exceptions for those files.",
    "crumbs": [
      "Names and naming",
      "Filenames"
    ]
  },
  {
    "objectID": "content/en/naming/filenames.html#refer-to-files",
    "href": "content/en/naming/filenames.html#refer-to-files",
    "title": "Filenames and file types",
    "section": "",
    "text": "The following sections discuss how to reference files.\n\n\nWhen referring to a specific file, do the following:\n\nUse code font.\nInclude the word file after the filename. For more information, see Grammatical treatment of code elements.\nUse the exact spelling of the filename even if it doesn’t follow naming guidelines.\nIf a sample of the file is included on the page, follow the code sample guidelines and precede a code sample with an introductory sentence or paragraph that includes the filename.\n\n✅ Recommended: In the following build.sh file, modify the default values for all parameters:\n\n\n\nWhen interacting with files and file types, don’t use the file types as a verb.\n✅ Recommended: Extract a zip file.\n❌ Not recommended: Unzip a zip file.\n\n\n\nWhen you’re discussing a file type, use the formal name of the type, not the filename extension. (The file type name is often in all caps because many file type names are acronyms or initialisms.) Do not use the filename extension to refer generically to the file type.\n✅ Recommended: a PNG file\n❌ Not recommended: a .png file\n✅ Recommended: a Bash file\n❌ Not recommended: an .sh file\nThe following table lists some examples of filename extensions and the corresponding file type names to use.\n\n\n\nExtension\nFile type name\n\n\n\n\n.adoc\nAsciiDoc file\n\n\n.csv\nCSV file\n\n\n.exe\nexecutable file\n\n\n.gif\nGIF file\n\n\n.img\ndisk image file\n\n\n.ipynb\nIPYNB file\n\n\n.jar\nJAR file\n\n\n.jpg, .jpeg\nJPEG file\n\n\n.json\nJSON file\n\n\n.md\nMarkdown file\n\n\n.pdf\nPDF file\n\n\n.png\nPNG file\n\n\n.ps\nPowerShell file\n\n\n.py\nPython file\n\n\n.sh\nBash file\n\n\n.sql\nSQL file\n\n\n.svg\nSVG file\n\n\n.tar\ntar file\n\n\n.tf\nTerraform file\n\n\n.tiff\nTIFF file\n\n\n.txt\ntext file\n\n\n.yaml\nYAML file\n\n\n.zip\nzip file",
    "crumbs": [
      "Names and naming",
      "Filenames"
    ]
  },
  {
    "objectID": "content/zh-tw/general-principles/future-features.html",
    "href": "content/zh-tw/general-principles/future-features.html",
    "title": "未來功能",
    "section": "",
    "text": "未來功能\n避免記錄未來的功能或產品，即使是以無傷大雅的方式。除非經過法務部門核准，否則請勿在文件中預先宣布任何事項。\n另請參閱現在式和雋永的文件。\n\n\n\n\n Back to top"
  },
  {
    "objectID": "content/zh-tw/general-principles/accessibility.html",
    "href": "content/zh-tw/general-principles/accessibility.html",
    "title": "撰寫無障礙文件",
    "section": "",
    "text": "我們在撰寫開發人員文件時，會將無障礙納入考量。本頁面並非詳盡的參考資料，而是描述一些通用準則和範例，以說明應遵循的最佳實務。根據世界衛生組織的估計，全球有 15% 的人口（超過 10 億人）有某種形式的身心障礙。在撰寫文件時考慮到無障礙，可以改善所有讀者的整體體驗。\n關於其他寫作最佳實務，請參閱以下資源：\n\n為全球讀者撰寫\n撰寫具包容性的文件\n語氣與風格\n\n\n\n\n請勿使用歧視身心障礙者的語言。在討論身心障礙和無障礙時，避免偏見和傷害。更多資訊，請參閱撰寫具包容性的文件。\n確保讀者僅使用鍵盤，無需滑鼠或觸控板，即可存取文件的所有部分（包括分頁、表單提交按鈕和互動式元素）。\n使用螢幕閱讀器測試您的文件。此測試可以幫助您發現內容中的無障礙問題，也是自我編輯內容的好方法。若要試用螢幕閱讀器，請參閱螢幕閱讀器列表。\n在 HTML 中，使用語意標籤。例如，僅使用 em 元素表示強調，而非表示斜體。\n在 HTML 中，偏好使用原生元素而非自訂樣式。\n避免不必要的字型格式設定。（螢幕閱讀器會明確描述文字修改。）\n如果您正在記錄的產品包含專門的無障礙功能，請明確記錄這些功能。例如，Google Cloud CLI (gcloud CLI) 包含可切換的無障礙功能，例如百分比進度列和 ASCII 方塊呈現。\n請勿在句子和段落中強制換行（硬換行）。換行符可能在調整大小的視窗或放大文字中無法正常運作。\n盡可能避免駝峰式命名法和全部大寫。某些螢幕閱讀器會單獨讀出大寫字母，且某些語言是單一大小寫。遵循大寫準則。\n根據螢幕閱讀器（或個人設定），並非所有標點符號都會被讀出。請確保在沒有標點符號的情況下，也能向讀者傳達相同的意義。因此，盡可能避免使用驚嘆號、問號和分號。\n請勿在標題、文字、導覽或目錄中使用 & 取代 and。但是，在參照使用 & 的 UI 元素，或在空間限制需要縮寫的表格標題和圖表標籤中，可以使用 &。當然，在程式碼中出於技術目的使用 & 是可以的。\n\n\n\n\n\n將大段文字分開，以利於掃描閱讀。例如，分開段落、建立標題，以及使用清單。\n使用較短的句子。盡量讓每個句子少於 26 個字。\n在首次使用縮寫和縮寫詞時，以及在不常使用它們的情況下，定義它們。\n對於相似的事物，使用平行的寫作結構。例如，以相同的格式開始每個清單。\n將段落的區別性和重要資訊放在第一句，以利於掃描閱讀。\n使用清晰直接的語言。避免使用雙重否定和例外中的例外。\n\n✅ 建議：您可以繼續，不需路徑。\n❌ 不建議：缺少路徑不會阻止您繼續。\n\n文字靠左對齊以便閱讀。請勿將文字置中或左右對齊。\n\n\n\n\n使用描述性的標題和標題，因為它們可以幫助讀者導覽他們的瀏覽器和頁面。如果標題和標題是唯一的，在頁面和頁面區段之間跳轉會更容易。\n\n使用標題階層。\n請勿跳過標題階層的層級。例如，僅在 h2 元素之後放置 h3 元素。\n若要變更標題的視覺格式，請使用 CSS，而非使用不符合階層的標題層級。\n請勿使用空標題或沒有相關內容的標題。\n使用標題元素標記標題。在 HTML 中：h1、h2 等。在 Markdown 中：#、## 等。\n使用層級 1 標題作為頁面標題或主要內容標題。\n\n更多資訊和範例，請參閱標題和標題。\n\n\n\n\n使用有意義的連結文字。連結在脫離上下文閱讀時也應該有意義。\n請勿使用按此處或閱讀此文件。某些使用螢幕閱讀器的人會從一個連結跳到另一個連結來掃描頁面，他們需要了解連結的內容。\n使用請參閱來參照連結和交叉參照。更多資訊，請參閱請參閱。\n當連結會執行讀者可能未預期的任何操作時，例如下載檔案、在新分頁中開啟或跳至同一頁面的另一部分，請在連結時說明該行為。更多資訊，請參閱說明未預期的連結行為。\n盡可能避免相鄰的連結。請在它們之間放置一個字元以將其分開。\n\n\n\n\n\n在程序中，將每個指令設為一個清單項目。\n使用清單讓讀者更容易遵循步驟。\n\n\n\n\n\n為每張圖片提供 alt 屬性。對於包含替代文字的 alt 屬性，請使用能充分總結每張圖片意圖的替代文字。如果圖片純粹是裝飾性的，請使用空的替代文字。\n請勿在圖片中呈現新資訊。請務必隨圖片提供等效的文字說明。\n除非絕對必要，否則請勿重複使用圖片。\n請勿使用文字、程式碼範例或終端機輸出的圖片。請使用實際文字。\n如果可用，請使用 SVG 而非 PNG。SVG 在放大圖片時能保持清晰。\n\n更多資訊，請參閱與圖片相關的文字。\n\n\n\n\n為音訊和影片內容提供字幕、逐字稿或說明。例如，您可以使用 YouTube 中的自動字幕功能。\n確保字幕可以翻譯成主要語言。\n請勿使用閃爍或閃爍的元素。它們可能導致從暈動病到癲癇發作的任何情況。\n\n\n\n\n\n對於表單提交按鈕，請使用原生的 HTML button 元素。\n圖示是代表物件或功能的符號或圖片。有關使用圖示的資訊，請參閱「UI 元素和互動」頁面的按鈕和圖示部分。\n\n\n\n\n當您使用角括號 (&gt;) 來記錄選單路徑時，請新增 aria-label 屬性來幫助螢幕閱讀器將括號解讀為「然後」而不是「大於」或「鍵盤向右箭頭」。更多資訊和範例，請參閱選單列。\n\n\n\n\n在表格前的文字中介紹表格，因為並非所有螢幕閱讀器都會預先宣告表格。\n僅將表格標題用於第一欄和第一列。使用 th 元素。\n如果您的表格同時包含列標題和欄標題，請使用 scope 屬性標記標題儲存格。\n如果您的表格有多個包含欄標題的列，請使用 headers 屬性並確保標題具有唯一的 ID。\n盡可能避免在編號程序的中间使用表格。\n請勿合併儲存格。請勿使用 colspan 或 rowspan 屬性。\n除非是呈現資訊的最佳方法，否則請勿使用表格。表格對螢幕閱讀器來說具有挑戰性。更多資訊，請參閱清單或表格。\n請勿僅透過圖片或符號在表格中呈現新資訊；請務必為圖片或符號提供描述性的 alt 屬性。更多資訊，請參閱替代文字。\n\n更多資訊，請參閱表格。\n\n\n\n在互動式元素（例如可展開和收合的按鈕）之前的文字中介紹該元素。\n\n✅ 建議（如果可行）：若要查看需求清單，請展開需求部分。\n✅ 建議：若要查看需求清單，請按一下 arrow_right 展開箭頭。\n\n\n\n\n\n使用 label 元素為每個輸入欄位加上標籤。\n將標籤放在欄位外部。\n當您為表單驗證建立錯誤訊息時，請清楚說明出了什麼問題以及如何修正，例如：「姓名為必填欄位。」\n\n\n\n\n盡可能使用您網站的標準樣式和標準 JavaScript 程式碼。但是，如果您確實使用自訂樣式或程式碼，請遵循以下準則：\n\n選擇符合無障礙色彩對比度（文字為 4.5:1）的顏色。\n請勿使用 visibility:hidden 或 display:none。這兩種樣式都會向螢幕閱讀器隱藏資訊。\n盡可能避免使用滑鼠懸停事件。但如果您確實使用它們，請為鍵盤使用者新增替代的焦點和模糊事件。\n確保樣式中定義的任何排序和定位都反映您頁面的 DOM 和閱讀順序（例如從左到右和從上到下）。\n\n\n\n\n確保您的文件在以下情境中檢視時，能傳達您預期的所有資訊：\n\n無聲音\n僅使用聲音\n無圖片，包括動畫\n無色彩\n使用鍵盤\n使用螢幕放大\n無標點符號\n\n請勿使用顏色、大小、位置或其他視覺提示作為傳達資訊的主要方式。\n\n如果您使用顏色、圖示或輪廓粗細來傳達狀態，請同時提供次要提示，例如文字標籤的變更。\n透過標籤參照按鈕和其他元素。對於沒有文字的視覺元素，請勿嘗試描述該元素。請改用元素的 [aria-label](https://www.w3.org/TR/WCAG20-TECHS/ARIA14.html) 屬性（如果可能）。例如：\n\n✅ 建議：按一下儲存。\n✅ 建議：按一下通知。\n❌ 不建議：按一下鈴鐺圖示。\n\n請勿使用方向性語言來引導讀者，例如上方、下方或右側。這類語言對於無障礙或本地化原因都不太適用。例如，對於由左至右的語言，右側的內容會出現在由右至左的語言的左側。\n請勿使用方向性語言來參照文件中的位置。例如，如果文字是由螢幕閱讀器讀取，則它不是在下方。請改用較早、先前或下列。\n\n✅ 建議：在先前的圖表中，用戶端會在多團隊或單一團隊叢集上執行工作。\n❌ 不建議：在上圖中，用戶端會在多團隊或單一團隊叢集上執行工作。\n\n如果UI 元素難以找到，請提供螢幕截圖。\n\n✅ 建議：按一下 menu 選單。\n❌ 不建議：在左側面板中，按一下有三條線的按鈕。\n\n\n\n\n\n\nGoogle 的主要無障礙頁面\nWeb 內容無障礙指南 (WCAG) 2.0\nWeb 無障礙倡議 (WAI)\n使用 ARIA\nWeb 無障礙教學"
  },
  {
    "objectID": "content/zh-tw/general-principles/accessibility.html#通用-dos-and-donts",
    "href": "content/zh-tw/general-principles/accessibility.html#通用-dos-and-donts",
    "title": "撰寫無障礙文件",
    "section": "",
    "text": "請勿使用歧視身心障礙者的語言。在討論身心障礙和無障礙時，避免偏見和傷害。更多資訊，請參閱撰寫具包容性的文件。\n確保讀者僅使用鍵盤，無需滑鼠或觸控板，即可存取文件的所有部分（包括分頁、表單提交按鈕和互動式元素）。\n使用螢幕閱讀器測試您的文件。此測試可以幫助您發現內容中的無障礙問題，也是自我編輯內容的好方法。若要試用螢幕閱讀器，請參閱螢幕閱讀器列表。\n在 HTML 中，使用語意標籤。例如，僅使用 em 元素表示強調，而非表示斜體。\n在 HTML 中，偏好使用原生元素而非自訂樣式。\n避免不必要的字型格式設定。（螢幕閱讀器會明確描述文字修改。）\n如果您正在記錄的產品包含專門的無障礙功能，請明確記錄這些功能。例如，Google Cloud CLI (gcloud CLI) 包含可切換的無障礙功能，例如百分比進度列和 ASCII 方塊呈現。\n請勿在句子和段落中強制換行（硬換行）。換行符可能在調整大小的視窗或放大文字中無法正常運作。\n盡可能避免駝峰式命名法和全部大寫。某些螢幕閱讀器會單獨讀出大寫字母，且某些語言是單一大小寫。遵循大寫準則。\n根據螢幕閱讀器（或個人設定），並非所有標點符號都會被讀出。請確保在沒有標點符號的情況下，也能向讀者傳達相同的意義。因此，盡可能避免使用驚嘆號、問號和分號。\n請勿在標題、文字、導覽或目錄中使用 & 取代 and。但是，在參照使用 & 的 UI 元素，或在空間限制需要縮寫的表格標題和圖表標籤中，可以使用 &。當然，在程式碼中出於技術目的使用 & 是可以的。"
  },
  {
    "objectID": "content/zh-tw/general-principles/accessibility.html#閱讀的便利性",
    "href": "content/zh-tw/general-principles/accessibility.html#閱讀的便利性",
    "title": "撰寫無障礙文件",
    "section": "",
    "text": "將大段文字分開，以利於掃描閱讀。例如，分開段落、建立標題，以及使用清單。\n使用較短的句子。盡量讓每個句子少於 26 個字。\n在首次使用縮寫和縮寫詞時，以及在不常使用它們的情況下，定義它們。\n對於相似的事物，使用平行的寫作結構。例如，以相同的格式開始每個清單。\n將段落的區別性和重要資訊放在第一句，以利於掃描閱讀。\n使用清晰直接的語言。避免使用雙重否定和例外中的例外。\n\n✅ 建議：您可以繼續，不需路徑。\n❌ 不建議：缺少路徑不會阻止您繼續。\n\n文字靠左對齊以便閱讀。請勿將文字置中或左右對齊。"
  },
  {
    "objectID": "content/zh-tw/general-principles/accessibility.html#標題和標題",
    "href": "content/zh-tw/general-principles/accessibility.html#標題和標題",
    "title": "撰寫無障礙文件",
    "section": "",
    "text": "使用描述性的標題和標題，因為它們可以幫助讀者導覽他們的瀏覽器和頁面。如果標題和標題是唯一的，在頁面和頁面區段之間跳轉會更容易。\n\n使用標題階層。\n請勿跳過標題階層的層級。例如，僅在 h2 元素之後放置 h3 元素。\n若要變更標題的視覺格式，請使用 CSS，而非使用不符合階層的標題層級。\n請勿使用空標題或沒有相關內容的標題。\n使用標題元素標記標題。在 HTML 中：h1、h2 等。在 Markdown 中：#、## 等。\n使用層級 1 標題作為頁面標題或主要內容標題。\n\n更多資訊和範例，請參閱標題和標題。"
  },
  {
    "objectID": "content/zh-tw/general-principles/accessibility.html#連結",
    "href": "content/zh-tw/general-principles/accessibility.html#連結",
    "title": "撰寫無障礙文件",
    "section": "",
    "text": "使用有意義的連結文字。連結在脫離上下文閱讀時也應該有意義。\n請勿使用按此處或閱讀此文件。某些使用螢幕閱讀器的人會從一個連結跳到另一個連結來掃描頁面，他們需要了解連結的內容。\n使用請參閱來參照連結和交叉參照。更多資訊，請參閱請參閱。\n當連結會執行讀者可能未預期的任何操作時，例如下載檔案、在新分頁中開啟或跳至同一頁面的另一部分，請在連結時說明該行為。更多資訊，請參閱說明未預期的連結行為。\n盡可能避免相鄰的連結。請在它們之間放置一個字元以將其分開。"
  },
  {
    "objectID": "content/zh-tw/general-principles/accessibility.html#清單",
    "href": "content/zh-tw/general-principles/accessibility.html#清單",
    "title": "撰寫無障礙文件",
    "section": "",
    "text": "在程序中，將每個指令設為一個清單項目。\n使用清單讓讀者更容易遵循步驟。"
  },
  {
    "objectID": "content/zh-tw/general-principles/accessibility.html#圖片",
    "href": "content/zh-tw/general-principles/accessibility.html#圖片",
    "title": "撰寫無障礙文件",
    "section": "",
    "text": "為每張圖片提供 alt 屬性。對於包含替代文字的 alt 屬性，請使用能充分總結每張圖片意圖的替代文字。如果圖片純粹是裝飾性的，請使用空的替代文字。\n請勿在圖片中呈現新資訊。請務必隨圖片提供等效的文字說明。\n除非絕對必要，否則請勿重複使用圖片。\n請勿使用文字、程式碼範例或終端機輸出的圖片。請使用實際文字。\n如果可用，請使用 SVG 而非 PNG。SVG 在放大圖片時能保持清晰。\n\n更多資訊，請參閱與圖片相關的文字。"
  },
  {
    "objectID": "content/zh-tw/general-principles/accessibility.html#影片錄音和-gif",
    "href": "content/zh-tw/general-principles/accessibility.html#影片錄音和-gif",
    "title": "撰寫無障礙文件",
    "section": "",
    "text": "為音訊和影片內容提供字幕、逐字稿或說明。例如，您可以使用 YouTube 中的自動字幕功能。\n確保字幕可以翻譯成主要語言。\n請勿使用閃爍或閃爍的元素。它們可能導致從暈動病到癲癇發作的任何情況。"
  },
  {
    "objectID": "content/zh-tw/general-principles/accessibility.html#按鈕和圖示",
    "href": "content/zh-tw/general-principles/accessibility.html#按鈕和圖示",
    "title": "撰寫無障礙文件",
    "section": "",
    "text": "對於表單提交按鈕，請使用原生的 HTML button 元素。\n圖示是代表物件或功能的符號或圖片。有關使用圖示的資訊，請參閱「UI 元素和互動」頁面的按鈕和圖示部分。"
  },
  {
    "objectID": "content/zh-tw/general-principles/accessibility.html#ui-導覽",
    "href": "content/zh-tw/general-principles/accessibility.html#ui-導覽",
    "title": "撰寫無障礙文件",
    "section": "",
    "text": "當您使用角括號 (&gt;) 來記錄選單路徑時，請新增 aria-label 屬性來幫助螢幕閱讀器將括號解讀為「然後」而不是「大於」或「鍵盤向右箭頭」。更多資訊和範例，請參閱選單列。"
  },
  {
    "objectID": "content/zh-tw/general-principles/accessibility.html#表格",
    "href": "content/zh-tw/general-principles/accessibility.html#表格",
    "title": "撰寫無障礙文件",
    "section": "",
    "text": "在表格前的文字中介紹表格，因為並非所有螢幕閱讀器都會預先宣告表格。\n僅將表格標題用於第一欄和第一列。使用 th 元素。\n如果您的表格同時包含列標題和欄標題，請使用 scope 屬性標記標題儲存格。\n如果您的表格有多個包含欄標題的列，請使用 headers 屬性並確保標題具有唯一的 ID。\n盡可能避免在編號程序的中间使用表格。\n請勿合併儲存格。請勿使用 colspan 或 rowspan 屬性。\n除非是呈現資訊的最佳方法，否則請勿使用表格。表格對螢幕閱讀器來說具有挑戰性。更多資訊，請參閱清單或表格。\n請勿僅透過圖片或符號在表格中呈現新資訊；請務必為圖片或符號提供描述性的 alt 屬性。更多資訊，請參閱替代文字。\n\n更多資訊，請參閱表格。"
  },
  {
    "objectID": "content/zh-tw/general-principles/accessibility.html#互動式元素",
    "href": "content/zh-tw/general-principles/accessibility.html#互動式元素",
    "title": "撰寫無障礙文件",
    "section": "",
    "text": "在互動式元素（例如可展開和收合的按鈕）之前的文字中介紹該元素。\n\n✅ 建議（如果可行）：若要查看需求清單，請展開需求部分。\n✅ 建議：若要查看需求清單，請按一下 arrow_right 展開箭頭。"
  },
  {
    "objectID": "content/zh-tw/general-principles/accessibility.html#表單",
    "href": "content/zh-tw/general-principles/accessibility.html#表單",
    "title": "撰寫無障礙文件",
    "section": "",
    "text": "使用 label 元素為每個輸入欄位加上標籤。\n將標籤放在欄位外部。\n當您為表單驗證建立錯誤訊息時，請清楚說明出了什麼問題以及如何修正，例如：「姓名為必填欄位。」"
  },
  {
    "objectID": "content/zh-tw/general-principles/accessibility.html#自訂-css-和-javascript",
    "href": "content/zh-tw/general-principles/accessibility.html#自訂-css-和-javascript",
    "title": "撰寫無障礙文件",
    "section": "",
    "text": "盡可能使用您網站的標準樣式和標準 JavaScript 程式碼。但是，如果您確實使用自訂樣式或程式碼，請遵循以下準則：\n\n選擇符合無障礙色彩對比度（文字為 4.5:1）的顏色。\n請勿使用 visibility:hidden 或 display:none。這兩種樣式都會向螢幕閱讀器隱藏資訊。\n盡可能避免使用滑鼠懸停事件。但如果您確實使用它們，請為鍵盤使用者新增替代的焦點和模糊事件。\n確保樣式中定義的任何排序和定位都反映您頁面的 DOM 和閱讀順序（例如從左到右和從上到下）。"
  },
  {
    "objectID": "content/zh-tw/general-principles/accessibility.html#文件呈現",
    "href": "content/zh-tw/general-principles/accessibility.html#文件呈現",
    "title": "撰寫無障礙文件",
    "section": "",
    "text": "確保您的文件在以下情境中檢視時，能傳達您預期的所有資訊：\n\n無聲音\n僅使用聲音\n無圖片，包括動畫\n無色彩\n使用鍵盤\n使用螢幕放大\n無標點符號\n\n請勿使用顏色、大小、位置或其他視覺提示作為傳達資訊的主要方式。\n\n如果您使用顏色、圖示或輪廓粗細來傳達狀態，請同時提供次要提示，例如文字標籤的變更。\n透過標籤參照按鈕和其他元素。對於沒有文字的視覺元素，請勿嘗試描述該元素。請改用元素的 [aria-label](https://www.w3.org/TR/WCAG20-TECHS/ARIA14.html) 屬性（如果可能）。例如：\n\n✅ 建議：按一下儲存。\n✅ 建議：按一下通知。\n❌ 不建議：按一下鈴鐺圖示。\n\n請勿使用方向性語言來引導讀者，例如上方、下方或右側。這類語言對於無障礙或本地化原因都不太適用。例如，對於由左至右的語言，右側的內容會出現在由右至左的語言的左側。\n請勿使用方向性語言來參照文件中的位置。例如，如果文字是由螢幕閱讀器讀取，則它不是在下方。請改用較早、先前或下列。\n\n✅ 建議：在先前的圖表中，用戶端會在多團隊或單一團隊叢集上執行工作。\n❌ 不建議：在上圖中，用戶端會在多團隊或單一團隊叢集上執行工作。\n\n如果UI 元素難以找到，請提供螢幕截圖。\n\n✅ 建議：按一下 menu 選單。\n❌ 不建議：在左側面板中，按一下有三條線的按鈕。"
  },
  {
    "objectID": "content/zh-tw/general-principles/accessibility.html#更多資源",
    "href": "content/zh-tw/general-principles/accessibility.html#更多資源",
    "title": "撰寫無障礙文件",
    "section": "",
    "text": "Google 的主要無障礙頁面\nWeb 內容無障礙指南 (WCAG) 2.0\nWeb 無障礙倡議 (WAI)\n使用 ARIA\nWeb 無障礙教學"
  },
  {
    "objectID": "content/zh-tw/general-principles/inclusive-language.html",
    "href": "content/zh-tw/general-principles/inclusive-language.html",
    "title": "撰寫具包容性的文件",
    "section": "",
    "text": "注意：本文件包含 Google 認為不尊重或冒犯的術語。此處使用這些術語是為了提供用法指南和替代術語。\n我們在撰寫開發人員文件時，會考量到包容性和多樣性。本頁面並非詳盡的參考資料，但提供了一些通用準則和範例，以說明撰寫具包-容性文件的一些最佳實務。\n關於其他寫作最佳實務，請參閱以下資源：\n\n為全球讀者撰寫\n撰寫無障礙文件\n語氣與風格\n\n\n\n在試圖達到友善且對話式的語氣時，可能會不經意地使用到有問題的歧視身心障礙者的語言。這可能以譬喻或其他措辭的形式出現。請對您的用字遣詞保持敏感，尤其是在追求非正式語氣時。歧視身心障礙者的語言包括crazy、insane、blind to或blind eye to、cripple、dumb等詞語或片語。請根據上下文選擇替代詞語。\n\n\n\n✅ 建議\n❌ 不建議\n\n\n\n\n在發布前，對所有內容進行最後的完整性和清晰度檢查。\n在發布前，對所有內容進行最後的健全性檢查。\n\n\n—\n—\n\n\n資料中存在一些令人費解的異常值。\n資料中存在一些瘋狂的異常值。\n\n\n這會減慢服務速度，在佇列清除前導致使用者體驗不佳。\n這會癱瘓服務，在佇列清除前導致使用者體驗不佳。\n\n\n將此範例中的預留位置替換為適當的值。\n將此範例中的虛擬變數替換為適當的值。\n\n\n\n\n\n\n除了注意敘述性範例中使用的代名詞外，還要對其他可能的性別化語言來源保持敏感。\n\n\n\n\n\n\n\n✅ 建議\n❌ 不建議\n\n\n\n\n設備安裝大約需要 16 個人時才能完成。\n設備安裝大約需要 16 個工時才能完成。\n\n\n—\n—\n\n\n這個 API 可能正是您具有全球意識的公司幫助全人類所需要的。\n這個 API 可能正是您具有全球意識的公司幫助全人類所需要的。\n\n\n\n\n\n\n避免使用生動暴力或有害的術語。例如，避免使用 STONITH 一詞；相反地，請使用更具體的術語，在上下文中描述用於停止異常節點的過程。\n如果無法避免，且您必須提及暴力或有害的術語，例如 STONITH，請在您第一次解釋相關功能時提及一次，但措辭方式應淡化該術語。\n\n✅ 建議：這可能需要您隔離故障節點。\n✅ 有時可以：這可能需要您隔離故障節點（有時稱為 STONITH）。\n\n盡可能避免使用可被解釋為暴力的比喻性語言，例如hang和hit。雖然這些術語也可能有非暴力的解釋，但避免使用它們可以防止暴力解釋可能造成的無意傷害。\n避免使用與屠宰動物相關的比喻性語言。例如，在比較本地部署或有狀態系統與無狀態雲端系統時，避免使用寵物與牛的比喻。\n\n\n\n在範例中使用多樣化的姓名、性別、年齡和地點。請記住以下建議：\n\n遵循我們的性別中立代名詞指南。\n避免過於美國文化特定。在提及特定節日（另請參閱the holidays的詞彙表條目）、文化習俗、運動和譬喻時要小心。在此處保持敏感也有助於為全球讀者撰寫。\n注意選擇多樣化的姓名，以幫助範例反映我們讀者在現實世界中的多樣性，並參閱該指南部分中關於撰寫虛構人物的指導。\n在撰寫關於年長者的文章時，避免使用the elderly、the aged、seniors、senior citizens或80 years young等術語和譬喻。相反地，請使用older adults或aging population等術語，或在相關時提及該人在範例中與其他人的相對年齡或關係。\n\n\n\n\n避免以分裂的方式提及人。例如，與其將人稱為英語的母語人士或非母語人士，不如考慮您的文件是否需要討論這一點，並將其修改為以與任何人相關的術語來討論該功能，無論他們懂什麼語言。\n盡可能避免對技術概念使用具有社會爭議的術語。例如，避免使用blacklist、native feature 和 first-class citizen 等術語，即使這些術語可能仍被廣泛使用。與其使用 first-class，不如考慮其他術語，例如 core feature、built-in 或 top-level。為您的上下文選擇最佳術語。\n\n\n本節包含有關如何取代或避開不具包-容性術語的指南。如果某個術語在業界根深蒂固，取代它可能會造成混淆，請參閱取代既有術語。如果某個術語出現在程式碼範例或關鍵字中，請參閱避開不具包容性的程式碼術語。有關避免不具包容性行話的資訊，請參閱行話。\n\n\n許多不具包容性的術語在業界廣泛使用，例如 whitelist。如果取代一個既有術語可能會讓讀者感到困惑，您可以在第一次使用時直接提及該不具包容性的術語，並將其放在括號中。然後在文件的其餘部分使用具包容性的替代術語。\n\n✅ 建議：為確保管理員收到通知，請將他們新增至允許清單（有時稱為 whitelist）。任何不在允許清單上的人都會被封鎖…\n✅ 建議：在此模型中，Jenkins 控制器（主機）處理 HTTP 請求。Jenkins 控制器的設計是為了…\n✅ 建議：在雲端架構中，伺服器被視為商品（有時會使用牛，而非寵物的比喻來描述）。\n\n在許多情況下，與其直接取代一個詞，不如重寫以提高句子的清晰度。例如，與其用allowlist取代動詞whitelist，不如嘗試重寫句子。\n\n✅ 建議：您可以透過在欄位中輸入 CIDR 區塊而非單一地址，來允許來自某個 IP 地址範圍的請求。\n❌ 不建議：您可以透過在欄位中輸入 CIDR 區塊而非單一地址，來將某個 IP 地址範圍加入白名單。\n\n\n\n\n在某些情況下，不具包容性的術語會以名稱或關鍵字的形式嵌入程式碼（或類似內容）中，您不能簡單地忽略這些術語並使用不同的術語。但是，您可以做的是盡量減少您對該術語的使用（從而避免將其作為術語傳播），同時仍為您的讀者提供清晰的文件。除非不具包容性的名稱或關鍵字在程式碼字體中，否則請勿使用。\n以下是避開程式碼和關鍵字中出現的不具包容性術語的情境。\n一種情境是，如果您正在記錄一個現有系統，其中一個實體已經使用不具包容性的術語命名。例如，可能有一個設定檔包含以下叢集名稱：\napiVersion: v1\nkind: Config\npreferences: {}\n\nclusters:\n- cluster:\n  name: master\n- cluster:\n  name: replica-1\n另一種情境是，如果您的文件包含一個不具包容性的術語，而該術語是一個既定的關鍵字，例如 SQL 方言中的關鍵字 SLAVE：\nSTART SLAVE UNTIL SQL_AFTER_MTS_GAPS;\n當您第一次參照使用不具包容性術語的程式碼項目時，您可以直接參照該術語，但請以程式碼字體格式化，並盡可能將其放在括號中。\n\n✅ 建議：設定檔可協助您建立父節點（在檔案中名為 master）。\n✅ 建議：使用 START SLAVE 陳述式啟動複本。\n\n在後續的提及中，請使用偏好的術語（父節點、複本）。如果需要參照實體名稱或關鍵字，請繼續僅使用程式碼格式。\n\n\n\n\n\n許多開發人員在創造產品時會考量到無障礙和身心障礙。在記錄這些功能，以及在撰寫關於身心障礙人士或無障礙的文章時，請努力消除無意的偏見和傷害。在您的文件中撰寫關於您所寫的社群之前，請花時間了解他們偏好如何被識別和描述。\n此領域的一些通用準則包括：\n\n不要將沒有身心障礙的人描述為正常或健康。這會透過暗示他們不正常或生病，而導致對身心障礙人士的排斥和疏離。相反地，請使用非身心障礙人士、有視力的人、有聽力的人、沒有身心障礙的人或神經典型的人等術語。\n研究您正在撰寫的社群中的人偏好如何被識別，並使用他們偏好的術語。在許多情況下，避免使用消除人格或以其身心障礙來定義人的術語。例如，避免使用the disabled或a quadriplegic等術語。相反地，請使用people with disabilities或a quadriplegic person等術語。\n然而，某些社群的許多成員偏好身分優先語言——例如，這種偏好在自閉症、盲人和聾人社群中很常見。身分的大寫也可能有所不同（有關某些觀點，請造訪身分優先語言和聾人社群的自我認同）。盡可能研究並選擇尊重社群中人們認同方式的術語。\n使用請參閱來參照連結和交叉參照。更多資訊，請參閱請參閱。\n避免使用反映或投射對一個人的身心障礙的感受和判斷的術語，例如victim of、suffering from或wheelchair-bound。相反地，請使用中性的術語，例如experiencing、living with或uses a wheelchair。\n避免使用委婉語或帶有優越感的術語，例如physically challenged、special、differently abled或handi-capable。"
  },
  {
    "objectID": "content/zh-tw/general-principles/inclusive-language.html#避免使用歧視身心障礙者的語言",
    "href": "content/zh-tw/general-principles/inclusive-language.html#避免使用歧視身心障礙者的語言",
    "title": "撰寫具包容性的文件",
    "section": "",
    "text": "在試圖達到友善且對話式的語氣時，可能會不經意地使用到有問題的歧視身心障礙者的語言。這可能以譬喻或其他措辭的形式出現。請對您的用字遣詞保持敏感，尤其是在追求非正式語氣時。歧視身心障礙者的語言包括crazy、insane、blind to或blind eye to、cripple、dumb等詞語或片語。請根據上下文選擇替代詞語。\n\n\n\n✅ 建議\n❌ 不建議\n\n\n\n\n在發布前，對所有內容進行最後的完整性和清晰度檢查。\n在發布前，對所有內容進行最後的健全性檢查。\n\n\n—\n—\n\n\n資料中存在一些令人費解的異常值。\n資料中存在一些瘋狂的異常值。\n\n\n這會減慢服務速度，在佇列清除前導致使用者體驗不佳。\n這會癱瘓服務，在佇列清除前導致使用者體驗不佳。\n\n\n將此範例中的預留位置替換為適當的值。\n將此範例中的虛擬變數替換為適當的值。"
  },
  {
    "objectID": "content/zh-tw/general-principles/inclusive-language.html#避免不必要的性別化語言",
    "href": "content/zh-tw/general-principles/inclusive-language.html#避免不必要的性別化語言",
    "title": "撰寫具包容性的文件",
    "section": "",
    "text": "除了注意敘述性範例中使用的代名詞外，還要對其他可能的性別化語言來源保持敏感。\n\n\n\n\n\n\n\n✅ 建議\n❌ 不建議\n\n\n\n\n設備安裝大約需要 16 個人時才能完成。\n設備安裝大約需要 16 個工時才能完成。\n\n\n—\n—\n\n\n這個 API 可能正是您具有全球意識的公司幫助全人類所需要的。\n這個 API 可能正是您具有全球意識的公司幫助全人類所需要的。"
  },
  {
    "objectID": "content/zh-tw/general-principles/inclusive-language.html#避免不必要的暴力語言",
    "href": "content/zh-tw/general-principles/inclusive-language.html#避免不必要的暴力語言",
    "title": "撰寫具包容性的文件",
    "section": "",
    "text": "避免使用生動暴力或有害的術語。例如，避免使用 STONITH 一詞；相反地，請使用更具體的術語，在上下文中描述用於停止異常節點的過程。\n如果無法避免，且您必須提及暴力或有害的術語，例如 STONITH，請在您第一次解釋相關功能時提及一次，但措辭方式應淡化該術語。\n\n✅ 建議：這可能需要您隔離故障節點。\n✅ 有時可以：這可能需要您隔離故障節點（有時稱為 STONITH）。\n\n盡可能避免使用可被解釋為暴力的比喻性語言，例如hang和hit。雖然這些術語也可能有非暴力的解釋，但避免使用它們可以防止暴力解釋可能造成的無意傷害。\n避免使用與屠宰動物相關的比喻性語言。例如，在比較本地部署或有狀態系統與無狀態雲端系統時，避免使用寵物與牛的比喻。"
  },
  {
    "objectID": "content/zh-tw/general-principles/inclusive-language.html#撰寫多樣化且具包容性的範例",
    "href": "content/zh-tw/general-principles/inclusive-language.html#撰寫多樣化且具包容性的範例",
    "title": "撰寫具包容性的文件",
    "section": "",
    "text": "在範例中使用多樣化的姓名、性別、年齡和地點。請記住以下建議：\n\n遵循我們的性別中立代名詞指南。\n避免過於美國文化特定。在提及特定節日（另請參閱the holidays的詞彙表條目）、文化習俗、運動和譬喻時要小心。在此處保持敏感也有助於為全球讀者撰寫。\n注意選擇多樣化的姓名，以幫助範例反映我們讀者在現實世界中的多樣性，並參閱該指南部分中關於撰寫虛構人物的指導。\n在撰寫關於年長者的文章時，避免使用the elderly、the aged、seniors、senior citizens或80 years young等術語和譬喻。相反地，請使用older adults或aging population等術語，或在相關時提及該人在範例中與其他人的相對年齡或關係。"
  },
  {
    "objectID": "content/zh-tw/general-principles/inclusive-language.html#以具包容性的方式撰寫關於功能和使用者的文章",
    "href": "content/zh-tw/general-principles/inclusive-language.html#以具包容性的方式撰寫關於功能和使用者的文章",
    "title": "撰寫具包容性的文件",
    "section": "",
    "text": "避免以分裂的方式提及人。例如，與其將人稱為英語的母語人士或非母語人士，不如考慮您的文件是否需要討論這一點，並將其修改為以與任何人相關的術語來討論該功能，無論他們懂什麼語言。\n盡可能避免對技術概念使用具有社會爭議的術語。例如，避免使用blacklist、native feature 和 first-class citizen 等術語，即使這些術語可能仍被廣泛使用。與其使用 first-class，不如考慮其他術語，例如 core feature、built-in 或 top-level。為您的上下文選擇最佳術語。\n\n\n本節包含有關如何取代或避開不具包-容性術語的指南。如果某個術語在業界根深蒂固，取代它可能會造成混淆，請參閱取代既有術語。如果某個術語出現在程式碼範例或關鍵字中，請參閱避開不具包容性的程式碼術語。有關避免不具包容性行話的資訊，請參閱行話。\n\n\n許多不具包容性的術語在業界廣泛使用，例如 whitelist。如果取代一個既有術語可能會讓讀者感到困惑，您可以在第一次使用時直接提及該不具包容性的術語，並將其放在括號中。然後在文件的其餘部分使用具包容性的替代術語。\n\n✅ 建議：為確保管理員收到通知，請將他們新增至允許清單（有時稱為 whitelist）。任何不在允許清單上的人都會被封鎖…\n✅ 建議：在此模型中，Jenkins 控制器（主機）處理 HTTP 請求。Jenkins 控制器的設計是為了…\n✅ 建議：在雲端架構中，伺服器被視為商品（有時會使用牛，而非寵物的比喻來描述）。\n\n在許多情況下，與其直接取代一個詞，不如重寫以提高句子的清晰度。例如，與其用allowlist取代動詞whitelist，不如嘗試重寫句子。\n\n✅ 建議：您可以透過在欄位中輸入 CIDR 區塊而非單一地址，來允許來自某個 IP 地址範圍的請求。\n❌ 不建議：您可以透過在欄位中輸入 CIDR 區塊而非單一地址，來將某個 IP 地址範圍加入白名單。\n\n\n\n\n在某些情況下，不具包容性的術語會以名稱或關鍵字的形式嵌入程式碼（或類似內容）中，您不能簡單地忽略這些術語並使用不同的術語。但是，您可以做的是盡量減少您對該術語的使用（從而避免將其作為術語傳播），同時仍為您的讀者提供清晰的文件。除非不具包容性的名稱或關鍵字在程式碼字體中，否則請勿使用。\n以下是避開程式碼和關鍵字中出現的不具包容性術語的情境。\n一種情境是，如果您正在記錄一個現有系統，其中一個實體已經使用不具包容性的術語命名。例如，可能有一個設定檔包含以下叢集名稱：\napiVersion: v1\nkind: Config\npreferences: {}\n\nclusters:\n- cluster:\n  name: master\n- cluster:\n  name: replica-1\n另一種情境是，如果您的文件包含一個不具包容性的術語，而該術語是一個既定的關鍵字，例如 SQL 方言中的關鍵字 SLAVE：\nSTART SLAVE UNTIL SQL_AFTER_MTS_GAPS;\n當您第一次參照使用不具包容性術語的程式碼項目時，您可以直接參照該術語，但請以程式碼字體格式化，並盡可能將其放在括號中。\n\n✅ 建議：設定檔可協助您建立父節點（在檔案中名為 master）。\n✅ 建議：使用 START SLAVE 陳述式啟動複本。\n\n在後續的提及中，請使用偏好的術語（父節點、複本）。如果需要參照實體名稱或關鍵字，請繼續僅使用程式碼格式。"
  },
  {
    "objectID": "content/zh-tw/general-principles/inclusive-language.html#在討論身心障礙和無障礙時避免偏見和傷害",
    "href": "content/zh-tw/general-principles/inclusive-language.html#在討論身心障礙和無障礙時避免偏見和傷害",
    "title": "撰寫具包容性的文件",
    "section": "",
    "text": "許多開發人員在創造產品時會考量到無障礙和身心障礙。在記錄這些功能，以及在撰寫關於身心障礙人士或無障礙的文章時，請努力消除無意的偏見和傷害。在您的文件中撰寫關於您所寫的社群之前，請花時間了解他們偏好如何被識別和描述。\n此領域的一些通用準則包括：\n\n不要將沒有身心障礙的人描述為正常或健康。這會透過暗示他們不正常或生病，而導致對身心障礙人士的排斥和疏離。相反地，請使用非身心障礙人士、有視力的人、有聽力的人、沒有身心障礙的人或神經典型的人等術語。\n研究您正在撰寫的社群中的人偏好如何被識別，並使用他們偏好的術語。在許多情況下，避免使用消除人格或以其身心障礙來定義人的術語。例如，避免使用the disabled或a quadriplegic等術語。相反地，請使用people with disabilities或a quadriplegic person等術語。\n然而，某些社群的許多成員偏好身分優先語言——例如，這種偏好在自閉症、盲人和聾人社群中很常見。身分的大寫也可能有所不同（有關某些觀點，請造訪身分優先語言和聾人社群的自我認同）。盡可能研究並選擇尊重社群中人們認同方式的術語。\n使用請參閱來參照連結和交叉參照。更多資訊，請參閱請參閱。\n避免使用反映或投射對一個人的身心障礙的感受和判斷的術語，例如victim of、suffering from或wheelchair-bound。相反地，請使用中性的術語，例如experiencing、living with或uses a wheelchair。\n避免使用委婉語或帶有優越感的術語，例如physically challenged、special、differently abled或handi-capable。"
  },
  {
    "objectID": "content/zh-tw/general-principles/prescriptive-documentation.html",
    "href": "content/zh-tw/general-principles/prescriptive-documentation.html",
    "title": "指導性文件",
    "section": "",
    "text": "撰寫指導性文件。\n指導性（或觀點性）文件會建議達成任務和目標的方法。它會告訴讀者該做什麼，而不是給他們一堆選項去選擇。當目標或任務很複雜，且涉及多種方法或產品時，指導性文件會建議一條路徑。\n指導性寫作會影響文件的幾個方面：\n\n文件的目的和結構。指導性文件會陳述一個清晰、具體的目的。標題和內容的撰寫都會以此目的為考量。\n範例情境和程序。情境和程序會反映與讀者最可能相關的使用案例。\n範例指令。指導性文件會提供能完成最常見使用案例任務的指令和引數。有關記錄命令列選項的更多資訊，請參閱點擊複製指令中的可選引數。\n\n例如，最佳實務文件通常是指導性文件。有關範例，請參閱營運最佳實務。\n\n\n若要表示必要或可選的使用者動作或程序的結果，請選擇適當的助動詞——例如，must、can 或 might。通常避免使用 should 這個詞。這個詞會為讀者帶來歧義和不確定性，因此對於指導性文件來說是有問題的。例如，如果您正在告訴讀者該做什麼，should 意味著該動作是建議的但可選的，這會讓讀者不確定該怎麼做。\n為了釐清您的意思，請確定一個動作是必要的還是可選的，一個結果是預期的還是可能的，或者一個狀態是實際的還是建議的。\n\n如果一個動作是必要的：使用 must，或改寫句子，使其成為一個清晰的祈使句指令，例如「在繼續之前，請執行以下操作。」\n如果一個動作是建議的：使用我們建議… 或 Google 建議…。如果一個建議的動作是普遍認可的，您可以使用 should。例如，「您應該使用一個強密碼…」或「您應該遵循最小權限原則…」。\n如果一個動作是可選的：使用 can。例如，「您也可以使用方法 B 來解決相同的問題。」\n如果一個結果是預期的：用預期的結果來描述結果。例如：「該程序會傳回 10 個項目。」\n如果一個結果是可能的：使用 might 或 can。例如，「該程序可能需要大約 30 分鐘。」\n如果一個狀態是實際的：當您在描述某個東西的狀態時，例如一個變數的值，避免寫「該值應該為 true」。相反地，請釐清您的意思：\n\n「您必須將該值設定為 true。」\n「伺服器會將該值設定為 true。」\n「如果該值為 false，請按照以下步驟將其變更為 true。」\n\n\n有關釐清誰在執行一個動作的資訊，請參閱主動語態。\n\n✅ 建議：確保 Classroom 分享按鈕符合我們的最小-最大尺寸準則和相關的顏色/按鈕範本。\n✅ 建議：篩選器操作的資料表欄位。\n✅ 建議：無論是全新的專案還是現有的專案，都請執行以下步驟。\n❌ 不建議：Classroom 分享按鈕應符合我們的最小-最大尺寸準則和相關的顏色和按鈕範本。\n❌ 不建議：篩選器應操作的資料表欄位。\n❌ 不建議：無論是全新的專案還是現有的專案，您都應該這麼做。\n\n\n\n\n\n另請參閱詞彙表中的 can、could、may、might、must 和 would。"
  },
  {
    "objectID": "content/zh-tw/general-principles/prescriptive-documentation.html#建議和要求的用字選擇",
    "href": "content/zh-tw/general-principles/prescriptive-documentation.html#建議和要求的用字選擇",
    "title": "指導性文件",
    "section": "",
    "text": "若要表示必要或可選的使用者動作或程序的結果，請選擇適當的助動詞——例如，must、can 或 might。通常避免使用 should 這個詞。這個詞會為讀者帶來歧義和不確定性，因此對於指導性文件來說是有問題的。例如，如果您正在告訴讀者該做什麼，should 意味著該動作是建議的但可選的，這會讓讀者不確定該怎麼做。\n為了釐清您的意思，請確定一個動作是必要的還是可選的，一個結果是預期的還是可能的，或者一個狀態是實際的還是建議的。\n\n如果一個動作是必要的：使用 must，或改寫句子，使其成為一個清晰的祈使句指令，例如「在繼續之前，請執行以下操作。」\n如果一個動作是建議的：使用我們建議… 或 Google 建議…。如果一個建議的動作是普遍認可的，您可以使用 should。例如，「您應該使用一個強密碼…」或「您應該遵循最小權限原則…」。\n如果一個動作是可選的：使用 can。例如，「您也可以使用方法 B 來解決相同的問題。」\n如果一個結果是預期的：用預期的結果來描述結果。例如：「該程序會傳回 10 個項目。」\n如果一個結果是可能的：使用 might 或 can。例如，「該程序可能需要大約 30 分鐘。」\n如果一個狀態是實際的：當您在描述某個東西的狀態時，例如一個變數的值，避免寫「該值應該為 true」。相反地，請釐清您的意思：\n\n「您必須將該值設定為 true。」\n「伺服器會將該值設定為 true。」\n「如果該值為 false，請按照以下步驟將其變更為 true。」\n\n\n有關釐清誰在執行一個動作的資訊，請參閱主動語態。\n\n✅ 建議：確保 Classroom 分享按鈕符合我們的最小-最大尺寸準則和相關的顏色/按鈕範本。\n✅ 建議：篩選器操作的資料表欄位。\n✅ 建議：無論是全新的專案還是現有的專案，都請執行以下步驟。\n❌ 不建議：Classroom 分享按鈕應符合我們的最小-最大尺寸準則和相關的顏色和按鈕範本。\n❌ 不建議：篩選器應操作的資料表欄位。\n❌ 不建議：無論是全新的專案還是現有的專案，您都應該這麼做。"
  },
  {
    "objectID": "content/zh-tw/general-principles/prescriptive-documentation.html#更多資源",
    "href": "content/zh-tw/general-principles/prescriptive-documentation.html#更多資源",
    "title": "指導性文件",
    "section": "",
    "text": "另請參閱詞彙表中的 can、could、may、might、must 和 would。"
  },
  {
    "objectID": "content/zh-tw/general-principles/tone.html",
    "href": "content/zh-tw/general-principles/tone.html",
    "title": "語氣與風格",
    "section": "",
    "text": "在您的文件中，力求一種對話式、友善且尊重的語氣與風格，但避免使用俚語或過於口語化、輕浮；一種隨和、自然、平易近人，而非學究式或咄咄逼人的語氣。試著聽起來像一位知識淵博的朋友，了解開發人員想做什麼。\n不要試圖完全按照您說話的方式寫作；您說話可能比您應該寫作的方式更口語化、更冗長，至少對於開發人員文件而言是如此。但要力求一種對話式的語氣，而非正式的語氣。\n不要試圖變得非常有趣，但也不要追求極度枯燥。要有人情味，讓您的個性展現出來，並令人難忘。但請記住，文件的主要目的是為正在尋找資訊且可能很匆忙的人提供資訊。\n請考量讀者來自許多不同的文化，且閱讀英文的能力可能各不相同。盡可能避免使用具有文化特定性的參考資料。簡單一致的寫作也可以讓文件更容易翻譯成其他語言。更多資訊，請參閱為全球讀者撰寫。\n關於其他寫作最佳實務，請參閱以下資源：\n\n撰寫無障礙文件\n撰寫具包容性的文件\n\n\n\n\n流行語或技術行話。\n過於裝可愛。\n歧視身心障礙者的語言或譬喻。\n預留位置片語，例如請注意和此時。\n斷斷續續或冗長的句子。\n所有句子都以相同的片語開頭（例如您可以或若要）。\n當前的流行文化參考。\n驚嘆號，除非在極少數真正令人興奮的時刻。\n古怪、滑稽和愚蠢。\n混合比喻或將比喻用得太過火。\n貶低或侮辱任何人群的措辭。\n以讓我們做某事的措辭。\n在程序中使用* просто、就這麼簡單、很容易或快速*等片語。\n網路俚語或其他網路縮寫，例如 tl;dr 或 ymmv。\n\n\n\n\n\n如果您在表達某件事時遇到困難，請退一步問自己：「我想說什麼？」通常，您給自己的答案會揭示您應該在文件中說些什麼。\n如果您不確定自己的措辭或語氣，請找一位同事看看。\n試著大聲朗讀文件的部分內容，或至少動動嘴唇。聽起來自然嗎？並非每個句子在說出來時都必須聽起來自然；這些是書面文件。但如果您遇到一個說出來時很尷尬或令人困惑的句子，請考慮是否可以讓它更具對話性。\n在句子之間使用過渡詞。雖然或這樣等片語可以讓段落不那麼生硬。（不過，有時然而或儘管如此等過渡詞會讓段落更生硬。）\n即使您在掌握正確的語氣方面遇到困難，也要確保您以清晰直接的方式傳達有用的資訊；這才是最重要的部分。\n\n\n\n\n有禮貌是件好事，但在指令中使用 please 會顯得過於客氣。\n\n✅ 建議：若要檢視文件，請按一下檢視。\n❌ 不建議：若要檢視文件，請按一下檢視。\n✅ 建議：更多資訊，請參閱 [其他文件連結]。\n❌ 不建議：更多資訊，請參閱 [其他文件連結]。\n\n\n\n\n\n\n\n\n\n\n\n\n太過非正式\n恰到好處\n太過正式\n\n\n\n\n老兄！這個 API 真是太讚了！\n這個 API 可讓您收集使用者喜好的資料。\n本頁面記載的 API 可用於取得與使用者偏好相關的資訊。\n\n\n就像某位流行歌手一樣，這個呼叫會取得您的電話號碼。詢問某人電話號碼的簡單方法！\n若要取得使用者的電話號碼，請呼叫 user.phoneNumber.get。\n開發人員可透過在 user 物件的 phoneNumber 屬性上使用 get 方法的簡單權宜之計來擷取電話號碼。\n\n\n然後——砰——只要進行垃圾回收，就大功告成了。\n若要清理，請呼叫 collectGarbage 方法。\n請注意，完成此任務需要以下先決條件：執行自動記憶體管理功能。"
  },
  {
    "objectID": "content/zh-tw/general-principles/tone.html#盡可能避免的一些事項",
    "href": "content/zh-tw/general-principles/tone.html#盡可能避免的一些事項",
    "title": "語氣與風格",
    "section": "",
    "text": "流行語或技術行話。\n過於裝可愛。\n歧視身心障礙者的語言或譬喻。\n預留位置片語，例如請注意和此時。\n斷斷續續或冗長的句子。\n所有句子都以相同的片語開頭（例如您可以或若要）。\n當前的流行文化參考。\n驚嘆號，除非在極少數真正令人興奮的時刻。\n古怪、滑稽和愚蠢。\n混合比喻或將比喻用得太過火。\n貶低或侮辱任何人群的措辭。\n以讓我們做某事的措辭。\n在程序中使用* просто、就這麼簡單、很容易或快速*等片語。\n網路俚語或其他網路縮寫，例如 tl;dr 或 ymmv。"
  },
  {
    "objectID": "content/zh-tw/general-principles/tone.html#一些可以考慮的技巧和方法",
    "href": "content/zh-tw/general-principles/tone.html#一些可以考慮的技巧和方法",
    "title": "語氣與風格",
    "section": "",
    "text": "如果您在表達某件事時遇到困難，請退一步問自己：「我想說什麼？」通常，您給自己的答案會揭示您應該在文件中說些什麼。\n如果您不確定自己的措辭或語氣，請找一位同事看看。\n試著大聲朗讀文件的部分內容，或至少動動嘴唇。聽起來自然嗎？並非每個句子在說出來時都必須聽起來自然；這些是書面文件。但如果您遇到一個說出來時很尷尬或令人困惑的句子，請考慮是否可以讓它更具對話性。\n在句子之間使用過渡詞。雖然或這樣等片語可以讓段落不那麼生硬。（不過，有時然而或儘管如此等過渡詞會讓段落更生硬。）\n即使您在掌握正確的語氣方面遇到困難，也要確保您以清晰直接的方式傳達有用的資訊；這才是最重要的部分。"
  },
  {
    "objectID": "content/zh-tw/general-principles/tone.html#禮貌和-please-的使用",
    "href": "content/zh-tw/general-principles/tone.html#禮貌和-please-的使用",
    "title": "語氣與風格",
    "section": "",
    "text": "有禮貌是件好事，但在指令中使用 please 會顯得過於客氣。\n\n✅ 建議：若要檢視文件，請按一下檢視。\n❌ 不建議：若要檢視文件，請按一下檢視。\n✅ 建議：更多資訊，請參閱 [其他文件連結]。\n❌ 不建議：更多資訊，請參閱 [其他文件連結]。"
  },
  {
    "objectID": "content/zh-tw/general-principles/tone.html#範例",
    "href": "content/zh-tw/general-principles/tone.html#範例",
    "title": "語氣與風格",
    "section": "",
    "text": "太過非正式\n恰到好處\n太過正式\n\n\n\n\n老兄！這個 API 真是太讚了！\n這個 API 可讓您收集使用者喜好的資料。\n本頁面記載的 API 可用於取得與使用者偏好相關的資訊。\n\n\n就像某位流行歌手一樣，這個呼叫會取得您的電話號碼。詢問某人電話號碼的簡單方法！\n若要取得使用者的電話號碼，請呼叫 user.phoneNumber.get。\n開發人員可透過在 user 物件的 phoneNumber 屬性上使用 get 方法的簡單權宜之計來擷取電話號碼。\n\n\n然後——砰——只要進行垃圾回收，就大功告成了。\n若要清理，請呼叫 collectGarbage 方法。\n請注意，完成此任務需要以下先決條件：執行自動記憶體管理功能。"
  },
  {
    "objectID": "content/zh-tw/key-resources/text-formatting.html",
    "href": "content/zh-tw/key-resources/text-formatting.html",
    "title": "文字格式摘要",
    "section": "",
    "text": "此頁面摘要並提供快速參考，說明樣式指南中其他地方涵蓋的許多一般文字格式慣例。如需詳細資訊，請參閱視覺格式。\n\n\n僅將粗體格式 &lt;b&gt; 或 ** 用於 UI 元素和連續標題，包括在注意事項的開頭。\n雖然雙底線 __ 也可以在 Markdown 中表示粗體樣式，但在文字編輯器中可能難以區分。最好在 Markdown 中使用雙星號表示粗體。\n\n\n\n一般而言，請謹慎使用斜體。\n當您討論或介紹術語時，例如在定義術語或使用文字作為文字時，請使用斜體格式 &lt;i&gt; 或 _。如需詳細資訊，請參閱使用斜體討論術語。\n當您需要強調以表示重要性時，請使用斜體，而非粗體或底線。但通常，您的文字本身就能傳達重點，無需加上斜體。若要在 HTML 中表示語意強調，請使用 em 元素，在大多數情況下會呈現為斜體。若要在 Markdown 中表示強調，請使用底線 (_)，會呈現為斜體；您無法在 Markdown 中進行語意標記。\n雖然星號 * 也可以在 Markdown 中表示斜體，但我們建議使用底線，以便人們在 Markdown 檔案中更容易區分斜體和粗體。\n將書籍、電影、網路影集和其他完整作品的標題以斜體顯示，除非它們是連結的一部分。如需詳細資訊，請參閱交互參照和連結。\n將數學變數和版本變數以斜體顯示。例如，x + y = 3，版本 1.4.x。\n\n\n\n保留底線給連結文字使用。如需詳細資訊，請參閱設定連結文字樣式。\n\n\n\n在 HTML 中使用 &lt;code&gt; 或在 Markdown 中使用 ` 來將等寬字型和其他樣式套用至文字中的程式碼、內嵌程式碼和使用者輸入。\n使用程式碼區塊 &lt;pre&gt; 或 ``` 來表示程式碼範例或其他程式碼區塊。\n請勿內嵌覆寫或修改字型樣式。\n使用程式碼字型來標記程式碼，例如檔名、類別名稱、方法名稱、HTTP 狀態碼、主控台輸出和預留位置。如需詳細資訊，請參閱一些要放在程式碼字型中的特定項目。\n\n\n\n一般大寫請使用美式英文樣式。\n在所有標題、標題和導覽中都使用句子大小寫。\n預留位置請使用全大寫。\n\n\n\n一般而言，在標點引號時請使用美式英文樣式。\n對於較短作品的標題——例如文章或網路影集中的集數——請將標題放在引號中，除非它們是連結的一部分。\n\n\n\n請勿覆寫字型類型、大小或顏色的全域樣式。\n使用語意 HTML 或 Markdown 來控制頁面上文字的樣式——例如，HTML 中的程式碼標籤 (&lt;code&gt;) 或 Markdown 中的反引號 (`)——而不是手動使用等寬字型設定文字樣式。\n\n\n\n請勿使用& 符號 (&) 作為連接詞或 and 的簡寫。請改用 and。這包括標題和導覽。例外：在需要參照使用 & 的 UI 元素或選單名稱的情況下，可以使用 &。\n將引號和結尾標點符號放在連結文字之外。如需詳細資訊，請參閱「交互參照和連結」頁面的連結文字周圍的標點符號和引號和斜體部分。"
  },
  {
    "objectID": "content/zh-tw/key-resources/text-formatting.html#粗體",
    "href": "content/zh-tw/key-resources/text-formatting.html#粗體",
    "title": "文字格式摘要",
    "section": "",
    "text": "僅將粗體格式 &lt;b&gt; 或 ** 用於 UI 元素和連續標題，包括在注意事項的開頭。\n雖然雙底線 __ 也可以在 Markdown 中表示粗體樣式，但在文字編輯器中可能難以區分。最好在 Markdown 中使用雙星號表示粗體。"
  },
  {
    "objectID": "content/zh-tw/key-resources/text-formatting.html#斜體",
    "href": "content/zh-tw/key-resources/text-formatting.html#斜體",
    "title": "文字格式摘要",
    "section": "",
    "text": "一般而言，請謹慎使用斜體。\n當您討論或介紹術語時，例如在定義術語或使用文字作為文字時，請使用斜體格式 &lt;i&gt; 或 _。如需詳細資訊，請參閱使用斜體討論術語。\n當您需要強調以表示重要性時，請使用斜體，而非粗體或底線。但通常，您的文字本身就能傳達重點，無需加上斜體。若要在 HTML 中表示語意強調，請使用 em 元素，在大多數情況下會呈現為斜體。若要在 Markdown 中表示強調，請使用底線 (_)，會呈現為斜體；您無法在 Markdown 中進行語意標記。\n雖然星號 * 也可以在 Markdown 中表示斜體，但我們建議使用底線，以便人們在 Markdown 檔案中更容易區分斜體和粗體。\n將書籍、電影、網路影集和其他完整作品的標題以斜體顯示，除非它們是連結的一部分。如需詳細資訊，請參閱交互參照和連結。\n將數學變數和版本變數以斜體顯示。例如，x + y = 3，版本 1.4.x。"
  },
  {
    "objectID": "content/zh-tw/key-resources/text-formatting.html#底線",
    "href": "content/zh-tw/key-resources/text-formatting.html#底線",
    "title": "文字格式摘要",
    "section": "",
    "text": "保留底線給連結文字使用。如需詳細資訊，請參閱設定連結文字樣式。"
  },
  {
    "objectID": "content/zh-tw/key-resources/text-formatting.html#程式碼字型",
    "href": "content/zh-tw/key-resources/text-formatting.html#程式碼字型",
    "title": "文字格式摘要",
    "section": "",
    "text": "在 HTML 中使用 &lt;code&gt; 或在 Markdown 中使用 ` 來將等寬字型和其他樣式套用至文字中的程式碼、內嵌程式碼和使用者輸入。\n使用程式碼區塊 &lt;pre&gt; 或 ``` 來表示程式碼範例或其他程式碼區塊。\n請勿內嵌覆寫或修改字型樣式。\n使用程式碼字型來標記程式碼，例如檔名、類別名稱、方法名稱、HTTP 狀態碼、主控台輸出和預留位置。如需詳細資訊，請參閱一些要放在程式碼字型中的特定項目。"
  },
  {
    "objectID": "content/zh-tw/key-resources/text-formatting.html#大寫",
    "href": "content/zh-tw/key-resources/text-formatting.html#大寫",
    "title": "文字格式摘要",
    "section": "",
    "text": "一般大寫請使用美式英文樣式。\n在所有標題、標題和導覽中都使用句子大小寫。\n預留位置請使用全大寫。"
  },
  {
    "objectID": "content/zh-tw/key-resources/text-formatting.html#引號",
    "href": "content/zh-tw/key-resources/text-formatting.html#引號",
    "title": "文字格式摘要",
    "section": "",
    "text": "一般而言，在標點引號時請使用美式英文樣式。\n對於較短作品的標題——例如文章或網路影集中的集數——請將標題放在引號中，除非它們是連結的一部分。"
  },
  {
    "objectID": "content/zh-tw/key-resources/text-formatting.html#字型類型大小和顏色",
    "href": "content/zh-tw/key-resources/text-formatting.html#字型類型大小和顏色",
    "title": "文字格式摘要",
    "section": "",
    "text": "請勿覆寫字型類型、大小或顏色的全域樣式。\n使用語意 HTML 或 Markdown 來控制頁面上文字的樣式——例如，HTML 中的程式碼標籤 (&lt;code&gt;) 或 Markdown 中的反引號 (`)——而不是手動使用等寬字型設定文字樣式。"
  },
  {
    "objectID": "content/zh-tw/key-resources/text-formatting.html#其他標點符號慣例",
    "href": "content/zh-tw/key-resources/text-formatting.html#其他標點符號慣例",
    "title": "文字格式摘要",
    "section": "",
    "text": "請勿使用& 符號 (&) 作為連接詞或 and 的簡寫。請改用 and。這包括標題和導覽。例外：在需要參照使用 & 的 UI 元素或選單名稱的情況下，可以使用 &。\n將引號和結尾標點符號放在連結文字之外。如需詳細資訊，請參閱「交互參照和連結」頁面的連結文字周圍的標點符號和引號和斜體部分。"
  },
  {
    "objectID": "content/zh-tw/key-resources/product-names.html",
    "href": "content/zh-tw/key-resources/product-names.html",
    "title": "產品名稱",
    "section": "",
    "text": "此頁面說明如何使用產品名稱。\n\n\n一般而言，Google 產品名稱採用標題大小寫，有時也稱為首字母大寫，這表示除了of或on等介系詞以及a或the等冠詞外，每個字的第一個字母都大寫。當您參照 Google 產品時，請使用標題大小寫，除非您要比對 UI 標籤。如需如何參照 UI 標籤的資訊，請參閱 UI 元素與互動。\n當您撰寫任何產品的相關資訊時，請遵循品牌、公司、軟體、產品、服務、功能以及由公司和開放原始碼社群定義的術語的官方大寫慣例。\n\n例如，如果您使用 Kubernetes 相關術語，請遵循 Kubernetes 概念文件中顯示的大寫慣例。\n\n👍 在 Kubernetes 環境中建議：一個 Job 會建立一或多個 Pod。\n👍 建議：Cloud Scheduler 工作會每分鐘將一則訊息發布到 Pub/Sub 主題。\n\n如果官方名稱以小寫字母開頭，即使在句首也要使用小寫。但如果可能，最好修改句子以避免在句首使用小寫單字。\n\n👍 建議：您可以使用 macOS 來執行應用程式。\n❌ 不建議：macOS 可以執行應用程式。\n\n\n\n\n功能是產品的獨特屬性或能力。功能通常以其在產品中所能執行的動作來描述。一般而言，功能名稱為小寫，但也有例外。\n當您撰寫功能的相關資訊時，除非該名稱已正式大寫，否則請勿將其大寫。如果您不確定，請遵循描述該功能的其他文件所設定的先例。與產品一樣，如果您參照的是 UI 標籤，請比對其大寫。\n如需有關大寫的更多一般資訊，請參閱大寫。\n\n\n\n\n參照 Google 產品時，您有時可能會想縮寫產品名稱。例如，當您參照 Google Spreadsheets 時，每次都稱其為 Google Spreadsheets 可能會很尷尬；有時您可能會想稱其為 Spreadsheets。\n請使用完整的商標產品名稱。請勿縮寫產品名稱，除非您要比對 UI 標籤。在這種情況下，請清楚說明您參照的是 Google 產品，而非其他名稱相似的東西。\n此外，請考量您是否需要在整份文件中參照產品名稱，或者是否可以使用更通用的術語。例如，如果您已確定要討論Anthos Service Mesh，您或許可以在整份文件中圍繞服務網格的概念來進行討論。\n\n\n\n如需有關使用產品名稱形成所有格的資訊，請參閱產品、功能和公司名稱。\n\n\n\n請勿在產品名稱前使用the，除非您使用該名稱來修飾其他東西。請在工具和 API 名稱前使用the。\n\n👍 建議：搭配使用 Cloud Datastore 與 Cloud Dataproc\n👍 建議：Cloud Datastore 選項頁面\n👍 建議：Google Cloud 控制台\n👍 建議：Transcoder API\n👍 建議：gcloud CLI\n❌ 不建議：搭配使用 the Cloud Datastore 與 Cloud Dataproc\n\n如果您使用產品名稱作為具有不定冠詞 (a 或 an) 的修飾語，請密切注意哪個冠詞在產品名稱之前。\n建議：一個 Anthos Service Mesh 環境\n建議：一個 Service Mesh 環境\n如需有關使用冠詞的更多資訊，請參閱冠詞。\n\n\n\n將 Google 產品稱為服務是可以的，例如Google Kubernetes Engine 服務或Compute Engine 服務。但是，如果服務一詞會導致歧義，請使用產品名稱。\n\n\n\n請勿將產品名稱或功能名稱當作動詞使用。"
  },
  {
    "objectID": "content/zh-tw/key-resources/product-names.html#將產品名稱大寫",
    "href": "content/zh-tw/key-resources/product-names.html#將產品名稱大寫",
    "title": "產品名稱",
    "section": "",
    "text": "一般而言，Google 產品名稱採用標題大小寫，有時也稱為首字母大寫，這表示除了of或on等介系詞以及a或the等冠詞外，每個字的第一個字母都大寫。當您參照 Google 產品時，請使用標題大小寫，除非您要比對 UI 標籤。如需如何參照 UI 標籤的資訊，請參閱 UI 元素與互動。\n當您撰寫任何產品的相關資訊時，請遵循品牌、公司、軟體、產品、服務、功能以及由公司和開放原始碼社群定義的術語的官方大寫慣例。\n\n例如，如果您使用 Kubernetes 相關術語，請遵循 Kubernetes 概念文件中顯示的大寫慣例。\n\n👍 在 Kubernetes 環境中建議：一個 Job 會建立一或多個 Pod。\n👍 建議：Cloud Scheduler 工作會每分鐘將一則訊息發布到 Pub/Sub 主題。\n\n如果官方名稱以小寫字母開頭，即使在句首也要使用小寫。但如果可能，最好修改句子以避免在句首使用小寫單字。\n\n👍 建議：您可以使用 macOS 來執行應用程式。\n❌ 不建議：macOS 可以執行應用程式。\n\n\n\n\n功能是產品的獨特屬性或能力。功能通常以其在產品中所能執行的動作來描述。一般而言，功能名稱為小寫，但也有例外。\n當您撰寫功能的相關資訊時，除非該名稱已正式大寫，否則請勿將其大寫。如果您不確定，請遵循描述該功能的其他文件所設定的先例。與產品一樣，如果您參照的是 UI 標籤，請比對其大寫。\n如需有關大寫的更多一般資訊，請參閱大寫。"
  },
  {
    "objectID": "content/zh-tw/key-resources/product-names.html#縮短-google-產品名稱",
    "href": "content/zh-tw/key-resources/product-names.html#縮短-google-產品名稱",
    "title": "產品名稱",
    "section": "",
    "text": "參照 Google 產品時，您有時可能會想縮寫產品名稱。例如，當您參照 Google Spreadsheets 時，每次都稱其為 Google Spreadsheets 可能會很尷尬；有時您可能會想稱其為 Spreadsheets。\n請使用完整的商標產品名稱。請勿縮寫產品名稱，除非您要比對 UI 標籤。在這種情況下，請清楚說明您參照的是 Google 產品，而非其他名稱相似的東西。\n此外，請考量您是否需要在整份文件中參照產品名稱，或者是否可以使用更通用的術語。例如，如果您已確定要討論Anthos Service Mesh，您或許可以在整份文件中圍繞服務網格的概念來進行討論。"
  },
  {
    "objectID": "content/zh-tw/key-resources/product-names.html#產品名稱的所有格",
    "href": "content/zh-tw/key-resources/product-names.html#產品名稱的所有格",
    "title": "產品名稱",
    "section": "",
    "text": "如需有關使用產品名稱形成所有格的資訊，請參閱產品、功能和公司名稱。"
  },
  {
    "objectID": "content/zh-tw/key-resources/product-names.html#產品名稱前的冠詞",
    "href": "content/zh-tw/key-resources/product-names.html#產品名稱前的冠詞",
    "title": "產品名稱",
    "section": "",
    "text": "請勿在產品名稱前使用the，除非您使用該名稱來修飾其他東西。請在工具和 API 名稱前使用the。\n\n👍 建議：搭配使用 Cloud Datastore 與 Cloud Dataproc\n👍 建議：Cloud Datastore 選項頁面\n👍 建議：Google Cloud 控制台\n👍 建議：Transcoder API\n👍 建議：gcloud CLI\n❌ 不建議：搭配使用 the Cloud Datastore 與 Cloud Dataproc\n\n如果您使用產品名稱作為具有不定冠詞 (a 或 an) 的修飾語，請密切注意哪個冠詞在產品名稱之前。\n建議：一個 Anthos Service Mesh 環境\n建議：一個 Service Mesh 環境\n如需有關使用冠詞的更多資訊，請參閱冠詞。"
  },
  {
    "objectID": "content/zh-tw/key-resources/product-names.html#使用服務來參照多個產品",
    "href": "content/zh-tw/key-resources/product-names.html#使用服務來參照多個產品",
    "title": "產品名稱",
    "section": "",
    "text": "將 Google 產品稱為服務是可以的，例如Google Kubernetes Engine 服務或Compute Engine 服務。但是，如果服務一詞會導致歧義，請使用產品名稱。"
  },
  {
    "objectID": "content/zh-tw/key-resources/product-names.html#請勿將產品名稱當作動詞使用",
    "href": "content/zh-tw/key-resources/product-names.html#請勿將產品名稱當作動詞使用",
    "title": "產品名稱",
    "section": "",
    "text": "請勿將產品名稱或功能名稱當作動詞使用。"
  },
  {
    "objectID": "content/zh-tw/introduction/about.html",
    "href": "content/zh-tw/introduction/about.html",
    "title": "關於本指南",
    "section": "",
    "text": "本風格指南為撰寫清晰且一致的技術文件提供了編輯指南，目標讀者為軟體開發人員和其他技術從業人員。\n如果您是本指南的新手，並且正在尋找有關我們風格的入門主題，請從重點、語氣與風格和文字格式摘要開始。否則，請將本指南作為特定問題的參考文件。例如，您可以在字詞清單中查詢術語。\n\n\n我們建議使用下列編輯資源。\n\n\n請依下列順序使用下列參考資料，包括本指南：\n\n專案特定風格。遵循您專案或產品特定的風格指南，例如本指南的必要例外情況或僅與您產品相關的術語。\n本風格指南。如果專案特定的風格指南未提供明確的指導，請遵循本指南。\n第三方參考資料。如果上述參考資料未提供明確的指導，請參閱這些第三方參考資料，具體取決於您問題的性質：\n\n\n\n問題類型\n第三方參考資料\n\n\n\n\n拼字\n遵循 Merriam-Webster.com。另請參閱拼字。\n\n\n非技術風格\n遵循 The Chicago Manual of Style，第 17 版 (需要訂閱)。\n\n\n技術風格\n請參閱 Microsoft Writing Style Guide。但請考量 Microsoft 的指南是否適用；其中一些可能僅適用於 Microsoft 產品和介面。\n\n\n\n\n在此層級的許多階段，參考既定用法會很有幫助。例如，搜尋您組織的文件，或查看廣泛的語言語料庫，例如 Google Ngram Viewer。\n\n\n\n您可以使用其他資源來研究和為您的思考提供資訊，但不要將它們視為 Google 開發人員文件風格的一部分。\n以下是來自科技社群的其他一些風格指南：\n\nApple 風格指南\nRed Hat 產品文件補充風格指南\n\n\n\n\n\n對於僅適用於 Android 或 Google Cloud 文件的指南，請尋找下列標誌：\n\n 表示 Android 文件特有的術語和指南。\n 表示 Google Cloud 文件特有的術語和指南。\n\n\n\n\n\n寧可打破這些規則，也不要說出任何完全野蠻的話。\n—George Orwell，「政治與英語」\n\n本指南包含的是指南，而非規則。當這麼做可以改善您的內容時，請偏離它。\n例如，如果我們建議將一個術語拼寫為一個單字，而您確定在您的領域中，該術語的連字號版本更適合您的讀者，那麼使用該版本是完全可以的。我們承認，有時同一個詞會有相互競爭的形式被廣泛使用，尤其是在新術語出現時，您可能有充分的理由偏離我們的指導。\n當您偏離本指南時，請在您的文件中保持一致。"
  },
  {
    "objectID": "content/zh-tw/introduction/about.html#編輯資源",
    "href": "content/zh-tw/introduction/about.html#編輯資源",
    "title": "關於本指南",
    "section": "",
    "text": "我們建議使用下列編輯資源。\n\n\n請依下列順序使用下列參考資料，包括本指南：\n\n專案特定風格。遵循您專案或產品特定的風格指南，例如本指南的必要例外情況或僅與您產品相關的術語。\n本風格指南。如果專案特定的風格指南未提供明確的指導，請遵循本指南。\n第三方參考資料。如果上述參考資料未提供明確的指導，請參閱這些第三方參考資料，具體取決於您問題的性質：\n\n\n\n問題類型\n第三方參考資料\n\n\n\n\n拼字\n遵循 Merriam-Webster.com。另請參閱拼字。\n\n\n非技術風格\n遵循 The Chicago Manual of Style，第 17 版 (需要訂閱)。\n\n\n技術風格\n請參閱 Microsoft Writing Style Guide。但請考量 Microsoft 的指南是否適用；其中一些可能僅適用於 Microsoft 產品和介面。\n\n\n\n\n在此層級的許多階段，參考既定用法會很有幫助。例如，搜尋您組織的文件，或查看廣泛的語言語料庫，例如 Google Ngram Viewer。\n\n\n\n您可以使用其他資源來研究和為您的思考提供資訊，但不要將它們視為 Google 開發人員文件風格的一部分。\n以下是來自科技社群的其他一些風格指南：\n\nApple 風格指南\nRed Hat 產品文件補充風格指南"
  },
  {
    "objectID": "content/zh-tw/introduction/about.html#本指南中使用的註釋",
    "href": "content/zh-tw/introduction/about.html#本指南中使用的註釋",
    "title": "關於本指南",
    "section": "",
    "text": "對於僅適用於 Android 或 Google Cloud 文件的指南，請尋找下列標誌：\n\n 表示 Android 文件特有的術語和指南。\n 表示 Google Cloud 文件特有的術語和指南。"
  },
  {
    "objectID": "content/zh-tw/introduction/about.html#打破規則",
    "href": "content/zh-tw/introduction/about.html#打破規則",
    "title": "關於本指南",
    "section": "",
    "text": "寧可打破這些規則，也不要說出任何完全野蠻的話。\n—George Orwell，「政治與英語」\n\n本指南包含的是指南，而非規則。當這麼做可以改善您的內容時，請偏離它。\n例如，如果我們建議將一個術語拼寫為一個單字，而您確定在您的領域中，該術語的連字號版本更適合您的讀者，那麼使用該版本是完全可以的。我們承認，有時同一個詞會有相互競爭的形式被廣泛使用，尤其是在新術語出現時，您可能有充分的理由偏離我們的指導。\n當您偏離本指南時，請在您的文件中保持一致。"
  },
  {
    "objectID": "content/zh-tw/index.html",
    "href": "content/zh-tw/index.html",
    "title": "Google developer documentation style guide",
    "section": "",
    "text": "[!NOTE]\nIn progress: This style guide is not completed yet, thus you might hit some broken links. Feel free to submit bugs and suggestions via Issues.\n\n\n\n\nAbout this guide\nHighlights\nWhat’s new\nPhilosophy of this style guide\n\n\n\n\n\nWord list\nProduct names\nText-formatting summary\n\n\n\n\n\nAccessibility\nExcessive claims\nFuture features\nGlobal audience\nInclusive language\nJargon\nPrescriptive documentation\nThird-party content\nTimeless documentation\nVoice and tone\n\n\n\n\n\n[Abbreviations]\n[Active voice]\n[Anthropomorphism]\n[Articles (a, an, the)]\n[Capitalization]\n[Contractions]\n[Plurals in parentheses]\n[Possessives]\n[Prepositions]\n[Present tense]\n[Pronouns]\n[Second person]\n[Sentence structure]\n[Verbs in reference documents]\n\n\n\n\n\n[Colons]\n[Commas]\n[Dashes]\n[Ellipses]\n[Hyphens]\n[Parentheses]\n[Periods and end punctuation]\n[Quotation marks]\n[Semicolons]\n[Slashes]\n\n\n\n\n\n[Dates and times]\n[Examples]\n[Figures and other images]\n[Footnotes]\n[Headings and titles]\n[Italics with terms]\n[Lists]\n[Notes and other notices]\n[Numbers]\n[Paragraphs]\n[Phone numbers]\n[Plural of a single letter]\n[Procedures]\n[Tables]\n[Units of measurement]\n\n\n\n\n\n[Cross-references and linking]\n[Headings as link targets]\n\n\n\n\n\n[API reference code comments]\n[Code in text]\n[Code samples]"
  },
  {
    "objectID": "content/zh-tw/index.html#introduction",
    "href": "content/zh-tw/index.html#introduction",
    "title": "Google developer documentation style guide",
    "section": "",
    "text": "About this guide\nHighlights\nWhat’s new\nPhilosophy of this style guide"
  },
  {
    "objectID": "content/zh-tw/index.html#key-resources",
    "href": "content/zh-tw/index.html#key-resources",
    "title": "Google developer documentation style guide",
    "section": "",
    "text": "Word list\nProduct names\nText-formatting summary"
  },
  {
    "objectID": "content/zh-tw/index.html#general-principles",
    "href": "content/zh-tw/index.html#general-principles",
    "title": "Google developer documentation style guide",
    "section": "",
    "text": "Accessibility\nExcessive claims\nFuture features\nGlobal audience\nInclusive language\nJargon\nPrescriptive documentation\nThird-party content\nTimeless documentation\nVoice and tone"
  },
  {
    "objectID": "content/zh-tw/index.html#language-and-grammar",
    "href": "content/zh-tw/index.html#language-and-grammar",
    "title": "Google developer documentation style guide",
    "section": "",
    "text": "[Abbreviations]\n[Active voice]\n[Anthropomorphism]\n[Articles (a, an, the)]\n[Capitalization]\n[Contractions]\n[Plurals in parentheses]\n[Possessives]\n[Prepositions]\n[Present tense]\n[Pronouns]\n[Second person]\n[Sentence structure]\n[Verbs in reference documents]"
  },
  {
    "objectID": "content/zh-tw/index.html#punctuation",
    "href": "content/zh-tw/index.html#punctuation",
    "title": "Google developer documentation style guide",
    "section": "",
    "text": "[Colons]\n[Commas]\n[Dashes]\n[Ellipses]\n[Hyphens]\n[Parentheses]\n[Periods and end punctuation]\n[Quotation marks]\n[Semicolons]\n[Slashes]"
  },
  {
    "objectID": "content/zh-tw/index.html#formatting-and-organization",
    "href": "content/zh-tw/index.html#formatting-and-organization",
    "title": "Google developer documentation style guide",
    "section": "",
    "text": "[Dates and times]\n[Examples]\n[Figures and other images]\n[Footnotes]\n[Headings and titles]\n[Italics with terms]\n[Lists]\n[Notes and other notices]\n[Numbers]\n[Paragraphs]\n[Phone numbers]\n[Plural of a single letter]\n[Procedures]\n[Tables]\n[Units of measurement]"
  },
  {
    "objectID": "content/zh-tw/index.html#linking",
    "href": "content/zh-tw/index.html#linking",
    "title": "Google developer documentation style guide",
    "section": "",
    "text": "[Cross-references and linking]\n[Headings as link targets]"
  },
  {
    "objectID": "content/zh-tw/index.html#computer-interfaces",
    "href": "content/zh-tw/index.html#computer-interfaces",
    "title": "Google developer documentation style guide",
    "section": "",
    "text": "[API reference code comments]\n[Code in text]\n[Code samples]"
  },
  {
    "objectID": "GEMINI.html",
    "href": "GEMINI.html",
    "title": "專案說明",
    "section": "",
    "text": "這是一個支援多國語言的文件專案。\n\n\n\n原文 (英文) 存放在 content/en/ 目錄下。\n其他語言的翻譯結果將會放在 content/&lt;language-code&gt;/ 目錄下，例如：\n\n繁體中文: content/zh-tw/\n日文: content/jp/\n韓文: content/kr/"
  },
  {
    "objectID": "GEMINI.html#目錄結構",
    "href": "GEMINI.html#目錄結構",
    "title": "專案說明",
    "section": "",
    "text": "原文 (英文) 存放在 content/en/ 目錄下。\n其他語言的翻譯結果將會放在 content/&lt;language-code&gt;/ 目錄下，例如：\n\n繁體中文: content/zh-tw/\n日文: content/jp/\n韓文: content/kr/"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Google Documentation Style Guide",
    "section": "",
    "text": "Origin: https://developers.google.com/style\n\n\n\n Back to top"
  },
  {
    "objectID": "README.zh-tw.html",
    "href": "README.zh-tw.html",
    "title": "Google 開發人員文件風格指南",
    "section": "",
    "text": "Use the following links for specific language translations of this README file:\n\nEnglish README\nChinese (Traditional) README\nChinese (Simplified) README\n\n\n本文件編譯自 Google 開發人員文件風格指南。\n若要開始閱讀風格指南，請使用以下連結查看特定語言的翻譯：\n\n英文\n繁體中文 (台灣)\n\n\n\n翻譯流程分為兩個步驟，首先必須把英文的網頁轉存為 markdown 檔案，並完成校對。一旦有了原文的 Markdown 檔案，第二步就簡單多了，只要利用 AI 工具來將英文版的 markdown 檔案翻譯成個別語言。\n\n\n把英文網頁轉存為 markdown 檔案的過程比較費工夫，原因有二。\n首先，抓取網頁時，必須排除一些跟主要內容無關的元素和文字。主要的方法有兩種：\n\n手動將 HTML 頁面轉換為 Markdown 檔案：將原始網頁的內容複製到剪貼簿，然後透過 Markdown Paste 擴充功能將其貼到 VS Code 編輯器中。\n撰寫 Python script 來抓取網頁內容並轉存為 markdown：詳見 tools/html2md。\n\n無論使用哪個方法，仍免不了需要事後的人工校對。\n另一個棘手的問題是因為原文有一些特殊排版是以 HTML 達成，而 Markdown 沒有直接對應的語法。\n比如說，在表格中使用清單項目，以及 HTML 的 description list (dl、dt、與 dd 標籤) 。在轉換成 Markdown 格式的過程中，如果碰到這類棘手的排版格式，可能需要進行改寫甚至刪減。\n\n\n\n原文的 markdown 檔案是放在 content/en/ 目錄下。翻譯成其他語言時，可將該資料夾底下的檔案全部複製到 content/[language-code] 資料夾（例如 content/zh-tw），再使用工具來翻譯這些檔案。\n\n\n\n\n目前支援的語言代碼如下表所示：\n\n\n\n語言\n代碼\n\n\n\n\n英文\nen\n\n\n繁體中文 (台灣)\nzh-tw\n\n\n\n每個語言代碼都代表 /content 資料夾下的一個子資料夾。例如，繁體中文的翻譯位於 /content/zh-tw 資料夾中。\n\n\n\n如果你想協助改進這個專案，歡迎 建立 issues 和 pull requests。\n\n\n\n創用 CC 姓名標示 4.0 國際授權條款 (CC BY 4.0)"
  },
  {
    "objectID": "README.zh-tw.html#翻譯是如何建立的",
    "href": "README.zh-tw.html#翻譯是如何建立的",
    "title": "Google 開發人員文件風格指南",
    "section": "",
    "text": "翻譯流程分為兩個步驟，首先必須把英文的網頁轉存為 markdown 檔案，並完成校對。一旦有了原文的 Markdown 檔案，第二步就簡單多了，只要利用 AI 工具來將英文版的 markdown 檔案翻譯成個別語言。\n\n\n把英文網頁轉存為 markdown 檔案的過程比較費工夫，原因有二。\n首先，抓取網頁時，必須排除一些跟主要內容無關的元素和文字。主要的方法有兩種：\n\n手動將 HTML 頁面轉換為 Markdown 檔案：將原始網頁的內容複製到剪貼簿，然後透過 Markdown Paste 擴充功能將其貼到 VS Code 編輯器中。\n撰寫 Python script 來抓取網頁內容並轉存為 markdown：詳見 tools/html2md。\n\n無論使用哪個方法，仍免不了需要事後的人工校對。\n另一個棘手的問題是因為原文有一些特殊排版是以 HTML 達成，而 Markdown 沒有直接對應的語法。\n比如說，在表格中使用清單項目，以及 HTML 的 description list (dl、dt、與 dd 標籤) 。在轉換成 Markdown 格式的過程中，如果碰到這類棘手的排版格式，可能需要進行改寫甚至刪減。\n\n\n\n原文的 markdown 檔案是放在 content/en/ 目錄下。翻譯成其他語言時，可將該資料夾底下的檔案全部複製到 content/[language-code] 資料夾（例如 content/zh-tw），再使用工具來翻譯這些檔案。"
  },
  {
    "objectID": "README.zh-tw.html#支援的語言代碼",
    "href": "README.zh-tw.html#支援的語言代碼",
    "title": "Google 開發人員文件風格指南",
    "section": "",
    "text": "目前支援的語言代碼如下表所示：\n\n\n\n語言\n代碼\n\n\n\n\n英文\nen\n\n\n繁體中文 (台灣)\nzh-tw\n\n\n\n每個語言代碼都代表 /content 資料夾下的一個子資料夾。例如，繁體中文的翻譯位於 /content/zh-tw 資料夾中。"
  },
  {
    "objectID": "README.zh-tw.html#貢獻",
    "href": "README.zh-tw.html#貢獻",
    "title": "Google 開發人員文件風格指南",
    "section": "",
    "text": "如果你想協助改進這個專案，歡迎 建立 issues 和 pull requests。"
  },
  {
    "objectID": "README.zh-tw.html#授權",
    "href": "README.zh-tw.html#授權",
    "title": "Google 開發人員文件風格指南",
    "section": "",
    "text": "創用 CC 姓名標示 4.0 國際授權條款 (CC BY 4.0)"
  },
  {
    "objectID": "content/zh-tw/introduction/whats-new.html",
    "href": "content/zh-tw/introduction/whats-new.html",
    "title": "新功能",
    "section": "",
    "text": "此頁面提供樣式指南重大變更的摘要。\n\n[!NOTE] 此處僅提供 2025 年的更新。若要查看更多內容，請參閱原始的新功能。\n\n\n\n\n\n\n新指南或變更\n頁面\n\n\n\n\n移除了過時的語言，該語言指出選項清單的處理方式與其他無序清單不同。\n清單\n\n\n—\n—\n\n\n新增了關於撰寫說明性文件的頁面。\n說明性文件、字詞清單\n\n\n移除了建議在方法名稱後方加上空括號的指南。\n文字中的程式碼\n\n\n變更了註腳指南，建議使用數字而非符號。\n註腳\n\n\n簡化了縮寫指南，移除了多餘的解釋和範例。\n縮寫\n\n\n在介紹文件章節的指南中新增了範例。\n標題和標題\n\n\n新增了範例服務帳戶 ID。\n範例網域和名稱\n\n\n簡化並闡明了關於冠詞的指南，包括在縮寫和產品名稱前使用冠詞。\n縮寫、冠詞 (a, an, the)、產品名稱、字詞清單\n\n\n納入了關於我們為何不記錄未來功能的一般性解釋。\n記錄未來功能\n\n\n修訂了指南，建議僅在縮寫是該詞更廣為人知的版本時，才在標題或標題中使用縮寫。\n標題和標題\n\n\n新增了一項建議，當您在執行文字中使用祈使句時，請考慮是否改為撰寫程序。\n第二人稱和第一人稱\n\n\n概括了現有的指南，說明當術語是指令或程式碼範例的一部分時該怎麼做。\n術語\n\n\n將關於交互參照和連結的指南合併到一個頁面中。\n交互參照和連結\n\n\n新增了一些具體原因，說明我們為何在引導讀者瀏覽頁面上的資訊時避免使用方向性語言。\n撰寫無障礙文件\n\n\n闡明了圖示周圍的間距是基於可讀性的判斷。\nUI 元素和互動\n\n\n移除了範例電話號碼。\n範例網域和名稱\n\n\n移除了 property 的字詞清單條目，因為其用法在很大程度上取決於技術背景。\n字詞清單\n\n\n新字詞清單條目：choose、confidential、sensitive、image、Fast Healthcare Interoperability Resources (FHIR)\n字詞清單\n\n\n\n\n\n\n\n\n\n新指南或變更\n頁面\n\n\n\n\n將拼字指南合併到字詞清單的介紹中。擴充了關於如何使用偏好的字典來決定具有多種拼法的單字要使用哪種拼法的指南。\n字詞清單\n\n\n—\n—\n\n\n概括了關於在程式碼範例中何時使用空格或定位點進行縮排的指南。\n程式碼範例\n\n\n變更了格式化電話號碼的指南，建議使用破折號而非括號將區碼與號碼的其餘部分隔開。\n格式化電話號碼\n\n\n擴充並闡明了在大多數情況下避免使用縮寫 i.e.、e.g. 和 etc. 的建議。\n縮寫、逗號分隔清單"
  },
  {
    "objectID": "content/zh-tw/introduction/whats-new.html#年-5-月-8-日",
    "href": "content/zh-tw/introduction/whats-new.html#年-5-月-8-日",
    "title": "新功能",
    "section": "",
    "text": "新指南或變更\n頁面\n\n\n\n\n移除了過時的語言，該語言指出選項清單的處理方式與其他無序清單不同。\n清單\n\n\n—\n—\n\n\n新增了關於撰寫說明性文件的頁面。\n說明性文件、字詞清單\n\n\n移除了建議在方法名稱後方加上空括號的指南。\n文字中的程式碼\n\n\n變更了註腳指南，建議使用數字而非符號。\n註腳\n\n\n簡化了縮寫指南，移除了多餘的解釋和範例。\n縮寫\n\n\n在介紹文件章節的指南中新增了範例。\n標題和標題\n\n\n新增了範例服務帳戶 ID。\n範例網域和名稱\n\n\n簡化並闡明了關於冠詞的指南，包括在縮寫和產品名稱前使用冠詞。\n縮寫、冠詞 (a, an, the)、產品名稱、字詞清單\n\n\n納入了關於我們為何不記錄未來功能的一般性解釋。\n記錄未來功能\n\n\n修訂了指南，建議僅在縮寫是該詞更廣為人知的版本時，才在標題或標題中使用縮寫。\n標題和標題\n\n\n新增了一項建議，當您在執行文字中使用祈使句時，請考慮是否改為撰寫程序。\n第二人稱和第一人稱\n\n\n概括了現有的指南，說明當術語是指令或程式碼範例的一部分時該怎麼做。\n術語\n\n\n將關於交互參照和連結的指南合併到一個頁面中。\n交互參照和連結\n\n\n新增了一些具體原因，說明我們為何在引導讀者瀏覽頁面上的資訊時避免使用方向性語言。\n撰寫無障礙文件\n\n\n闡明了圖示周圍的間距是基於可讀性的判斷。\nUI 元素和互動\n\n\n移除了範例電話號碼。\n範例網域和名稱\n\n\n移除了 property 的字詞清單條目，因為其用法在很大程度上取決於技術背景。\n字詞清單\n\n\n新字詞清單條目：choose、confidential、sensitive、image、Fast Healthcare Interoperability Resources (FHIR)\n字詞清單"
  },
  {
    "objectID": "content/zh-tw/introduction/whats-new.html#年-1-月-17-日",
    "href": "content/zh-tw/introduction/whats-new.html#年-1-月-17-日",
    "title": "新功能",
    "section": "",
    "text": "新指南或變更\n頁面\n\n\n\n\n將拼字指南合併到字詞清單的介紹中。擴充了關於如何使用偏好的字典來決定具有多種拼法的單字要使用哪種拼法的指南。\n字詞清單\n\n\n—\n—\n\n\n概括了關於在程式碼範例中何時使用空格或定位點進行縮排的指南。\n程式碼範例\n\n\n變更了格式化電話號碼的指南，建議使用破折號而非括號將區碼與號碼的其餘部分隔開。\n格式化電話號碼\n\n\n擴充並闡明了在大多數情況下避免使用縮寫 i.e.、e.g. 和 etc. 的建議。\n縮寫、逗號分隔清單"
  },
  {
    "objectID": "content/zh-tw/introduction/highlights.html",
    "href": "content/zh-tw/introduction/highlights.html",
    "title": "重點",
    "section": "",
    "text": "風格指南涵蓋了許多內容，因此以下頁面提供了其最重要幾點的總覽。如需頁面上主題的更多資訊，請點擊連結。\n\n\n\n保持對話式和友善的語氣，但不要輕浮。\n不要在文件中預先宣布任何事情。\n使用描述性的連結文字。\n撰寫無障礙內容。\n為全球讀者撰寫。\n\n\n\n\n\n使用第二人稱：「您」而不是「我們」。\n使用主動語態：清楚說明誰在執行動作。\n使用標準美式拼字和標點符號。\n將條件放在指令之前，而不是之後。\n有關特定單字的使用和拼字，請參閱單字表。\n\n\n\n\n\n文件標題和章節標題使用句子大小寫。\n序列使用編號清單。\n大多數其他清單使用項目符號清單。\n成對的相關資料使用描述清單。\n使用連續逗號。\n將與程式碼相關的文字放在程式碼字體中。\n將 UI 元素以粗體顯示。\n使用明確的日期格式。\n\n\n\n\n\n提供替代文字。\n在可行的情況下提供高解析度或向量圖片。"
  },
  {
    "objectID": "content/zh-tw/introduction/highlights.html#語氣與內容",
    "href": "content/zh-tw/introduction/highlights.html#語氣與內容",
    "title": "重點",
    "section": "",
    "text": "保持對話式和友善的語氣，但不要輕浮。\n不要在文件中預先宣布任何事情。\n使用描述性的連結文字。\n撰寫無障礙內容。\n為全球讀者撰寫。"
  },
  {
    "objectID": "content/zh-tw/introduction/highlights.html#語言與文法",
    "href": "content/zh-tw/introduction/highlights.html#語言與文法",
    "title": "重點",
    "section": "",
    "text": "使用第二人稱：「您」而不是「我們」。\n使用主動語態：清楚說明誰在執行動作。\n使用標準美式拼字和標點符號。\n將條件放在指令之前，而不是之後。\n有關特定單字的使用和拼字，請參閱單字表。"
  },
  {
    "objectID": "content/zh-tw/introduction/highlights.html#格式標點符號和組織",
    "href": "content/zh-tw/introduction/highlights.html#格式標點符號和組織",
    "title": "重點",
    "section": "",
    "text": "文件標題和章節標題使用句子大小寫。\n序列使用編號清單。\n大多數其他清單使用項目符號清單。\n成對的相關資料使用描述清單。\n使用連續逗號。\n將與程式碼相關的文字放在程式碼字體中。\n將 UI 元素以粗體顯示。\n使用明確的日期格式。"
  },
  {
    "objectID": "content/zh-tw/introduction/highlights.html#圖片",
    "href": "content/zh-tw/introduction/highlights.html#圖片",
    "title": "重點",
    "section": "",
    "text": "提供替代文字。\n在可行的情況下提供高解析度或向量圖片。"
  },
  {
    "objectID": "content/zh-tw/key-resources/word-list.html",
    "href": "content/zh-tw/key-resources/word-list.html",
    "title": "字詞清單",
    "section": "",
    "text": "字詞清單\n\n[!NOTE] 此頁面未包含。請參閱原始文件：字詞清單\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "content/zh-tw/general-principles/global-audience.html",
    "href": "content/zh-tw/general-principles/global-audience.html",
    "title": "為全球讀者而寫",
    "section": "",
    "text": "我們的開發人員文件是以美式英文撰寫，但其中一部分會被翻譯成英文以外的語言，或是由英文非母語的開發人員閱讀。\n撰寫時請考量在地化、翻譯和國際化。以下清單定義了這些術語：\n\n在地化： 針對特定國家調整產品及其相關文件。這個過程不僅止於翻譯，例如，還包括使用當地貨幣或度量單位。\n翻譯： 將一種語言翻譯成另一種語言。這個過程可能涉及在地化，但這兩個術語並非同義詞。\n國際化： 設計產品及其相關文件以盡量減少在地化工作，例如，將所有 UI 字串放在一個單獨的檔案中以簡化翻譯。\n\n更多資訊，請參閱語言在地化。\n關於其他寫作最佳實務，請參閱以下資源：\n\n撰寫無障礙文件\n撰寫具包容性的文件\n語氣與風格\n\n\n\n\n使用現在式。\n以清晰明確的方式撰寫日期和時間。\n謹慎使用螢幕截圖和圖表中的文字。更多資訊，請參閱圖表和其他圖片。\n為技術關鍵字使用限定名詞。例如，在參照名為 example.yaml 的檔案時，稱之為 example.yaml 檔案，而非單獨的 example.yaml。更多資訊，請參閱關鍵字。\n提供上下文。不要假設讀者已經知道您在說什麼。\n盡可能避免否定結構。思考是否有必要告訴讀者他們不能做什麼，而不是他們能做什麼。\n在程序文件中避免使用方向性語言（例如，上方或下方）。更多資訊，請參閱 UI 元素與互動。\n\n\n\n\n句子越短，越容易翻譯。英文句子的長度可能比其他語言短，因此一個平均長度的英文句子在翻譯後可能會變成一個很長的句子。較長的句子會影響理解，在頁面或產品介面上造成呈現問題，延長翻譯時間，並增加翻譯和審閱成本。\n\n\n\n\n使用主動語態。句子的主詞是執行動作的人或事物。使用被動語態時，讀者通常很難弄清楚誰應該做什麼。更多資訊，請參閱主動語態。\n直接對讀者說話。使用您，而非使用者或他們，除非您指的是使用讀者正在開發的軟體的某人。更多資訊，請參閱第二人稱和第一人稱。\n使用簡單的詞彙。例如，當您想表達開始或著手時，不要使用commence。當您想表達所以時，不要使用consequently。當您想表達使用時，不要使用utilize或leverage。（當您要傳達特殊含義時，使用這些詞彙是可以的，例如，Cloud Spanner utilizes up to 100% of the available CPU resources.）\n當一個詞可以傳達與片語相同的概念時，就使用那個詞。例如，當您可以使用一些或許多時，就不要使用a number of這樣的片語。\n盡可能避免使用片語動詞。片語動詞結合多個詞彙形成一個單一的動詞片語。這些動詞也稱為複合動詞。請先嘗試用一個更簡單的動詞來替代。可能沒有更好的動詞；例如，此規則有幾個例外，包括set up、log in和sign in。\n\n✅ 建議：本文件使用以下術語：\n❌ 不建議：本文件利用了以下術語：\n\n定義縮寫。縮寫在脫離上下文時可能會令人困惑，而且它們的翻譯效果不佳。盡可能拼出全名，至少在您第一次使用某個術語時。更多資訊，請參閱縮寫。\n不要使用太多修飾語。特別是，不要使用超過兩個名詞來修飾另一個名詞。\n\n✅ 建議：混合環境中的雲端原生 DevSecOps 管線\n❌ 不建議：混合雲端原生 DevSecOps 管線\n\n不要錯置修飾語。例如，將only這樣的詞緊接在它所關聯的詞或片語之前。如果意思仍然不明確，請嘗試改寫句子。\n\n✅ 建議：僅要求一個權杖。\n✅ 建議：要求不超過一個權杖。\n❌ 不建議：只要求一個權杖。\n\n不要省略關係代名詞。為了提供清晰度並避免歧義，請使用that和which等關係代名詞。更多資訊，請參閱關係代名詞。\n\n✅ 建議：您可以透過程式設計方式更新您先前定義的規則。\n❌ 不建議：您可以透過程式設計方式更新您先前定義的規則。\n\n釐清先行詞。當譯者處理簡短、不連貫的文字片段時，使用代名詞可能會變得很棘手。盡可能讓事情變得清晰，以幫助他們。例如，如果一個代名詞有歧義，就用適當的名詞取代它。\n\n✅ 建議：如果您在廣告中使用綠色啤酒一詞，請確保該廣告具有針對性。\n❌ 不建議：如果您在廣告中使用綠色啤酒一詞，請確保它具有針對性。\n\n使用助詞。then、that和of等助詞在會話式英文中經常被省略。使用這些詞彙以避免歧義。\n\n\n\n\n\n\n\n✅ 建議\n❌ 不建議\n\n\n\n\n如果找不到屬性鍵，則傳回預設值。\n如果找不到屬性鍵，傳回預設值。\n\n\n—\n—\n\n\n本文件適用於資料工程師，並假設您具備以下知識：\n本文件適用於資料工程師，並假設您具備以下知識：\n\n\n識別所有資料集。\n識別所有資料集。\n\n\n啟動分析器，然後執行應用程式。\n啟動分析器，然後執行應用程式。\n\n\n\n另請參閱可選代名詞。\n如果重複一個詞可以提高理解度，就重複它。\n\n\n\n\n\n\n\n✅ 建議\n❌ 不建議\n\n\n\n\n如果虛擬機器已啟動，且您能夠連線…\n如果虛擬機器已啟動且您能夠連線…\n\n\n—\n—\n\n\n資源階層設計預設會同時建立 IAM 區隔和網路區隔。\n資源階層設計預設會同時建立 IAM 和網路區隔。\n\n\n一個出口規則，其動作為 allow，目的地為 0.0.0.0/0，且其優先順序為最低可能值 (65535)。\n一個出口規則，其動作為 allow，目的地為 0.0.0.0/0，且優先順序為最低可能值 (65535)。\n\n\n\n\n\n\n\n如果您在某處使用特定術語來表示特定概念，那麼在其他地方也要使用完全相同的術語，包括相同的大小寫。如果您對同一事物使用不同的名稱，譯者可能會認為您指的是不同的概念，因此可能會使用不同的翻譯。術語和措辭的不一致會大大增加翻譯成本，特別是當翻譯記憶庫和機器翻譯被用作翻譯的第一步時。\n\n不要用同一個詞來表示不同的意思。特別是，避免在相近的地方同時使用同一個詞作為名詞和動詞。有關多重含義問題的範例，請參閱once和since的詞彙表條目。\n對於常用句子、介紹性片語和其他常見任務，請使用標準化片語。有關範例，請參閱介紹連結、介紹輸出和介紹程式碼範例。\n使用標準的英文詞序。句子遵循主詞 + 動詞 + 受詞的順序。\n盡量將主要主詞和動詞放在句子的開頭。\n先使用條件子句。如果您想告訴讀者在特定情況下該做什麼，請在提供指示之前先提及該情況。更多資訊，請參閱句子結構。\n使清單項目保持一致。使清單項目在結構上平行。在大小寫和標點符號上保持一致。更多資訊，請參閱清單。\n使用一致的排版格式。一致地使用粗體和斜體。不要從使用斜體表示強調切換到使用底線。更多資訊，請參閱文字格式摘要。\n使用一致的大小寫。更多資訊，請參閱大小寫。\n\n\n\n\n您不是為您的文化而寫。撰寫時請考量包容性。更多資訊，請參閱撰寫具包容性的文件。\n\n不要過於文化特定。特別是，不要參照特定的節日、文化習俗或運動，除非您確定它們是全球皆知的。\n使用多樣化的範例名稱。如果您需要使用人名（例如，作為電子郵件地址），請使用多樣化的名稱。更多資訊，請參閱範例網域和名稱。\n避免使用口語、慣用語或俚語。ballpark figure、back burner或hang in there等片語可能會令人困惑且難以翻譯。\n避免幽默。大多數幽默都很難翻譯，而且許多幽默都具有文化特定性。\n避免參照季節。更多資訊，請參閱表達年度劃分。"
  },
  {
    "objectID": "content/zh-tw/general-principles/global-audience.html#最佳實務",
    "href": "content/zh-tw/general-principles/global-audience.html#最佳實務",
    "title": "為全球讀者而寫",
    "section": "",
    "text": "使用現在式。\n以清晰明確的方式撰寫日期和時間。\n謹慎使用螢幕截圖和圖表中的文字。更多資訊，請參閱圖表和其他圖片。\n為技術關鍵字使用限定名詞。例如，在參照名為 example.yaml 的檔案時，稱之為 example.yaml 檔案，而非單獨的 example.yaml。更多資訊，請參閱關鍵字。\n提供上下文。不要假設讀者已經知道您在說什麼。\n盡可能避免否定結構。思考是否有必要告訴讀者他們不能做什麼，而不是他們能做什麼。\n在程序文件中避免使用方向性語言（例如，上方或下方）。更多資訊，請參閱 UI 元素與互動。"
  },
  {
    "objectID": "content/zh-tw/general-principles/global-audience.html#撰寫簡短的句子",
    "href": "content/zh-tw/general-principles/global-audience.html#撰寫簡短的句子",
    "title": "為全球讀者而寫",
    "section": "",
    "text": "句子越短，越容易翻譯。英文句子的長度可能比其他語言短，因此一個平均長度的英文句子在翻譯後可能會變成一個很長的句子。較長的句子會影響理解，在頁面或產品介面上造成呈現問題，延長翻譯時間，並增加翻譯和審閱成本。"
  },
  {
    "objectID": "content/zh-tw/general-principles/global-audience.html#使用清晰精確無歧義的語言",
    "href": "content/zh-tw/general-principles/global-audience.html#使用清晰精確無歧義的語言",
    "title": "為全球讀者而寫",
    "section": "",
    "text": "使用主動語態。句子的主詞是執行動作的人或事物。使用被動語態時，讀者通常很難弄清楚誰應該做什麼。更多資訊，請參閱主動語態。\n直接對讀者說話。使用您，而非使用者或他們，除非您指的是使用讀者正在開發的軟體的某人。更多資訊，請參閱第二人稱和第一人稱。\n使用簡單的詞彙。例如，當您想表達開始或著手時，不要使用commence。當您想表達所以時，不要使用consequently。當您想表達使用時，不要使用utilize或leverage。（當您要傳達特殊含義時，使用這些詞彙是可以的，例如，Cloud Spanner utilizes up to 100% of the available CPU resources.）\n當一個詞可以傳達與片語相同的概念時，就使用那個詞。例如，當您可以使用一些或許多時，就不要使用a number of這樣的片語。\n盡可能避免使用片語動詞。片語動詞結合多個詞彙形成一個單一的動詞片語。這些動詞也稱為複合動詞。請先嘗試用一個更簡單的動詞來替代。可能沒有更好的動詞；例如，此規則有幾個例外，包括set up、log in和sign in。\n\n✅ 建議：本文件使用以下術語：\n❌ 不建議：本文件利用了以下術語：\n\n定義縮寫。縮寫在脫離上下文時可能會令人困惑，而且它們的翻譯效果不佳。盡可能拼出全名，至少在您第一次使用某個術語時。更多資訊，請參閱縮寫。\n不要使用太多修飾語。特別是，不要使用超過兩個名詞來修飾另一個名詞。\n\n✅ 建議：混合環境中的雲端原生 DevSecOps 管線\n❌ 不建議：混合雲端原生 DevSecOps 管線\n\n不要錯置修飾語。例如，將only這樣的詞緊接在它所關聯的詞或片語之前。如果意思仍然不明確，請嘗試改寫句子。\n\n✅ 建議：僅要求一個權杖。\n✅ 建議：要求不超過一個權杖。\n❌ 不建議：只要求一個權杖。\n\n不要省略關係代名詞。為了提供清晰度並避免歧義，請使用that和which等關係代名詞。更多資訊，請參閱關係代名詞。\n\n✅ 建議：您可以透過程式設計方式更新您先前定義的規則。\n❌ 不建議：您可以透過程式設計方式更新您先前定義的規則。\n\n釐清先行詞。當譯者處理簡短、不連貫的文字片段時，使用代名詞可能會變得很棘手。盡可能讓事情變得清晰，以幫助他們。例如，如果一個代名詞有歧義，就用適當的名詞取代它。\n\n✅ 建議：如果您在廣告中使用綠色啤酒一詞，請確保該廣告具有針對性。\n❌ 不建議：如果您在廣告中使用綠色啤酒一詞，請確保它具有針對性。\n\n使用助詞。then、that和of等助詞在會話式英文中經常被省略。使用這些詞彙以避免歧義。\n\n\n\n\n\n\n\n✅ 建議\n❌ 不建議\n\n\n\n\n如果找不到屬性鍵，則傳回預設值。\n如果找不到屬性鍵，傳回預設值。\n\n\n—\n—\n\n\n本文件適用於資料工程師，並假設您具備以下知識：\n本文件適用於資料工程師，並假設您具備以下知識：\n\n\n識別所有資料集。\n識別所有資料集。\n\n\n啟動分析器，然後執行應用程式。\n啟動分析器，然後執行應用程式。\n\n\n\n另請參閱可選代名詞。\n如果重複一個詞可以提高理解度，就重複它。\n\n\n\n\n\n\n\n✅ 建議\n❌ 不建議\n\n\n\n\n如果虛擬機器已啟動，且您能夠連線…\n如果虛擬機器已啟動且您能夠連線…\n\n\n—\n—\n\n\n資源階層設計預設會同時建立 IAM 區隔和網路區隔。\n資源階層設計預設會同時建立 IAM 和網路區隔。\n\n\n一個出口規則，其動作為 allow，目的地為 0.0.0.0/0，且其優先順序為最低可能值 (65535)。\n一個出口規則，其動作為 allow，目的地為 0.0.0.0/0，且優先順序為最低可能值 (65535)。"
  },
  {
    "objectID": "content/zh-tw/general-principles/global-audience.html#保持一致性",
    "href": "content/zh-tw/general-principles/global-audience.html#保持一致性",
    "title": "為全球讀者而寫",
    "section": "",
    "text": "如果您在某處使用特定術語來表示特定概念，那麼在其他地方也要使用完全相同的術語，包括相同的大小寫。如果您對同一事物使用不同的名稱，譯者可能會認為您指的是不同的概念，因此可能會使用不同的翻譯。術語和措辭的不一致會大大增加翻譯成本，特別是當翻譯記憶庫和機器翻譯被用作翻譯的第一步時。\n\n不要用同一個詞來表示不同的意思。特別是，避免在相近的地方同時使用同一個詞作為名詞和動詞。有關多重含義問題的範例，請參閱once和since的詞彙表條目。\n對於常用句子、介紹性片語和其他常見任務，請使用標準化片語。有關範例，請參閱介紹連結、介紹輸出和介紹程式碼範例。\n使用標準的英文詞序。句子遵循主詞 + 動詞 + 受詞的順序。\n盡量將主要主詞和動詞放在句子的開頭。\n先使用條件子句。如果您想告訴讀者在特定情況下該做什麼，請在提供指示之前先提及該情況。更多資訊，請參閱句子結構。\n使清單項目保持一致。使清單項目在結構上平行。在大小寫和標點符號上保持一致。更多資訊，請參閱清單。\n使用一致的排版格式。一致地使用粗體和斜體。不要從使用斜體表示強調切換到使用底線。更多資訊，請參閱文字格式摘要。\n使用一致的大小寫。更多資訊，請參閱大小寫。"
  },
  {
    "objectID": "content/zh-tw/general-principles/global-audience.html#具備包容性",
    "href": "content/zh-tw/general-principles/global-audience.html#具備包容性",
    "title": "為全球讀者而寫",
    "section": "",
    "text": "您不是為您的文化而寫。撰寫時請考量包容性。更多資訊，請參閱撰寫具包容性的文件。\n\n不要過於文化特定。特別是，不要參照特定的節日、文化習俗或運動，除非您確定它們是全球皆知的。\n使用多樣化的範例名稱。如果您需要使用人名（例如，作為電子郵件地址），請使用多樣化的名稱。更多資訊，請參閱範例網域和名稱。\n避免使用口語、慣用語或俚語。ballpark figure、back burner或hang in there等片語可能會令人困惑且難以翻譯。\n避免幽默。大多數幽默都很難翻譯，而且許多幽默都具有文化特定性。\n避免參照季節。更多資訊，請參閱表達年度劃分。"
  },
  {
    "objectID": "content/zh-tw/general-principles/other-sources.html",
    "href": "content/zh-tw/general-principles/other-sources.html",
    "title": "第三方內容",
    "section": "",
    "text": "請勿複製其他來源的內容，因為這可能違反著作權。請改寫並連結至其內容。\n內容包括以下類型：文字、圖片、程式碼、標誌和語音。\n\n✅ 建議：復原點目標 (RPO)，這是指因重大事件而可能導致您的應用程式資料遺失的最長可接受時間。\n❌ 不建議：復原點目標 (RPO)：「RPO 是指因重大事件而可能導致 IT 服務資料（交易）遺失的最長目標期間」(https://en.wikipedia.org/wiki/Disaster_recovery#Recovery_Point_Objective)。\n\n\n\n除非您確定您的公司擁有這些資產，否則請避免從以下來源複製：\n\n第三方來源：此清單包括文件、網站、書籍、部落格、影片、圖片、播客等。\n參考來源：避免從字典、百科全書和維基百科複製。\n開源產品文件：開源軟體 (OSS) 有不同的授權選項，範圍從未經署名不得重複使用到完全自由使用該材料。假設您可以自由重複使用此內容是不安全的。如有疑問，請勿使用其內容。\nGitHub 內容：不同的 GitHub 使用者可能對其內容採用不同的授權。假設您可以自由重複使用此內容是不安全的。如有疑問，請勿使用其內容。"
  },
  {
    "objectID": "content/zh-tw/general-principles/other-sources.html#避免使用第三方內容",
    "href": "content/zh-tw/general-principles/other-sources.html#避免使用第三方內容",
    "title": "第三方內容",
    "section": "",
    "text": "除非您確定您的公司擁有這些資產，否則請避免從以下來源複製：\n\n第三方來源：此清單包括文件、網站、書籍、部落格、影片、圖片、播客等。\n參考來源：避免從字典、百科全書和維基百科複製。\n開源產品文件：開源軟體 (OSS) 有不同的授權選項，範圍從未經署名不得重複使用到完全自由使用該材料。假設您可以自由重複使用此內容是不安全的。如有疑問，請勿使用其內容。\nGitHub 內容：不同的 GitHub 使用者可能對其內容採用不同的授權。假設您可以自由重複使用此內容是不安全的。如有疑問，請勿使用其內容。"
  },
  {
    "objectID": "content/zh-tw/general-principles/jargon.html",
    "href": "content/zh-tw/general-principles/jargon.html",
    "title": "行話",
    "section": "",
    "text": "行話\n行話是特定群體用來代表更大概念的專門且通常是比喻性的術語——例如，camel case（駝峰式命名）、swim lane（泳道）、break-glass procedure（緊急應變程序）或 out-of-the-box（開箱即用）。行話也可能包含定義模糊或過度使用的術語，例如 solution（解決方案）、support（支援）或 workload（工作負載）。\n通常，行話的意義只有特定群體才能理解。因此，行話可能會妨礙我們發布清晰、觸及多種語言的全球讀者、服務於不同產品知識水準的讀者，以及包容不同群體和文化的內容。有關以包容性和多樣性為考量進行寫作的更多資訊，請參閱撰寫具包容性的文件。\n然而，有些行話在我們的行業或文件的目標讀者中被廣泛理解和接受。當您知道讀者會搜尋這些術語時，在文件中包含這些行話可能很有價值。如果您要使用行話，請考量以下問題：\n\n您能避開這個術語嗎？ 如果您不需要這個術語來進行搜尋引擎最佳化 (SEO)，請嘗試避開它。例如，與其寫舉行事後檢討，不如寫專案結束後，檢討哪些流程有效或無效。與其寫建立一個粗略的設計，不如寫使用非正式的設計流程。\n您能用另一個更具體的術語取代它嗎？ 例如，本風格指南的詞彙表提供了幾個替代術語：affected area 或 spatial impact（用於 blast radius）、import 或 load（用於 ingest），以及 ready-made 或 pre-built（用於 off-the-shelf）。當詞彙表中的術語標示為「請勿使用」（某些行話可能被認為具有冒犯性、暴力或不具包容性）時，請取代該術語或避開它。\n您在文件中只使用一次這個術語嗎？ 如果是，請用淺顯的語言描述該術語，並在括號中提及它，或連結到一個可信的定義。\n\n✅ 建議：然後您將任務移至流程的較早部分（也稱為左移）。\n✅ 建議：可能會出現腦裂的情況。\n\n您在整份文件中都使用這個術語嗎？ 如果是，請在第一次提及時在括號中簡要描述該術語，或連結到一個可信的定義。\n\n✅ 建議：應用程式處於與冷備援（與主系統相同的備份或冗餘系統）相同的狀態。\n✅ 建議：一個更好的方法是使用一種稱為無效信件佇列的模式。\n\n該術語是否用於指令或程式碼範例中？ 如果是，請僅在直接參照程式碼項目時使用這些詞語（格式化為程式碼），並清楚說明您所參照的內容。\n\n✅ 建議：透過輸入以下內容將使用者新增至允許清單 (whitelist)：whitelist adduser*EMAIL_ADDRESS*。\n❌ 不建議：透過輸入以下內容將使用者新增至白名單：whitelist adduser*EMAIL_ADDRESS*。\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "content/zh-tw/general-principles/timeless-documentation.html",
    "href": "content/zh-tw/general-principles/timeless-documentation.html",
    "title": "雋永的文件",
    "section": "",
    "text": "雋永的文件是指避免使用將文件錨定在某個時間點，或假設讀者了解先前或未來產品和功能的詞語和片語。一般而言，請記錄產品或功能的目前版本。\n雋永的文件對於技術文件尤其重要，因為這些文件可能會在撰寫後很長一段時間才被閱讀。now、new 和 currently 等詞語可能會使這類文件變得不準確、過時或毫無意義。相反地，雋永的文件著重於產品目前的運作方式——而不是它與先前版本的變化，也不是它未來可能的變化。\n\n\n\n\n\n\n\n✅ 建議\n❌ 不建議\n\n\n\n\n這些子指令可讓您與 HTTP 負載平衡互動。\n這些新的子指令可讓您與 HTTP 負載平衡互動。\n\n\n—\n—\n\n\n不支援下列命令列選項：\n目前不支援下列命令列選項：\n\n\n模擬器支援下列篩選器：\n模擬器現在支援下列篩選器：\n\n\n\n如果您正在撰寫程序性或有時間戳記的內容，例如新聞稿、部落格文章或版本說明，那麼使用這類基於時間的詞語和片語是可以的。例如，在宣布產品更新的部落格文章中，new 是可以的：Dataflow 包含數個新功能。 或者，在程序性內容中，soon 是可以的，用來強調使用者執行某個步驟後狀態的改變：在您傳送關機指令後，虛擬機器很快就會離線。 然而，在產品文件中，當用來指稱產品的功能和能力時，其中一些詞語可能會變得過時或不正確，因此我們建議在該情境下避免使用這類詞語。\n撰寫雋永的產品文件具有以下價值：\n\n減少保持文件最新所需的維護工作。\n避免假設讀者熟悉產品的早期版本。\n\n\n\n下列詞語和片語可能會破壞文件的雋永性：\n\n做出承諾或預測計畫和策略的詞語和片語。在描述產品或功能能力的背景下，at present、as of this writing 或 eventually 等詞語和片語可能會過早地揭露產品或功能的計畫，或者可能會不當地暗示產品或功能可能會改變。在這些情況下，請勿使用這類詞語和片語。\n更多資訊，請參閱記錄未來功能。\n隱含的詞語和片語。在 Google，我們假設我們的文件是目前的，除非指定了特定的發行版本。因此，currently 和 as of this writing 等詞語和片語已由文件本身的存在所隱含。\n發布後很快就會過時的詞語和片語。soon 和 latest 等詞語很快就會變得無關緊要。\n假設讀者對產品或功能有先備知識的詞語和片語。如果您必須使用 new 之類的詞語，請提供一個參考點，例如日期或版本發行號碼——例如，2021 年 1 月 14 日發行的 BigQuery 包含一個新的資源面板。\n\n在產品和參考文件中描述產品或功能能力時，請避免使用下列詞語和片語：\n\nas of this writing\ncurrently\ndoes not yet\neventually\nexisting\nfuture, in the future\nlatest\nnew, newer\nnow\nold, older\npresently, at present\nsoon"
  },
  {
    "objectID": "content/zh-tw/general-principles/timeless-documentation.html#應避免的詞語和片語",
    "href": "content/zh-tw/general-principles/timeless-documentation.html#應避免的詞語和片語",
    "title": "雋永的文件",
    "section": "",
    "text": "下列詞語和片語可能會破壞文件的雋永性：\n\n做出承諾或預測計畫和策略的詞語和片語。在描述產品或功能能力的背景下，at present、as of this writing 或 eventually 等詞語和片語可能會過早地揭露產品或功能的計畫，或者可能會不當地暗示產品或功能可能會改變。在這些情況下，請勿使用這類詞語和片語。\n更多資訊，請參閱記錄未來功能。\n隱含的詞語和片語。在 Google，我們假設我們的文件是目前的，除非指定了特定的發行版本。因此，currently 和 as of this writing 等詞語和片語已由文件本身的存在所隱含。\n發布後很快就會過時的詞語和片語。soon 和 latest 等詞語很快就會變得無關緊要。\n假設讀者對產品或功能有先備知識的詞語和片語。如果您必須使用 new 之類的詞語，請提供一個參考點，例如日期或版本發行號碼——例如，2021 年 1 月 14 日發行的 BigQuery 包含一個新的資源面板。\n\n在產品和參考文件中描述產品或功能能力時，請避免使用下列詞語和片語：\n\nas of this writing\ncurrently\ndoes not yet\neventually\nexisting\nfuture, in the future\nlatest\nnew, newer\nnow\nold, older\npresently, at present\nsoon"
  },
  {
    "objectID": "content/zh-tw/general-principles/excessive-claims.html",
    "href": "content/zh-tw/general-principles/excessive-claims.html",
    "title": "避免過度聲明",
    "section": "",
    "text": "避免過度聲明\n在文件中，請勿做出過度聲明。過度聲明是指文件中的斷言，其具有以下任何一種情況：\n\n對效能或成本的陳述，不易透過讀者可取得的資料來驗證。\n對安全性的陳述，會因安全性事件而失效。\n可能被解讀為主觀甚至貶抑的陳述，尤其是關於第三方產品。\n\n在評估某些文字是否構成過度聲明時，不僅要考慮產品目前的效能、成本、安全性或功能，還要考慮未來可能的情況。\n請考量以下準則：\n\n在描述產品時，避免使用最高級形容詞，例如最好、最簡單、最快、絕不和總是。同樣地，請謹慎使用確保和保證等詞語，僅在某件事可以真正被確保或保證時才使用。\n如果您提出具體的效能聲明——產品有多快、需要多少儲存空間等等——請務必參照您的資訊來源。\n如果文件聲稱某產品是安全的，但有人成功入侵該產品，則該文件是無效的（且不可信）。建議改為某功能「有助於安全性」或「為安全性而設計」，因為即使發生安全性事件，這些陳述仍然是真實的。\n您對競爭產品的陳述，如果您誤解了該產品的運作方式，或者稍後該公司推出新版本，都可能是不真實的。\n\n最安全的方法始終是如實、客觀地撰寫，將您所說的內容限制在可在文件生命週期內保持真實的可驗證資訊。\n\n✅ 建議：我們的產品將資料集和計算分散在叢集的記憶體中，因此在這種情況下，它可能比 ExampleCorporation 的產品更快。更多資訊，請參閱效能比較。\n❌ 不建議：我們的產品比 ExampleCorp 的產品快。\n✅ 建議：使用我們的安全性產品是整體策略的一部分，有助於防止網路釣魚攻擊造成的帳戶盜用。\n❌ 不建議：我們的安全性產品可防止網路釣魚攻擊造成的帳戶盜用。\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "content/en/naming/trademarks.html",
    "href": "content/en/naming/trademarks.html",
    "title": "Trademarks",
    "section": "",
    "text": "Follow any usage guidelines that trademark owners provide.\n\n\nFor trademark marking or attribution in documentation, follow any usage guidelines provided by the owners of the respective marks.\nFor more about Google trademarks in particular, see (About our trademarks and how to use them)[https://www.google.com/permissions/trademark/].\n\n\n\nWhen you use a trademarked term, always use it to modify a noun, not as a noun by itself. Don’t use a trademark as a verb.\nNever form a possessive or a plural from a trademark or change it in any way. For more information, see Possessives.\n✅ Recommended: Another option is to use a Chromebook notebook computer.\n❌ Not recommended: Another option is to use a Chromebook.\n❌ Not recommended: Chromebook’s features rely on an internet connection.\n❌ Not recommended: For information about Chromebook computers, google “notebook computers”\nFor more information about using Google trademarks, see Rules for proper usage.",
    "crumbs": [
      "Names and naming",
      "Trademarks"
    ]
  },
  {
    "objectID": "content/en/naming/trademarks.html#label-trademarked-terms",
    "href": "content/en/naming/trademarks.html#label-trademarked-terms",
    "title": "Trademarks",
    "section": "",
    "text": "For trademark marking or attribution in documentation, follow any usage guidelines provided by the owners of the respective marks.\nFor more about Google trademarks in particular, see (About our trademarks and how to use them)[https://www.google.com/permissions/trademark/].",
    "crumbs": [
      "Names and naming",
      "Trademarks"
    ]
  },
  {
    "objectID": "content/en/naming/trademarks.html#use-trademarks-only-as-modifiers",
    "href": "content/en/naming/trademarks.html#use-trademarks-only-as-modifiers",
    "title": "Trademarks",
    "section": "",
    "text": "When you use a trademarked term, always use it to modify a noun, not as a noun by itself. Don’t use a trademark as a verb.\nNever form a possessive or a plural from a trademark or change it in any way. For more information, see Possessives.\n✅ Recommended: Another option is to use a Chromebook notebook computer.\n❌ Not recommended: Another option is to use a Chromebook.\n❌ Not recommended: Chromebook’s features rely on an internet connection.\n❌ Not recommended: For information about Chromebook computers, google “notebook computers”\nFor more information about using Google trademarks, see Rules for proper usage.",
    "crumbs": [
      "Names and naming",
      "Trademarks"
    ]
  },
  {
    "objectID": "content/en/naming/examples.html",
    "href": "content/en/naming/examples.html",
    "title": "Example domains and names",
    "section": "",
    "text": "Don’t use real domain names, email addresses, or people’s names in your examples. Don’t reveal personally identifiable information (PII), such as domain names, email addresses, phone numbers, people’s names, project names, or credit card numbers. You can provide imaginary (fictitious) examples or use placeholders, like USER_ID or EMAIL_ADDRESS.\n\n\nWhen you need a generic domain name in an example, use example.com, example.org, or example.net. These domains are reserved by the Internet Assigned Numbers Authority for use in documentation.\nAlternatively, you can use any of the following domain names, which Google owns specifically for use in documentation:\n\naltostrat.com\nexamplepetstore.com\nexample-pet-store.com\nmyownpersonaldomain.com\nmy-own-personal-domain.com\ncymbalgroup.com\n\nIf you need an example domain name for an internationalized domain name, use one of the IDN Test TLDs and copy from the “URL of the test site” column.\n✅ Recommended: Hostnames that include non-ASCII characters are encoded using Punycode. For example, http://مثال.إختبار is encoded as xn--kgbechtv.\n\n\n\nIf you need a generic email address, use one of the domains listed in Example domain names and one of the names listed in Example person names—for example, dana@example.com. It’s OK to use generic addresses like support@example.net. Don’t use person names, product names, or made-up names in email addresses.\n\n\n\nWhen you need to include example given names in your documentation, draw from the following list:\n\nAlex\nAmal\nAriel\nBola\nCharlie\nCruz\nDana\nDani\nHao\nIra\nIzumi\nJie\nKai\nKalani\nKim\nKiran\nLee\nLucian\nLuka\nMahan\nNoam\nNur\nQuinn\nRaha\nRosario\nSasha\nTal\nTaylor\nTristan\nYuri\n\n\n\nWhen you need to include example surnames in your documentation, use an initial after the given first name—for example, Quinn N. or Dana A.\n\n\n\nWhen you are writing about people, even fictitious or hypothetical people, it’s important to remember that your work will be read by real people whom we want to feel respected, valued, and welcomed.\nYour audience includes different kinds of people, including people with different jobs, cultural contexts, and backgrounds, so strive to include a variety of people in your examples as well.\nUse the gender-neutral singular pronouns they, their, and theirs whenever possible, and avoid specifying gender unless it is integral to the information you are communicating. Avoid examples that depend on a gender binary. However, if you do write an example that requires specifying gender, consider that some of the names on this list may imply a particular gender in a given language or culture, and check to ensure that any names you have chosen do not carry a conflicting gender connotation.\nBe mindful of assumptions and stereotypes that might be reinforced through hypothetical examples, such as:\n\nJob roles and levels, such as executive, that might be disproportionately assigned particular gendered personas.\nJob roles, such as developer or engineer, that might be disproportionately assigned particular ethnic personas.\n\nWe recommend using names from the preceding list in most documentation. Some security documentation uses the Alice and Bob cast of characters. Don’t use the Alice and Bob characters unless you’re writing documentation that refers to a technical specification that uses those characters. If you use the Alice and Bob characters in a document, use only names from that cast of characters.\nFor further guidance, see the section of this guide on writing inclusive documentation.\n\n\n\n\nWhen you need a company name in an example, use Example Organization. If you need to differentiate between two different fictional companies, you can add a description to the company names. For example, you can use Enterprise Example Organization and Startup Example Organization.\n\n\n\nMost phone numbers in our documentation are examples. To show an example phone number, use a US number in the range 800‑555‑0100 through 800‑555‑0199. That range is reserved for use in examples and in fiction.\nNever use a real phone number in examples.\nFor information about formatting, see Format phone numbers in HTML or Markdown.\n\n\n\nWhen you need an IPv4 address in an example, such as in a log, use one of the RFC 5737 addresses that are reserved for use in documentation:\n\n192.0.2.0 through 192.0.2.255\n198.51.100.0 through 198.51.100.255\n203.0.113.0 through 203.0.113.255\n\nFor IPv4 address ranges, use the following examples:\n\n192.0.2.0/24\n198.51.100.0/24\n203.0.113.0/24\n\nWhen you need an IPv6 address, use values from the RFC 3849 range. Example IPv6 addresses include the following:\n\n2001:db8::\n2001:db8:ffff:ffff:ffff:ffff:ffff:ffff\n2001:db8:1:1:1:1:1:1\n2001:db8:2:2:2:2:2:2\n2001:db8:3:3:3:3:3:3\n2001:db8:4:4:4:4:4:4\n\nFor IPv6 address ranges, use the following example:\n\n2001:db8::/32\n\n\n\n\nAvoid using real street addresses in examples. Instead, use one of the following fictional street addresses:\n\n1800 Amphibious Blvd.\nMountain View, CA 94045\nAvenida da Pastelaria, 1903\nLisbon, 1229-076\n8 Rue du Nom Fictif\n341 Paris\n\n\n\n\nWhen you need an example project name, create a name that’s meaningful or descriptive.\nEnsure that the name is applicable to the reader’s environment. Don’t use unclear components like foo, bar, and baz in names.\nWhen necessary, use an appended numbering scheme. For example, staging, frontend-development, backend-development, production-1, production-2.\n\n\n\nWhen you need a unique ID for a service account in an example, use the numeric ID 123456789012345678901.\n✅ Recommended: The allow policy shows the identifier deleted:serviceAccount:my-service-account@my-project.iam.gserviceaccount.com?uid=123456789012345678901.",
    "crumbs": [
      "Names and naming",
      "Example domains and names"
    ]
  },
  {
    "objectID": "content/en/naming/examples.html#example-domain-names",
    "href": "content/en/naming/examples.html#example-domain-names",
    "title": "Example domains and names",
    "section": "",
    "text": "When you need a generic domain name in an example, use example.com, example.org, or example.net. These domains are reserved by the Internet Assigned Numbers Authority for use in documentation.\nAlternatively, you can use any of the following domain names, which Google owns specifically for use in documentation:\n\naltostrat.com\nexamplepetstore.com\nexample-pet-store.com\nmyownpersonaldomain.com\nmy-own-personal-domain.com\ncymbalgroup.com\n\nIf you need an example domain name for an internationalized domain name, use one of the IDN Test TLDs and copy from the “URL of the test site” column.\n✅ Recommended: Hostnames that include non-ASCII characters are encoded using Punycode. For example, http://مثال.إختبار is encoded as xn--kgbechtv.",
    "crumbs": [
      "Names and naming",
      "Example domains and names"
    ]
  },
  {
    "objectID": "content/en/naming/examples.html#example-email-addresses",
    "href": "content/en/naming/examples.html#example-email-addresses",
    "title": "Example domains and names",
    "section": "",
    "text": "If you need a generic email address, use one of the domains listed in Example domain names and one of the names listed in Example person names—for example, dana@example.com. It’s OK to use generic addresses like support@example.net. Don’t use person names, product names, or made-up names in email addresses.",
    "crumbs": [
      "Names and naming",
      "Example domains and names"
    ]
  },
  {
    "objectID": "content/en/naming/examples.html#example-person-names",
    "href": "content/en/naming/examples.html#example-person-names",
    "title": "Example domains and names",
    "section": "",
    "text": "When you need to include example given names in your documentation, draw from the following list:\n\nAlex\nAmal\nAriel\nBola\nCharlie\nCruz\nDana\nDani\nHao\nIra\nIzumi\nJie\nKai\nKalani\nKim\nKiran\nLee\nLucian\nLuka\nMahan\nNoam\nNur\nQuinn\nRaha\nRosario\nSasha\nTal\nTaylor\nTristan\nYuri\n\n\n\nWhen you need to include example surnames in your documentation, use an initial after the given first name—for example, Quinn N. or Dana A.\n\n\n\nWhen you are writing about people, even fictitious or hypothetical people, it’s important to remember that your work will be read by real people whom we want to feel respected, valued, and welcomed.\nYour audience includes different kinds of people, including people with different jobs, cultural contexts, and backgrounds, so strive to include a variety of people in your examples as well.\nUse the gender-neutral singular pronouns they, their, and theirs whenever possible, and avoid specifying gender unless it is integral to the information you are communicating. Avoid examples that depend on a gender binary. However, if you do write an example that requires specifying gender, consider that some of the names on this list may imply a particular gender in a given language or culture, and check to ensure that any names you have chosen do not carry a conflicting gender connotation.\nBe mindful of assumptions and stereotypes that might be reinforced through hypothetical examples, such as:\n\nJob roles and levels, such as executive, that might be disproportionately assigned particular gendered personas.\nJob roles, such as developer or engineer, that might be disproportionately assigned particular ethnic personas.\n\nWe recommend using names from the preceding list in most documentation. Some security documentation uses the Alice and Bob cast of characters. Don’t use the Alice and Bob characters unless you’re writing documentation that refers to a technical specification that uses those characters. If you use the Alice and Bob characters in a document, use only names from that cast of characters.\nFor further guidance, see the section of this guide on writing inclusive documentation.",
    "crumbs": [
      "Names and naming",
      "Example domains and names"
    ]
  },
  {
    "objectID": "content/en/naming/examples.html#example-company-names",
    "href": "content/en/naming/examples.html#example-company-names",
    "title": "Example domains and names",
    "section": "",
    "text": "When you need a company name in an example, use Example Organization. If you need to differentiate between two different fictional companies, you can add a description to the company names. For example, you can use Enterprise Example Organization and Startup Example Organization.",
    "crumbs": [
      "Names and naming",
      "Example domains and names"
    ]
  },
  {
    "objectID": "content/en/naming/examples.html#example-phone-numbers",
    "href": "content/en/naming/examples.html#example-phone-numbers",
    "title": "Example domains and names",
    "section": "",
    "text": "Most phone numbers in our documentation are examples. To show an example phone number, use a US number in the range 800‑555‑0100 through 800‑555‑0199. That range is reserved for use in examples and in fiction.\nNever use a real phone number in examples.\nFor information about formatting, see Format phone numbers in HTML or Markdown.",
    "crumbs": [
      "Names and naming",
      "Example domains and names"
    ]
  },
  {
    "objectID": "content/en/naming/examples.html#example-ip-addresses",
    "href": "content/en/naming/examples.html#example-ip-addresses",
    "title": "Example domains and names",
    "section": "",
    "text": "When you need an IPv4 address in an example, such as in a log, use one of the RFC 5737 addresses that are reserved for use in documentation:\n\n192.0.2.0 through 192.0.2.255\n198.51.100.0 through 198.51.100.255\n203.0.113.0 through 203.0.113.255\n\nFor IPv4 address ranges, use the following examples:\n\n192.0.2.0/24\n198.51.100.0/24\n203.0.113.0/24\n\nWhen you need an IPv6 address, use values from the RFC 3849 range. Example IPv6 addresses include the following:\n\n2001:db8::\n2001:db8:ffff:ffff:ffff:ffff:ffff:ffff\n2001:db8:1:1:1:1:1:1\n2001:db8:2:2:2:2:2:2\n2001:db8:3:3:3:3:3:3\n2001:db8:4:4:4:4:4:4\n\nFor IPv6 address ranges, use the following example:\n\n2001:db8::/32",
    "crumbs": [
      "Names and naming",
      "Example domains and names"
    ]
  },
  {
    "objectID": "content/en/naming/examples.html#example-street-addresses",
    "href": "content/en/naming/examples.html#example-street-addresses",
    "title": "Example domains and names",
    "section": "",
    "text": "Avoid using real street addresses in examples. Instead, use one of the following fictional street addresses:\n\n1800 Amphibious Blvd.\nMountain View, CA 94045\nAvenida da Pastelaria, 1903\nLisbon, 1229-076\n8 Rue du Nom Fictif\n341 Paris",
    "crumbs": [
      "Names and naming",
      "Example domains and names"
    ]
  },
  {
    "objectID": "content/en/naming/examples.html#example-project-names",
    "href": "content/en/naming/examples.html#example-project-names",
    "title": "Example domains and names",
    "section": "",
    "text": "When you need an example project name, create a name that’s meaningful or descriptive.\nEnsure that the name is applicable to the reader’s environment. Don’t use unclear components like foo, bar, and baz in names.\nWhen necessary, use an appended numbering scheme. For example, staging, frontend-development, backend-development, production-1, production-2.",
    "crumbs": [
      "Names and naming",
      "Example domains and names"
    ]
  },
  {
    "objectID": "content/en/naming/examples.html#example-service-account-ids",
    "href": "content/en/naming/examples.html#example-service-account-ids",
    "title": "Example domains and names",
    "section": "",
    "text": "When you need a unique ID for a service account in an example, use the numeric ID 123456789012345678901.\n✅ Recommended: The allow policy shows the identifier deleted:serviceAccount:my-service-account@my-project.iam.gserviceaccount.com?uid=123456789012345678901.",
    "crumbs": [
      "Names and naming",
      "Example domains and names"
    ]
  },
  {
    "objectID": "content/en/grammar/plurals-parentheses.html",
    "href": "content/en/grammar/plurals-parentheses.html",
    "title": "Plurals in parentheses",
    "section": "",
    "text": "Plurals in parentheses\n\nSource: https://developers.google.com/style/plurals-parentheses\n\nDon’t put optional plurals in parentheses. Instead, use either plural or singular constructions and keep things consistent throughout your documentation. Choose what is most appropriate for your documentation and your audience. If it’s important in a specific context to indicate both, use one or more.\n\n\n\n\n\n\n\nRecommended\nNot recommended\n\n\n\n\nTo find your API key, visit the Credentials page.\nTo find your API key(s), visit the Credentials page.\n\n\nThe value of the parent depends on the values of its children.\nThe value of the parent depends on the value(s) of its child(ren).\n\n\nYou can use a physical linecard, which can contain one or more ports.\nYou can use a physical linecard, which can contain port(s).\n\n\n\n\n\n\n\n Back to top",
    "crumbs": [
      "Language and grammar",
      "Plurals in parentheses"
    ]
  },
  {
    "objectID": "content/en/grammar/contractions.html",
    "href": "content/en/grammar/contractions.html",
    "title": "Contractions",
    "section": "",
    "text": "Source: https://developers.google.com/style/contractions\n\nIn general, we write our documentation in an informal tone, so we recommend using common two-word contractions such as you’re, don’t, and there’s.\n\n\nIn particular, we recommend using negation contractions such as isn’t, don’t, and can’t. It’s easy for a reader to miss the word not when they’re scanning, whereas it’s harder to misread don’t as do.\nIf you need to emphasize the negative, you can use text formatting such as is&lt;em&gt;not&lt;/em&gt;, which renders as “is not.” But in most cases, you don’t need emphasis to make your point clear.\n\n\n\nDon’t make up nonstandard contractions such as guides’re or browser’s (where ’s means is).\nDon’t use three-word contractions such as mightn’t’ve.",
    "crumbs": [
      "Language and grammar",
      "Contractions"
    ]
  },
  {
    "objectID": "content/en/grammar/contractions.html#negation-contractions",
    "href": "content/en/grammar/contractions.html#negation-contractions",
    "title": "Contractions",
    "section": "",
    "text": "In particular, we recommend using negation contractions such as isn’t, don’t, and can’t. It’s easy for a reader to miss the word not when they’re scanning, whereas it’s harder to misread don’t as do.\nIf you need to emphasize the negative, you can use text formatting such as is&lt;em&gt;not&lt;/em&gt;, which renders as “is not.” But in most cases, you don’t need emphasis to make your point clear.",
    "crumbs": [
      "Language and grammar",
      "Contractions"
    ]
  },
  {
    "objectID": "content/en/grammar/contractions.html#contractions-to-avoid",
    "href": "content/en/grammar/contractions.html#contractions-to-avoid",
    "title": "Contractions",
    "section": "",
    "text": "Don’t make up nonstandard contractions such as guides’re or browser’s (where ’s means is).\nDon’t use three-word contractions such as mightn’t’ve.",
    "crumbs": [
      "Language and grammar",
      "Contractions"
    ]
  },
  {
    "objectID": "content/en/grammar/person.html",
    "href": "content/en/grammar/person.html",
    "title": "Second person and first person",
    "section": "",
    "text": "Source: https://developers.google.com/style/person\n\n\n\nIn general, address the reader of your documents using the second person instead of the first person: use you or your instead of we, our, or us. Assume that the reader is the person who’s doing the tasks or making the decisions. Use the word user only to refer to the user of the software that your reader is developing.\n\n\n\n\n\n\n\nRecommended\nNot recommended\n\n\n\n\nThe following sections describe how you can create a website.\nThe following sections describe how we can create a website.\n\n\nConsider adding a description to your table.\nLet’s add a description to our table.\n\n\nThis document shows you how to develop an app for your organization.\nThis document shows the user how to develop an app for their organization.\n\n\n\nIf you’re telling the reader to do something, then use the imperative (the you is implied). For example:\n\n✅ Recommended: Click Submit.\n\nIt’s OK to use the imperative in running text after you establish who is being addressed. However, consider whether the imperative text needs to be formatted as as a procedure.\n\n✅ Recommended: You can obtain the IP address for the appliance from your network administrator. Store the address in a variable for future use in the runbook.\n❌ Not recommended: To hold the backup data, create a storage bucket. In the Google Cloud console, go to the Buckets page. Click Create bucket.\n\nThere are some situations in which using you might not be accurate or appropriate. Use the second person to address what the reader does, but use the third person for what the software or an end user does. For example, in API documentation, you can use the third person when you state facts about programming elements, but address the reader as you when you tell them what to do with them.\n\n\n\nIt’s OK to use first-person plural pronouns (such as we, our, or us) to refer to the organization that’s represented as the author of the document. However, ensure that the antecedent for the pronoun is clear.\n\n✅ Recommended: Example Organization provides A and B, but we don’t provide C and D.\n✅ Recommended: For more information, contact our sales organization.\n✅ Recommended: The example.org support team regularly reviews tickets. Expect to hear from us in 2-3 business days.\n\n\n\n\nIt’s important to identify who the you is that you’re addressing (a developer? a sysadmin? someone else?) and to be consistent about that. Make it clear to the reader who you expect them to be (sometimes with an explicit audience sentence near the beginning of the document).",
    "crumbs": [
      "Language and grammar",
      "Second person"
    ]
  },
  {
    "objectID": "content/en/grammar/person.html#address-the-reader-as-you",
    "href": "content/en/grammar/person.html#address-the-reader-as-you",
    "title": "Second person and first person",
    "section": "",
    "text": "In general, address the reader of your documents using the second person instead of the first person: use you or your instead of we, our, or us. Assume that the reader is the person who’s doing the tasks or making the decisions. Use the word user only to refer to the user of the software that your reader is developing.\n\n\n\n\n\n\n\nRecommended\nNot recommended\n\n\n\n\nThe following sections describe how you can create a website.\nThe following sections describe how we can create a website.\n\n\nConsider adding a description to your table.\nLet’s add a description to our table.\n\n\nThis document shows you how to develop an app for your organization.\nThis document shows the user how to develop an app for their organization.\n\n\n\nIf you’re telling the reader to do something, then use the imperative (the you is implied). For example:\n\n✅ Recommended: Click Submit.\n\nIt’s OK to use the imperative in running text after you establish who is being addressed. However, consider whether the imperative text needs to be formatted as as a procedure.\n\n✅ Recommended: You can obtain the IP address for the appliance from your network administrator. Store the address in a variable for future use in the runbook.\n❌ Not recommended: To hold the backup data, create a storage bucket. In the Google Cloud console, go to the Buckets page. Click Create bucket.\n\nThere are some situations in which using you might not be accurate or appropriate. Use the second person to address what the reader does, but use the third person for what the software or an end user does. For example, in API documentation, you can use the third person when you state facts about programming elements, but address the reader as you when you tell them what to do with them.",
    "crumbs": [
      "Language and grammar",
      "Second person"
    ]
  },
  {
    "objectID": "content/en/grammar/person.html#use-first-person-plural-pronouns-carefully",
    "href": "content/en/grammar/person.html#use-first-person-plural-pronouns-carefully",
    "title": "Second person and first person",
    "section": "",
    "text": "It’s OK to use first-person plural pronouns (such as we, our, or us) to refer to the organization that’s represented as the author of the document. However, ensure that the antecedent for the pronoun is clear.\n\n✅ Recommended: Example Organization provides A and B, but we don’t provide C and D.\n✅ Recommended: For more information, contact our sales organization.\n✅ Recommended: The example.org support team regularly reviews tickets. Expect to hear from us in 2-3 business days.",
    "crumbs": [
      "Language and grammar",
      "Second person"
    ]
  },
  {
    "objectID": "content/en/grammar/person.html#address-your-audience-consistently",
    "href": "content/en/grammar/person.html#address-your-audience-consistently",
    "title": "Second person and first person",
    "section": "",
    "text": "It’s important to identify who the you is that you’re addressing (a developer? a sysadmin? someone else?) and to be consistent about that. Make it clear to the reader who you expect them to be (sometimes with an explicit audience sentence near the beginning of the document).",
    "crumbs": [
      "Language and grammar",
      "Second person"
    ]
  },
  {
    "objectID": "content/en/grammar/prepositions.html",
    "href": "content/en/grammar/prepositions.html",
    "title": "Prepositions",
    "section": "",
    "text": "Prepositions\n\nSource: https://developers.google.com/style/prepositions\n\nThere’s no rule against placing a preposition at the end of a sentence. Place the preposition where it makes the most sense and makes the sentence easiest to read. Use prepositions as needed, even at the ends of sentences.\n\n✅ Recommended: For details, see the client library documentation for the language you’re interacting with.\n❌ Not recommended: For details, see the client library documentation for the language with which you’re interacting.\n\nInclude prepositions that increase clarity, omit unnecessary prepositions, and don’t clutter the sentence with too many prepositions.\n\n✅ Recommended: The icon for the connector manager turns green within a few minutes, and the connector instance is displayed shortly after.\n\nFor information about which preposition to use when referring to UI elements, see UI elements and interaction.\n\n\n\n\n Back to top",
    "crumbs": [
      "Language and grammar",
      "Prepositions"
    ]
  },
  {
    "objectID": "content/en/grammar/abbreviations.html",
    "href": "content/en/grammar/abbreviations.html",
    "title": "Abbreviations",
    "section": "",
    "text": "Source: https://developers.google.com/style/abbreviations\n\nAbbreviations include acronyms, initialisms, shortened words, and contractions.\nIn most contexts, the technical distinction between acronyms and initialisms isn’t relevant; it’s fine to use the word acronym to refer to both.\n\nAn acronym is formed from the first letters of words in a phrase, but is pronounced as if it were a word itself:\n\nNATO for North Atlantic Treaty Organization\nscuba for self-contained underwater breathing apparatus\n\nAn initialism is also formed from the first letters of words in a phrase, but each letter is pronounced separately:\n\nCIA for Central Intelligence Agency\nFYI for For Your Information\nPR for Public Relations\n\nA shortened word is just part of a word or phrase, sometimes with a period at the end:\n\nDr. for doctor\netc. for et cetera\nmin for minutes\nCA for California\n\nContractions are discussed in a separate page of this style guide.\n\n\n\nSome words have a long version and a short version—for example:\n\napplication and app\ndemonstration and demo\nsynchronize and sync\n\nThe short versions of the words are not abbreviations, and if you use them, you don’t need to put a period after them.\nIf you’re not sure whether a word is an abbreviation or just a short version of a longer word, look in our list of resources. If that doesn’t settle the issue, use the speaking test: if you speak the short version as a word (This is a demo version of the product), you can usually treat it as a word and not an abbreviation.\n\n\n\nAbbreviations are intended to save the writer and the reader time. If the reader has to think about an abbreviation, it can slow down their reading comprehension.\n\n\n\nUse standard acronyms and initialisms that will save the reader time.\nSpell out abbreviations on first reference. For more information, see When to spell out a term.\nAvoid using abbreviations for terms that aren’t related to the main topic of the document.\n\nIn the following examples, the main topic of the document is the internet of things, so low Earth orbit should not be abbreviated.\n\n✅ Recommended: The internet of things (IoT) service can even be used for connecting to sensors in low Earth orbit.\n❌ Not recommended: The IoT (internet of things) service can even be used for connecting to sensors in LEO (low Earth orbit).\nBe wary of using specialized abbreviations that your readers might not understand. For more information about when to use such language, see Jargon.\n\n\n\n\n\nIn general, when an abbreviation is likely to be unfamiliar to the audience, spell it out upon first mention and include the abbreviation in parentheses immediately following. Italicize both the spelled-out term and its abbreviation.\n\n✅ Recommended: Border Gateway Protocol (BGP)\n❌ Not recommended: Border Gateway Protocol (BGP)\n\nFor all subsequent mentions of the abbreviation, use the abbreviation by itself. If you use an abbreviation only once, include it only if you think the abbreviation is as commonly used as the spelled-out term. Otherwise, don’t include the abbreviation.\nCapitalize the spelled-out version of the abbreviation only if the long form is a proper noun or is conventionally capitalized. That is, don’t capitalize it only because the abbreviation includes capital letters.\nIf the first mention of a term occurs in a heading or title, you can use the abbreviation and then spell out the abbreviation in the first paragraph that follows the heading or title.\nWhen deciding to spell out a term, consider your audience. If your document is going to be translated, spelling out a term can provide important context for both human and machine translation. It can also be helpful for readers who aren’t as familiar with English. If the majority of your audience is likely to recognize and understand the term, then you don’t need to spell it out. For example, if you’re writing documentation for developers that references an API, you don’t need to spell out application programming interface. However, if you’re explaining the general concept of an API to someone with no programming experience, spelling out the abbreviation can be helpful.\nIn some cases, spelling out a term doesn’t help the reader understand the term. For example, writing out portable document format doesn’t help the reader understand what a PDF document is. In those cases, don’t spell out the term.\nThe following abbreviations rarely need to be spelled out:\n\nAI\nAPI\nDVD\nFile formats such as PDF or XML\nHTML\nPC\nRAM\nREST\nUnits of measurement such as MB, MiB, GB, or GiB\nURL\nUSB\n\n\n\n\nDon’t use i.e. or e.g.; instead, use that is or for example, respectively. For more information, see e.g. and i.e.\nIt’s okay to use etc. in some circumstances, but it’s best to use different phrasing in most lists. For more information, see Comma-separated lists.\nDon’t use internet slang abbreviations such as tl;dr, ymmv, RTFM, or others. Write out what you mean in a non-figurative way.\nUse the most common form of a word. If the spelled-out word is common and easily understandable, use that rather than abbreviating. For example, write approximately instead of approx.\nSpell out shortened words or common symbols that are substitutions for words.\n\n✅ Recommended: Updating the software made throughput 10 times faster.\n❌ Not recommended: Updating the software made throughput 10x faster.\n\n\n\n\nFollow these guidelines:\n\nDon’t use periods with acronyms or initialisms.\nPut a period at the end of a shortened word, except for date and time abbreviations.\nIf you write or say an abbreviation as a word (for example, app or sync), don’t put a period after it.\nDon’t use a period with an abbreviation for the name of a country, US state, or the District of Columbia (DC).\n\n\n\n\nIn general, treat acronyms, initialisms, and other abbreviations as regular words when making them plural—for example, APIs, SKEs, and IDEs.\nIf the acronym, initialism, or abbreviation ends in s, sh, ch, or x, then add es—for example, OSes, DISHes, DCCHes, and BMXes.\n\n\n\nDon’t use acronyms, initialisms, or shortened words as verbs.\n\n✅ Recommended: Use SSH to log in to your remote shell.\n❌ Not recommended: Then ssh into your remote shell.\n\n\n\n\nWhether to use a or an before a term depends on the pronunciation of the term: use a before any consonant sound and an before any vowel sound. Pronunciation of abbreviations can vary, so in general, base your decision on the pronunciation that’s most common for your audience.\nIn particular, our word list includes preferences for “a SQL”, “a FHIR”, and “an SAP”.\nFor more information about articles, see Articles.",
    "crumbs": [
      "Language and grammar",
      "Abbreviations"
    ]
  },
  {
    "objectID": "content/en/grammar/abbreviations.html#long-and-short-versions-of-a-word",
    "href": "content/en/grammar/abbreviations.html#long-and-short-versions-of-a-word",
    "title": "Abbreviations",
    "section": "",
    "text": "Some words have a long version and a short version—for example:\n\napplication and app\ndemonstration and demo\nsynchronize and sync\n\nThe short versions of the words are not abbreviations, and if you use them, you don’t need to put a period after them.\nIf you’re not sure whether a word is an abbreviation or just a short version of a longer word, look in our list of resources. If that doesn’t settle the issue, use the speaking test: if you speak the short version as a word (This is a demo version of the product), you can usually treat it as a word and not an abbreviation.",
    "crumbs": [
      "Language and grammar",
      "Abbreviations"
    ]
  },
  {
    "objectID": "content/en/grammar/abbreviations.html#when-to-use-abbreviations",
    "href": "content/en/grammar/abbreviations.html#when-to-use-abbreviations",
    "title": "Abbreviations",
    "section": "",
    "text": "Abbreviations are intended to save the writer and the reader time. If the reader has to think about an abbreviation, it can slow down their reading comprehension.\n\n\n\nUse standard acronyms and initialisms that will save the reader time.\nSpell out abbreviations on first reference. For more information, see When to spell out a term.\nAvoid using abbreviations for terms that aren’t related to the main topic of the document.\n\nIn the following examples, the main topic of the document is the internet of things, so low Earth orbit should not be abbreviated.\n\n✅ Recommended: The internet of things (IoT) service can even be used for connecting to sensors in low Earth orbit.\n❌ Not recommended: The IoT (internet of things) service can even be used for connecting to sensors in LEO (low Earth orbit).\nBe wary of using specialized abbreviations that your readers might not understand. For more information about when to use such language, see Jargon.",
    "crumbs": [
      "Language and grammar",
      "Abbreviations"
    ]
  },
  {
    "objectID": "content/en/grammar/abbreviations.html#when-to-spell-out-a-term",
    "href": "content/en/grammar/abbreviations.html#when-to-spell-out-a-term",
    "title": "Abbreviations",
    "section": "",
    "text": "In general, when an abbreviation is likely to be unfamiliar to the audience, spell it out upon first mention and include the abbreviation in parentheses immediately following. Italicize both the spelled-out term and its abbreviation.\n\n✅ Recommended: Border Gateway Protocol (BGP)\n❌ Not recommended: Border Gateway Protocol (BGP)\n\nFor all subsequent mentions of the abbreviation, use the abbreviation by itself. If you use an abbreviation only once, include it only if you think the abbreviation is as commonly used as the spelled-out term. Otherwise, don’t include the abbreviation.\nCapitalize the spelled-out version of the abbreviation only if the long form is a proper noun or is conventionally capitalized. That is, don’t capitalize it only because the abbreviation includes capital letters.\nIf the first mention of a term occurs in a heading or title, you can use the abbreviation and then spell out the abbreviation in the first paragraph that follows the heading or title.\nWhen deciding to spell out a term, consider your audience. If your document is going to be translated, spelling out a term can provide important context for both human and machine translation. It can also be helpful for readers who aren’t as familiar with English. If the majority of your audience is likely to recognize and understand the term, then you don’t need to spell it out. For example, if you’re writing documentation for developers that references an API, you don’t need to spell out application programming interface. However, if you’re explaining the general concept of an API to someone with no programming experience, spelling out the abbreviation can be helpful.\nIn some cases, spelling out a term doesn’t help the reader understand the term. For example, writing out portable document format doesn’t help the reader understand what a PDF document is. In those cases, don’t spell out the term.\nThe following abbreviations rarely need to be spelled out:\n\nAI\nAPI\nDVD\nFile formats such as PDF or XML\nHTML\nPC\nRAM\nREST\nUnits of measurement such as MB, MiB, GB, or GiB\nURL\nUSB",
    "crumbs": [
      "Language and grammar",
      "Abbreviations"
    ]
  },
  {
    "objectID": "content/en/grammar/abbreviations.html#abbreviations-not-to-use",
    "href": "content/en/grammar/abbreviations.html#abbreviations-not-to-use",
    "title": "Abbreviations",
    "section": "",
    "text": "Don’t use i.e. or e.g.; instead, use that is or for example, respectively. For more information, see e.g. and i.e.\nIt’s okay to use etc. in some circumstances, but it’s best to use different phrasing in most lists. For more information, see Comma-separated lists.\nDon’t use internet slang abbreviations such as tl;dr, ymmv, RTFM, or others. Write out what you mean in a non-figurative way.\nUse the most common form of a word. If the spelled-out word is common and easily understandable, use that rather than abbreviating. For example, write approximately instead of approx.\nSpell out shortened words or common symbols that are substitutions for words.\n\n✅ Recommended: Updating the software made throughput 10 times faster.\n❌ Not recommended: Updating the software made throughput 10x faster.",
    "crumbs": [
      "Language and grammar",
      "Abbreviations"
    ]
  },
  {
    "objectID": "content/en/grammar/abbreviations.html#periods-with-abbreviations",
    "href": "content/en/grammar/abbreviations.html#periods-with-abbreviations",
    "title": "Abbreviations",
    "section": "",
    "text": "Follow these guidelines:\n\nDon’t use periods with acronyms or initialisms.\nPut a period at the end of a shortened word, except for date and time abbreviations.\nIf you write or say an abbreviation as a word (for example, app or sync), don’t put a period after it.\nDon’t use a period with an abbreviation for the name of a country, US state, or the District of Columbia (DC).",
    "crumbs": [
      "Language and grammar",
      "Abbreviations"
    ]
  },
  {
    "objectID": "content/en/grammar/abbreviations.html#make-abbreviations-plural",
    "href": "content/en/grammar/abbreviations.html#make-abbreviations-plural",
    "title": "Abbreviations",
    "section": "",
    "text": "In general, treat acronyms, initialisms, and other abbreviations as regular words when making them plural—for example, APIs, SKEs, and IDEs.\nIf the acronym, initialism, or abbreviation ends in s, sh, ch, or x, then add es—for example, OSes, DISHes, DCCHes, and BMXes.",
    "crumbs": [
      "Language and grammar",
      "Abbreviations"
    ]
  },
  {
    "objectID": "content/en/grammar/abbreviations.html#abbreviations-as-verbs",
    "href": "content/en/grammar/abbreviations.html#abbreviations-as-verbs",
    "title": "Abbreviations",
    "section": "",
    "text": "Don’t use acronyms, initialisms, or shortened words as verbs.\n\n✅ Recommended: Use SSH to log in to your remote shell.\n❌ Not recommended: Then ssh into your remote shell.",
    "crumbs": [
      "Language and grammar",
      "Abbreviations"
    ]
  },
  {
    "objectID": "content/en/grammar/abbreviations.html#indefinite-articles-before-abbreviations",
    "href": "content/en/grammar/abbreviations.html#indefinite-articles-before-abbreviations",
    "title": "Abbreviations",
    "section": "",
    "text": "Whether to use a or an before a term depends on the pronunciation of the term: use a before any consonant sound and an before any vowel sound. Pronunciation of abbreviations can vary, so in general, base your decision on the pronunciation that’s most common for your audience.\nIn particular, our word list includes preferences for “a SQL”, “a FHIR”, and “an SAP”.\nFor more information about articles, see Articles.",
    "crumbs": [
      "Language and grammar",
      "Abbreviations"
    ]
  },
  {
    "objectID": "content/en/grammar/tense.html",
    "href": "content/en/grammar/tense.html",
    "title": "Present tense",
    "section": "",
    "text": "Present tense\n\nSource: https://developers.google.com/style/tense\n\nUse present tense for statements that describe general behavior that’s not associated with a particular time.\n\n✅ Recommended: Send a query to the service. The server sends an acknowledgment.\n❌ Not recommended: Send a query to the service. The server will send an acknowledgment.\n\nHowever, it’s fine to use future tense (will) to distinguish an action that will occur in the future.\n\n✅ Recommended: Add the filename to the backup list. The file will be archived the next time the backup process runs.\n\nIn the following example, future tense is appropriate because Pub/Sub sends messages asynchronously; messages are not received immediately by subscribers.\n\n✅ Recommended: A message is sent that will notify any Pub/Sub subscribers.\n❌ Not recommended: A message is sent that notifies any Pub/Sub subscribers.\n\nDon’t use future tense to describe how a product or feature will work after the next release or update. For more information, see Document future features.\nAlso avoid the hypothetical future would—for example:\n\n✅ Recommended: If you send an unsubscribe message, the server removes you from the mailing list.\n❌ Not recommended: You can send an unsubscribe message. The server would then remove you from the mailing list.\n\n\n\n\n\n Back to top",
    "crumbs": [
      "Language and grammar",
      "Present tense"
    ]
  },
  {
    "objectID": "content/en/grammar/possessives.html",
    "href": "content/en/grammar/possessives.html",
    "title": "Possessives",
    "section": "",
    "text": "Source: https://developers.google.com/style/possessives\n\nIn general, to form a possessive, follow these guidelines.\nFor singular nouns, including those that end in s, add ’s to the end of the word.\n\n✅ Recommended: Modify each vector’s record.\n✅ Recommended: Raise the storage class’s quota.\n\nFor plural nouns that end in s, add only an apostrophe to the end of the word.\n\n✅ Recommended: Extend the models’ capabilities.\n❌ Not recommended: Extend the models’s capabilities.\n\nFor plural nouns that don’t end in s, add ’s to the end of the word.\nIf a possessive seems awkward, rewrite the sentence to omit the possessive.\n\n✅ Recommended: Analyze the business data.\n❌ Not recommended: Analyze the businesses’ data.\n✅ Recommended: The rule that the Federal Trade Commission (FTC) issued.\n❌ Not recommended: The Federal Trade Commission’s (FTC’s) rule.\n\n\n\nWhen describing function or performance, don’t form a possessive from a feature name, product name, or trademark, regardless of who owns it. Instead, use the name as a modifier or rewrite to use a word like of to indicate the relationship.\n\n✅ Recommended: You can use this template to monitor Google Search performance.\n✅ Recommended: You can use this template to monitor the performance of Google Search.\n❌ Not recommended: You can use this template to monitor Google Search’s performance.\n\nTo form the possessive of a company name, add ’s to the end of the name. Don’t form the possessive of a company name when using it as a trademark.\n\n✅ Recommended: Google’s new office is nearby.\n❌ Not recommended: The capabilities of Google’s Search are vast.\n\nFor information about using trademarks as adjectives, not nouns, see Trademarks.\n\n\n\nDon’t form the possessive of a code item. Instead, form the possessive from the noun that follows the code item or rewrite to avoid the possessive form.\n\n✅ Recommended: Compare the number to the wordCount method’s return value.\n✅ Recommended: Compare the number to the value returned by the wordCount method.\n❌ Not recommended: Compare the number to wordCount’s return value.\n\nFor more information, see Grammatical treatment of code elements.",
    "crumbs": [
      "Language and grammar",
      "Possessives"
    ]
  },
  {
    "objectID": "content/en/grammar/possessives.html#product-feature-and-company-names",
    "href": "content/en/grammar/possessives.html#product-feature-and-company-names",
    "title": "Possessives",
    "section": "",
    "text": "When describing function or performance, don’t form a possessive from a feature name, product name, or trademark, regardless of who owns it. Instead, use the name as a modifier or rewrite to use a word like of to indicate the relationship.\n\n✅ Recommended: You can use this template to monitor Google Search performance.\n✅ Recommended: You can use this template to monitor the performance of Google Search.\n❌ Not recommended: You can use this template to monitor Google Search’s performance.\n\nTo form the possessive of a company name, add ’s to the end of the name. Don’t form the possessive of a company name when using it as a trademark.\n\n✅ Recommended: Google’s new office is nearby.\n❌ Not recommended: The capabilities of Google’s Search are vast.\n\nFor information about using trademarks as adjectives, not nouns, see Trademarks.",
    "crumbs": [
      "Language and grammar",
      "Possessives"
    ]
  },
  {
    "objectID": "content/en/grammar/possessives.html#code-items",
    "href": "content/en/grammar/possessives.html#code-items",
    "title": "Possessives",
    "section": "",
    "text": "Don’t form the possessive of a code item. Instead, form the possessive from the noun that follows the code item or rewrite to avoid the possessive form.\n\n✅ Recommended: Compare the number to the wordCount method’s return value.\n✅ Recommended: Compare the number to the value returned by the wordCount method.\n❌ Not recommended: Compare the number to wordCount’s return value.\n\nFor more information, see Grammatical treatment of code elements.",
    "crumbs": [
      "Language and grammar",
      "Possessives"
    ]
  },
  {
    "objectID": "content/en/linking/cross-references.html",
    "href": "content/en/linking/cross-references.html",
    "title": "Cross-references and linking",
    "section": "",
    "text": "Source: https://developers.google.com/style/cross-references\n\nWhen used well, cross-references help readers navigate and understand documentation. But cross-references can easily become disruptive. The guidelines on this page help you to minimize disruption while providing cross-references that help your readers.\n\n\nBe selective about which links you include on a page. Each link creates a decision for the reader, adding cognitive load. Each link is also a chance for the reader to leave the page and lose their place. When you include links, choose the most relevant destination.\n\n\nWhen possible, provide help in context rather than linking elsewhere. For example, in the following situations, consider providing information on the page instead of linking:\n\nDefine a term.\nBriefly explain a concept.\nProvide a couple of steps.\n\nAs a specific example, if you need readers to understand another product’s software or standards, it’s better to link to good documentation elsewhere than to try to thoroughly document another product’s standards in our documentation. But if a few sentences of basic information is all your readers need, then it’s better to provide that context and save your readers the trip outside of our documentation.\n\n\n\nGenerally, within a given page, don’t provide duplicate links to the same destination. Provide the link once in the location where it’s most useful to the reader.\nIt’s OK to add a secondary link in situations such as the following:\n\nYou’re linking to a particular section of another page.\nYour page is very long and the duplicate links are far apart.\nThere are multiple entry points to the document that you’re linking from. For example, if a page contains a procedure section and a troubleshooting section, then you might need to provide the same link in both of those sections.\n\n\n\n\nWhen you link, link to the most relevant page on a site. Link to the most relevant heading on a page. Avoid providing multiple links that do the same job.\n\n\n\nOur documentation often relies on the reader knowing something about third-party standards or software. In such cases, it’s better to provide a link rather than attempt to thoroughly document someone else’s standards. But as with all links, when possible, provide brief information on the page instead of linking.\n\n\n\n\nFor the link text itself, use short, unique, descriptive phrases that provide context for the material that you’re linking to.\nEffective link text helps to improve accessibility and scannability. Different readers experience links differently. For example, users of screen reader software often jump from one link to the next without reading the words in between. Other readers visually scan a document to find relevant links.\nSometimes you have to rework a sentence to include a phrase that makes good link text.\n\n\nFor your link text, use either the exact page title or a descriptive phrase, as described in the following sections.\n\n\nOne option for effective link text is to match the link text to the page title or heading that you’re referencing.\nFor more information about how to capitalize the page title in a cross-reference, see Capitalization in references to titles and headings.\n\n✅ Recommended: For more information, see Load balancing and scaling.\n\n\n\n\nAnother option for effective link text is to use a description of the destination page, capitalized as if it’s part of the sentence.\nWhen you write a descriptive phrase as link text, help readers quickly determine whether the link is relevant to them:\n\nPlace important words at the beginning of the link text.\nDon’t use the same link text in the same document for different target pages.\nKeep link text short where possible. Don’t write lengthy link text such as a sentence or short paragraph.\n✅ Recommended: You can use Cloud Scheduler and Cloud Functions to manage task scheduling on Compute Engine.\n❌ Not recommended: See this blog post.\n\n\n\n\n\nWrite link text that makes sense without the surrounding text. Don’t use phrases such as this document, this article, or click here.\n\n✅ Recommended: For more information, see Make headings into link targets.\n❌ Not recommended: Want more? Click here!\n❌ Not recommended: For more information, see this document.\n\n\n\n\nIn general, don’t use a URL as link text. Instead, use the page title or a description of the page.\n✅ Recommended:\n\nFor more information about protocols, see HTTP/1.1 RFC.\n\n❌ Not recommended:\n\nSee the HTTP/1.1 RFC at http://www.w3.org/Protocols/rfc2616/rfc2616.html.\n\nException: In some legal documents (such as some Terms of Service documents), it’s okay to use URLs as link text.\n\n\n\nIf the text includes an abbreviation in parentheses, include the long form and the abbreviation in the link text.\n\n✅ Recommended: Google Kubernetes Engine (GKE)\n❌ Not recommended: Google Kubernetes Engine (GKE)\n\n\n\n\nIf the text includes a command or another element usually conveyed with code font, include the description of the code element with the link text, unless doing so is awkward or redundant. For more information about elements that appear in code font, see Code in text.\n\n✅ Recommended: To create an instance with a custom hostname, run the gcloud instances create command with the --hostname flag.\n❌ Not recommended: To create an instance with a custom hostname, run the gcloud instances create command with the --hostname flag.\n✅ Recommended: This service supports the GET, HEAD, and OPTIONS methods.\n❌ Not recommended: This service supports the GET method, HEAD method, and OPTIONS method.\n\n\n\n\n\nWhen you dedicate a separate sentence to a cross-reference, introduce the cross-reference using consistent language—specifically, use the phrase “For more information, see…” or “For more information about…, see… .”\nInclude the “about…” clause when the link text or surrounding context doesn’t clearly indicate why you’re referring the reader to this information. For more information, see the Clarify the purpose of a link section of this document.\nDon’t use on instead of about.\nUse see to refer to links and cross-references. For more information, see see.\n\n✅ Recommended: For more information, see Load balancing and scaling.\n✅ Recommended: For more information about task scheduling, see Reliable task scheduling on Google Compute Engine.\n❌ Not recommended: For more information on indexes, see Manage indexes.\n\n\n\n\nMake sure that the surrounding context or the link text itself clearly indicates why you’re referring the reader to this information. Make the explanation specific, but don’t repeat the link text.\nIf you’re introducing a cross-reference with “For more information…” phrasing, then you can do this by adding an “about…” phrase. For more information, see the Write link introductions section of this document.\n\n✅ Recommended: For more information about authentication and authorization, see Using OAuth 2.0 to access Google APIs.\n✅ Recommended: If your sample dump file is in a CSV, Avro, or Parquet file format, then load the file to BigQuery and copy to Spanner using reverse ETL.\n\n\n\n\nIf a link goes to an unexpected destination or behaves in an unexpected way, then provide that context. The following are a few such situations:\n\nLinks that download files and open emails. If a link downloads a file or opens an email, then make that clear in the link text, and mention the file type.\n\n✅ Recommended: For more information, download the security features PDF.\n✅ Recommended: send email to Technical Support\n\nLinks to sections on the same page. When you’re linking to another section on the same page, let the reader know that the link takes you to a different section of the same page. Use a standard phrase to clue readers in if you use an on-page link.\n\n✅ Recommended: For more information, see the Write descriptive link text section of this document.\n\nLinks to sections on another page. When you’re linking to a section heading on another page, use the same wording and formatting as you do in a regular cross-reference.\nIf the title of the section that you’re linking to is identical to a title on the source page, add context to the cross-reference.\n\n✅ Recommended: For more information, see Create a table.\n✅ Recommended: For more information, see Install libraries in “Building new audiences based on existing customer lifetime value.”\n\nLinks that open in a new tab. For more information, see the Open links in the current tab section of this document.\nLinks that go to a different domain or server. For more information, see the Don’t use external link icons section of this document.\n\n\n\n\nDon’t force links to open in a new tab or window. Let the reader decide how to open links.\nIn the rare situation that a link needs to open in a new tab or window, let the reader know that the link opens differently than expected.\n\n✅ Recommended: Accessible content\n✅ Recommended: Accessible content (opens in a new tab)\n❌ Not recommended: Accessible content\n\n\n\n\nDon’t use an external link icon to indicate that the link goes to a different domain or server. If you think it’s important to inform the reader that they’re leaving a Google domain, mention it in the text and don’t rely on an icon.\n\n✅ Recommended: For more information, see OS-level virtualization.\n\nSometimes OK: For more information, see the Wikipedia page about OS-level virtualization.\n\n❌ Not recommended: For more information, see OS-level virtualization.\n\n\n\n\nIf you have punctuation immediately before or after a link, put the punctuation outside of the link tags where possible.\n\n✅ Recommended: For more information, see Test your code.\n❌ Not recommended: For more information, see Test your code.\n\n\n\n\nWhen a cross-reference is a link, don’t put the link text in quotation marks.\n\n✅ Recommended: For more information, see Meet Android Studio.\n✅ Recommended: Learn about what’s new in Android Wear 2.0.\n❌ Not recommended: For more information, see “Meet Android Studio”.\n\nIn the rare case when a cross-reference isn’t a link, use italics or quotation marks as appropriate.\n\nFor an unlinked reference to a document section, short work, or part of a series—such as an episode in a web series—use quotation marks.\n\n✅ Recommended: For more information, see “Describing system versions” in the following section.\n\nFor an unlinked reference to the title of a full-length work—such as a book, movie, or web series—use italics.\n\n✅ Recommended: …see The Chicago Manual of Style.\n\n\n\n\n\nIn a documentation set’s navigation, such as a table of contents, we recommend against linking outside of the documentation set. Instead, include the link in a page within the documentation.\nIf you need to link outside of your documentation set from your navigation, then make sure it’s clear to the reader that they’ll be leaving that document set.\n\n\n\nIf you write sitewide CSS for your website, apply standard styling to link text. This helps readers find links in your content.\n\nContrast link text color and regular text color. To help readers see links, link text should be distinguishable from the rest of the text on the page.\nUnderline link text, and don’t underline non-link text. When readers scan a page, a horizontal line cuts through the vertical line of scanning and helps readers find links.\nMake visited links change color. Use color-blind-friendly color changes to help readers differentiate links that they’ve followed against links that they haven’t followed. This helps readers navigate your site effectively without revisiting content that they’ve already read.",
    "crumbs": [
      "Linking",
      "Cross-references and linking"
    ]
  },
  {
    "objectID": "content/en/linking/cross-references.html#choose-links-selectively",
    "href": "content/en/linking/cross-references.html#choose-links-selectively",
    "title": "Cross-references and linking",
    "section": "",
    "text": "Be selective about which links you include on a page. Each link creates a decision for the reader, adding cognitive load. Each link is also a chance for the reader to leave the page and lose their place. When you include links, choose the most relevant destination.\n\n\nWhen possible, provide help in context rather than linking elsewhere. For example, in the following situations, consider providing information on the page instead of linking:\n\nDefine a term.\nBriefly explain a concept.\nProvide a couple of steps.\n\nAs a specific example, if you need readers to understand another product’s software or standards, it’s better to link to good documentation elsewhere than to try to thoroughly document another product’s standards in our documentation. But if a few sentences of basic information is all your readers need, then it’s better to provide that context and save your readers the trip outside of our documentation.\n\n\n\nGenerally, within a given page, don’t provide duplicate links to the same destination. Provide the link once in the location where it’s most useful to the reader.\nIt’s OK to add a secondary link in situations such as the following:\n\nYou’re linking to a particular section of another page.\nYour page is very long and the duplicate links are far apart.\nThere are multiple entry points to the document that you’re linking from. For example, if a page contains a procedure section and a troubleshooting section, then you might need to provide the same link in both of those sections.\n\n\n\n\nWhen you link, link to the most relevant page on a site. Link to the most relevant heading on a page. Avoid providing multiple links that do the same job.\n\n\n\nOur documentation often relies on the reader knowing something about third-party standards or software. In such cases, it’s better to provide a link rather than attempt to thoroughly document someone else’s standards. But as with all links, when possible, provide brief information on the page instead of linking.",
    "crumbs": [
      "Linking",
      "Cross-references and linking"
    ]
  },
  {
    "objectID": "content/en/linking/cross-references.html#write-descriptive-link-text",
    "href": "content/en/linking/cross-references.html#write-descriptive-link-text",
    "title": "Cross-references and linking",
    "section": "",
    "text": "For the link text itself, use short, unique, descriptive phrases that provide context for the material that you’re linking to.\nEffective link text helps to improve accessibility and scannability. Different readers experience links differently. For example, users of screen reader software often jump from one link to the next without reading the words in between. Other readers visually scan a document to find relevant links.\nSometimes you have to rework a sentence to include a phrase that makes good link text.\n\n\nFor your link text, use either the exact page title or a descriptive phrase, as described in the following sections.\n\n\nOne option for effective link text is to match the link text to the page title or heading that you’re referencing.\nFor more information about how to capitalize the page title in a cross-reference, see Capitalization in references to titles and headings.\n\n✅ Recommended: For more information, see Load balancing and scaling.\n\n\n\n\nAnother option for effective link text is to use a description of the destination page, capitalized as if it’s part of the sentence.\nWhen you write a descriptive phrase as link text, help readers quickly determine whether the link is relevant to them:\n\nPlace important words at the beginning of the link text.\nDon’t use the same link text in the same document for different target pages.\nKeep link text short where possible. Don’t write lengthy link text such as a sentence or short paragraph.\n✅ Recommended: You can use Cloud Scheduler and Cloud Functions to manage task scheduling on Compute Engine.\n❌ Not recommended: See this blog post.\n\n\n\n\n\nWrite link text that makes sense without the surrounding text. Don’t use phrases such as this document, this article, or click here.\n\n✅ Recommended: For more information, see Make headings into link targets.\n❌ Not recommended: Want more? Click here!\n❌ Not recommended: For more information, see this document.\n\n\n\n\nIn general, don’t use a URL as link text. Instead, use the page title or a description of the page.\n✅ Recommended:\n\nFor more information about protocols, see HTTP/1.1 RFC.\n\n❌ Not recommended:\n\nSee the HTTP/1.1 RFC at http://www.w3.org/Protocols/rfc2616/rfc2616.html.\n\nException: In some legal documents (such as some Terms of Service documents), it’s okay to use URLs as link text.\n\n\n\nIf the text includes an abbreviation in parentheses, include the long form and the abbreviation in the link text.\n\n✅ Recommended: Google Kubernetes Engine (GKE)\n❌ Not recommended: Google Kubernetes Engine (GKE)\n\n\n\n\nIf the text includes a command or another element usually conveyed with code font, include the description of the code element with the link text, unless doing so is awkward or redundant. For more information about elements that appear in code font, see Code in text.\n\n✅ Recommended: To create an instance with a custom hostname, run the gcloud instances create command with the --hostname flag.\n❌ Not recommended: To create an instance with a custom hostname, run the gcloud instances create command with the --hostname flag.\n✅ Recommended: This service supports the GET, HEAD, and OPTIONS methods.\n❌ Not recommended: This service supports the GET method, HEAD method, and OPTIONS method.",
    "crumbs": [
      "Linking",
      "Cross-references and linking"
    ]
  },
  {
    "objectID": "content/en/linking/cross-references.html#write-link-introductions-for-more-information",
    "href": "content/en/linking/cross-references.html#write-link-introductions-for-more-information",
    "title": "Cross-references and linking",
    "section": "",
    "text": "When you dedicate a separate sentence to a cross-reference, introduce the cross-reference using consistent language—specifically, use the phrase “For more information, see…” or “For more information about…, see… .”\nInclude the “about…” clause when the link text or surrounding context doesn’t clearly indicate why you’re referring the reader to this information. For more information, see the Clarify the purpose of a link section of this document.\nDon’t use on instead of about.\nUse see to refer to links and cross-references. For more information, see see.\n\n✅ Recommended: For more information, see Load balancing and scaling.\n✅ Recommended: For more information about task scheduling, see Reliable task scheduling on Google Compute Engine.\n❌ Not recommended: For more information on indexes, see Manage indexes.",
    "crumbs": [
      "Linking",
      "Cross-references and linking"
    ]
  },
  {
    "objectID": "content/en/linking/cross-references.html#clarify-the-purpose-of-a-link",
    "href": "content/en/linking/cross-references.html#clarify-the-purpose-of-a-link",
    "title": "Cross-references and linking",
    "section": "",
    "text": "Make sure that the surrounding context or the link text itself clearly indicates why you’re referring the reader to this information. Make the explanation specific, but don’t repeat the link text.\nIf you’re introducing a cross-reference with “For more information…” phrasing, then you can do this by adding an “about…” phrase. For more information, see the Write link introductions section of this document.\n\n✅ Recommended: For more information about authentication and authorization, see Using OAuth 2.0 to access Google APIs.\n✅ Recommended: If your sample dump file is in a CSV, Avro, or Parquet file format, then load the file to BigQuery and copy to Spanner using reverse ETL.",
    "crumbs": [
      "Linking",
      "Cross-references and linking"
    ]
  },
  {
    "objectID": "content/en/linking/cross-references.html#explain-unexpected-link-behavior",
    "href": "content/en/linking/cross-references.html#explain-unexpected-link-behavior",
    "title": "Cross-references and linking",
    "section": "",
    "text": "If a link goes to an unexpected destination or behaves in an unexpected way, then provide that context. The following are a few such situations:\n\nLinks that download files and open emails. If a link downloads a file or opens an email, then make that clear in the link text, and mention the file type.\n\n✅ Recommended: For more information, download the security features PDF.\n✅ Recommended: send email to Technical Support\n\nLinks to sections on the same page. When you’re linking to another section on the same page, let the reader know that the link takes you to a different section of the same page. Use a standard phrase to clue readers in if you use an on-page link.\n\n✅ Recommended: For more information, see the Write descriptive link text section of this document.\n\nLinks to sections on another page. When you’re linking to a section heading on another page, use the same wording and formatting as you do in a regular cross-reference.\nIf the title of the section that you’re linking to is identical to a title on the source page, add context to the cross-reference.\n\n✅ Recommended: For more information, see Create a table.\n✅ Recommended: For more information, see Install libraries in “Building new audiences based on existing customer lifetime value.”\n\nLinks that open in a new tab. For more information, see the Open links in the current tab section of this document.\nLinks that go to a different domain or server. For more information, see the Don’t use external link icons section of this document.",
    "crumbs": [
      "Linking",
      "Cross-references and linking"
    ]
  },
  {
    "objectID": "content/en/linking/cross-references.html#open-links-in-the-current-tab",
    "href": "content/en/linking/cross-references.html#open-links-in-the-current-tab",
    "title": "Cross-references and linking",
    "section": "",
    "text": "Don’t force links to open in a new tab or window. Let the reader decide how to open links.\nIn the rare situation that a link needs to open in a new tab or window, let the reader know that the link opens differently than expected.\n\n✅ Recommended: Accessible content\n✅ Recommended: Accessible content (opens in a new tab)\n❌ Not recommended: Accessible content",
    "crumbs": [
      "Linking",
      "Cross-references and linking"
    ]
  },
  {
    "objectID": "content/en/linking/cross-references.html#dont-use-external-link-icons",
    "href": "content/en/linking/cross-references.html#dont-use-external-link-icons",
    "title": "Cross-references and linking",
    "section": "",
    "text": "Don’t use an external link icon to indicate that the link goes to a different domain or server. If you think it’s important to inform the reader that they’re leaving a Google domain, mention it in the text and don’t rely on an icon.\n\n✅ Recommended: For more information, see OS-level virtualization.\n\nSometimes OK: For more information, see the Wikipedia page about OS-level virtualization.\n\n❌ Not recommended: For more information, see OS-level virtualization.",
    "crumbs": [
      "Linking",
      "Cross-references and linking"
    ]
  },
  {
    "objectID": "content/en/linking/cross-references.html#punctuation-around-link-text",
    "href": "content/en/linking/cross-references.html#punctuation-around-link-text",
    "title": "Cross-references and linking",
    "section": "",
    "text": "If you have punctuation immediately before or after a link, put the punctuation outside of the link tags where possible.\n\n✅ Recommended: For more information, see Test your code.\n❌ Not recommended: For more information, see Test your code.",
    "crumbs": [
      "Linking",
      "Cross-references and linking"
    ]
  },
  {
    "objectID": "content/en/linking/cross-references.html#quotation-marks-and-italics",
    "href": "content/en/linking/cross-references.html#quotation-marks-and-italics",
    "title": "Cross-references and linking",
    "section": "",
    "text": "When a cross-reference is a link, don’t put the link text in quotation marks.\n\n✅ Recommended: For more information, see Meet Android Studio.\n✅ Recommended: Learn about what’s new in Android Wear 2.0.\n❌ Not recommended: For more information, see “Meet Android Studio”.\n\nIn the rare case when a cross-reference isn’t a link, use italics or quotation marks as appropriate.\n\nFor an unlinked reference to a document section, short work, or part of a series—such as an episode in a web series—use quotation marks.\n\n✅ Recommended: For more information, see “Describing system versions” in the following section.\n\nFor an unlinked reference to the title of a full-length work—such as a book, movie, or web series—use italics.\n\n✅ Recommended: …see The Chicago Manual of Style.",
    "crumbs": [
      "Linking",
      "Cross-references and linking"
    ]
  },
  {
    "objectID": "content/en/linking/cross-references.html#avoid-external-links-in-your-documentation-navigation",
    "href": "content/en/linking/cross-references.html#avoid-external-links-in-your-documentation-navigation",
    "title": "Cross-references and linking",
    "section": "",
    "text": "In a documentation set’s navigation, such as a table of contents, we recommend against linking outside of the documentation set. Instead, include the link in a page within the documentation.\nIf you need to link outside of your documentation set from your navigation, then make sure it’s clear to the reader that they’ll be leaving that document set.",
    "crumbs": [
      "Linking",
      "Cross-references and linking"
    ]
  },
  {
    "objectID": "content/en/linking/cross-references.html#style-link-text",
    "href": "content/en/linking/cross-references.html#style-link-text",
    "title": "Cross-references and linking",
    "section": "",
    "text": "If you write sitewide CSS for your website, apply standard styling to link text. This helps readers find links in your content.\n\nContrast link text color and regular text color. To help readers see links, link text should be distinguishable from the rest of the text on the page.\nUnderline link text, and don’t underline non-link text. When readers scan a page, a horizontal line cuts through the vertical line of scanning and helps readers find links.\nMake visited links change color. Use color-blind-friendly color changes to help readers differentiate links that they’ve followed against links that they haven’t followed. This helps readers navigate your site effectively without revisiting content that they’ve already read.",
    "crumbs": [
      "Linking",
      "Cross-references and linking"
    ]
  },
  {
    "objectID": "content/en/punctuation/colons.html",
    "href": "content/en/punctuation/colons.html",
    "title": "Colons",
    "section": "",
    "text": "Source: https://developers.google.com/style/colons\n\nA colon indicates that closely-related information follows.\nFor information about using colons with run-in headings, see Description lists that use run-in headings.\n\n\nWhen a colon introduces a list, the text that precedes the colon must be able to stand alone as a complete sentence.\n\n✅ Recommended: The fields are defined as follows:\n❌ Not recommended: The fields are:\n\n\n\n\nIn general, the first word in the text that follows a colon should be in lowercase. For exceptions, see Capitalization and colons.\n\n✅ Recommended: Tone: concise, conversational, friendly, respectful\n✅ Recommended: When you add or update content to an existing project, remember to take these steps: review the style guide, use checklists, enlist a fellow writer or an editor to copyedit your work, and request a developmental edit if you feel that it’s warranted.\n\n\n\n\nFor more information about how to punctuate introductory material, see the sections on list introductions and code-sample introductions.\nFor information about when it’s better to use colons than dashes, see Dashes.",
    "crumbs": [
      "Punctuation",
      "Colons"
    ]
  },
  {
    "objectID": "content/en/punctuation/colons.html#introductory-phrase-preceding-colon",
    "href": "content/en/punctuation/colons.html#introductory-phrase-preceding-colon",
    "title": "Colons",
    "section": "",
    "text": "When a colon introduces a list, the text that precedes the colon must be able to stand alone as a complete sentence.\n\n✅ Recommended: The fields are defined as follows:\n❌ Not recommended: The fields are:",
    "crumbs": [
      "Punctuation",
      "Colons"
    ]
  },
  {
    "objectID": "content/en/punctuation/colons.html#colons-within-sentences",
    "href": "content/en/punctuation/colons.html#colons-within-sentences",
    "title": "Colons",
    "section": "",
    "text": "In general, the first word in the text that follows a colon should be in lowercase. For exceptions, see Capitalization and colons.\n\n✅ Recommended: Tone: concise, conversational, friendly, respectful\n✅ Recommended: When you add or update content to an existing project, remember to take these steps: review the style guide, use checklists, enlist a fellow writer or an editor to copyedit your work, and request a developmental edit if you feel that it’s warranted.",
    "crumbs": [
      "Punctuation",
      "Colons"
    ]
  },
  {
    "objectID": "content/en/punctuation/colons.html#see-also",
    "href": "content/en/punctuation/colons.html#see-also",
    "title": "Colons",
    "section": "",
    "text": "For more information about how to punctuate introductory material, see the sections on list introductions and code-sample introductions.\nFor information about when it’s better to use colons than dashes, see Dashes.",
    "crumbs": [
      "Punctuation",
      "Colons"
    ]
  },
  {
    "objectID": "content/en/punctuation/slashes.html",
    "href": "content/en/punctuation/slashes.html",
    "title": "Slashes",
    "section": "",
    "text": "Source: https://developers.google.com/style/slashes\n\nAvoid using slashes, except in code.\n\n\nDon’t use date formats that rely on slashes.\nFor information about how to write dates, see Dates and times.\n\n\n\nDon’t use slashes to separate alternatives.\n\n✅ Recommended: For example, a disaster relief map is not subject to the usage limits even if it has been developed and is hosted by a commercial entity.\n✅ Recommended: For example, a disaster relief map is not subject to the usage limits even if it has been developed or is hosted by a commercial entity.\n❌ Not recommended: For example, a disaster relief map is not subject to the usage limits even if it has been developed/hosted by a commercial entity.\n✅ Recommended: Call this method five or six times.\n❌ Not recommended: Call this method 5/6 times.\n\n\n\nOften, and implies or, so you don’t need to write both words. If you need to specify both in your content, avoid writing and/or except when space is limited, such as in tables.\n\n✅ Recommended: You can view and edit your own data.\n❌ Not recommended: You can view and/or edit your own data.\n✅ Recommended: You can export raw events, processed events, or both.\n❌ Not recommended: You can export raw and/or processed events.\n\n\n\n\n\nUse forward slashes, as appropriate, in computer file paths and URLs.\nNote: If you’re documenting a Windows path, use backslashes.\n\n✅ Recommended: https://developers.google.com/cardboard/\n\nWhere very long URLs extend beyond a line, add a line break immediately after a slash. Don’t ever insert an extraneous hyphen into a URL to break it between two lines.\n\n✅ Recommended: https://developers.google.com/\n\ncardboard/\n\n\n\nDon’t use slashes with fractions because they can be ambiguous.\nIn the following example, 3/4 could be interpreted either as three-quarters or as stating that 4 is an alternative to 3.\n\n✅ Recommended: ¾\n✅ Recommended: 0.75\n✅ Recommended: 75%\n❌ Not recommended: 3/4\n\n\n\n\nDon’t use abbreviations that rely on slashes. Instead, spell the words out.\n\n✅ Recommended: care of, with\n❌ Not recommended: c/o, w/",
    "crumbs": [
      "Punctuation",
      "Slashes"
    ]
  },
  {
    "objectID": "content/en/punctuation/slashes.html#slashes-with-dates",
    "href": "content/en/punctuation/slashes.html#slashes-with-dates",
    "title": "Slashes",
    "section": "",
    "text": "Don’t use date formats that rely on slashes.\nFor information about how to write dates, see Dates and times.",
    "crumbs": [
      "Punctuation",
      "Slashes"
    ]
  },
  {
    "objectID": "content/en/punctuation/slashes.html#slashes-with-alternatives",
    "href": "content/en/punctuation/slashes.html#slashes-with-alternatives",
    "title": "Slashes",
    "section": "",
    "text": "Don’t use slashes to separate alternatives.\n\n✅ Recommended: For example, a disaster relief map is not subject to the usage limits even if it has been developed and is hosted by a commercial entity.\n✅ Recommended: For example, a disaster relief map is not subject to the usage limits even if it has been developed or is hosted by a commercial entity.\n❌ Not recommended: For example, a disaster relief map is not subject to the usage limits even if it has been developed/hosted by a commercial entity.\n✅ Recommended: Call this method five or six times.\n❌ Not recommended: Call this method 5/6 times.\n\n\n\nOften, and implies or, so you don’t need to write both words. If you need to specify both in your content, avoid writing and/or except when space is limited, such as in tables.\n\n✅ Recommended: You can view and edit your own data.\n❌ Not recommended: You can view and/or edit your own data.\n✅ Recommended: You can export raw events, processed events, or both.\n❌ Not recommended: You can export raw and/or processed events.",
    "crumbs": [
      "Punctuation",
      "Slashes"
    ]
  },
  {
    "objectID": "content/en/punctuation/slashes.html#slashes-with-file-paths-and-urls",
    "href": "content/en/punctuation/slashes.html#slashes-with-file-paths-and-urls",
    "title": "Slashes",
    "section": "",
    "text": "Use forward slashes, as appropriate, in computer file paths and URLs.\nNote: If you’re documenting a Windows path, use backslashes.\n\n✅ Recommended: https://developers.google.com/cardboard/\n\nWhere very long URLs extend beyond a line, add a line break immediately after a slash. Don’t ever insert an extraneous hyphen into a URL to break it between two lines.\n\n✅ Recommended: https://developers.google.com/\n\ncardboard/",
    "crumbs": [
      "Punctuation",
      "Slashes"
    ]
  },
  {
    "objectID": "content/en/punctuation/slashes.html#slashes-with-fractions",
    "href": "content/en/punctuation/slashes.html#slashes-with-fractions",
    "title": "Slashes",
    "section": "",
    "text": "Don’t use slashes with fractions because they can be ambiguous.\nIn the following example, 3/4 could be interpreted either as three-quarters or as stating that 4 is an alternative to 3.\n\n✅ Recommended: ¾\n✅ Recommended: 0.75\n✅ Recommended: 75%\n❌ Not recommended: 3/4",
    "crumbs": [
      "Punctuation",
      "Slashes"
    ]
  },
  {
    "objectID": "content/en/punctuation/slashes.html#slashes-with-abbreviations",
    "href": "content/en/punctuation/slashes.html#slashes-with-abbreviations",
    "title": "Slashes",
    "section": "",
    "text": "Don’t use abbreviations that rely on slashes. Instead, spell the words out.\n\n✅ Recommended: care of, with\n❌ Not recommended: c/o, w/",
    "crumbs": [
      "Punctuation",
      "Slashes"
    ]
  },
  {
    "objectID": "content/en/punctuation/dashes.html",
    "href": "content/en/punctuation/dashes.html",
    "title": "Dashes",
    "section": "",
    "text": "Source: https://developers.google.com/style/dashes\n\nThis page explains when to use em dashes. For information about hyphens, see the following:\n\nHyphens\nRanges of numbers\nRanges of numbers with units\n\n\n\nTo indicate a break in the flow of a sentence—or an interruption—use an em dash, also known as a long dash. Don’t put a space before or after it.\nYou can type the em dash character in various ways:\n\nHTML &mdash;\nmacOS Press Option+Shift+hyphen.\nLinux desktop environment Enable the Compose key (instructions for doing that vary depending on your flavor of Linux—for examples, see Linux Keyboard Shortcuts For Text Symbols). After the Compose key is enabled, you can create an em dash by typing the Compose key followed by three hyphens.\nAlternatively, press Control+Shift+U. Let go of those keys, and then type 2014. Then press Return.\n\n[!NOTE] These Linux options don’t work if you’re signed in to the Linux command line from a remote system using ssh or the like; you have to be in a Linux desktop environment.\n\nWindows Turn num lock on, and then hold down the left Alt key and type 0151 on the numeric keypad.\n\nDon’t use an en dash (the shorter dash) or a hyphen in place of an em dash. The use of an en dash with spaces around it in place of an em dash is gradually becoming more common, but it’s still not very widespread in the US in professional publishing; so far (as of early 2016), it’s mostly used in Canada and a few other places. For now, only use the em dash.\n\n\n\nDon’t use. Instead, use a hyphen or the word to. For more information, see the following:\n\nRanges of numbers with units\nRange of numbers\n\n\n\n\nAnother common but nonstandard construction is to use an em dash, an en dash, or a hyphen surrounded by spaces to separate an item and its description. Instead, use a colon or a period. For a series of items, use an HTML description list (&lt;dl&gt;).\n\n✅ Recommended: Example: This is an example.\n❌ Not recommended: Example - This is an example.\n✅ Recommended: Appendix A: My first appendix\n❌ Not recommended: Appendix A—My first appendix\n✅ Recommended:\n\n\nExample\n\n\nThis is an example.\n\n\nAnother example\n\n\nThis is another example.",
    "crumbs": [
      "Punctuation",
      "Dashes"
    ]
  },
  {
    "objectID": "content/en/punctuation/dashes.html#em-dashes",
    "href": "content/en/punctuation/dashes.html#em-dashes",
    "title": "Dashes",
    "section": "",
    "text": "To indicate a break in the flow of a sentence—or an interruption—use an em dash, also known as a long dash. Don’t put a space before or after it.\nYou can type the em dash character in various ways:\n\nHTML &mdash;\nmacOS Press Option+Shift+hyphen.\nLinux desktop environment Enable the Compose key (instructions for doing that vary depending on your flavor of Linux—for examples, see Linux Keyboard Shortcuts For Text Symbols). After the Compose key is enabled, you can create an em dash by typing the Compose key followed by three hyphens.\nAlternatively, press Control+Shift+U. Let go of those keys, and then type 2014. Then press Return.\n\n[!NOTE] These Linux options don’t work if you’re signed in to the Linux command line from a remote system using ssh or the like; you have to be in a Linux desktop environment.\n\nWindows Turn num lock on, and then hold down the left Alt key and type 0151 on the numeric keypad.\n\nDon’t use an en dash (the shorter dash) or a hyphen in place of an em dash. The use of an en dash with spaces around it in place of an em dash is gradually becoming more common, but it’s still not very widespread in the US in professional publishing; so far (as of early 2016), it’s mostly used in Canada and a few other places. For now, only use the em dash.",
    "crumbs": [
      "Punctuation",
      "Dashes"
    ]
  },
  {
    "objectID": "content/en/punctuation/dashes.html#en-dashes",
    "href": "content/en/punctuation/dashes.html#en-dashes",
    "title": "Dashes",
    "section": "",
    "text": "Don’t use. Instead, use a hyphen or the word to. For more information, see the following:\n\nRanges of numbers with units\nRange of numbers",
    "crumbs": [
      "Punctuation",
      "Dashes"
    ]
  },
  {
    "objectID": "content/en/punctuation/dashes.html#colons-instead-of-dashes-in-description-lists",
    "href": "content/en/punctuation/dashes.html#colons-instead-of-dashes-in-description-lists",
    "title": "Dashes",
    "section": "",
    "text": "Another common but nonstandard construction is to use an em dash, an en dash, or a hyphen surrounded by spaces to separate an item and its description. Instead, use a colon or a period. For a series of items, use an HTML description list (&lt;dl&gt;).\n\n✅ Recommended: Example: This is an example.\n❌ Not recommended: Example - This is an example.\n✅ Recommended: Appendix A: My first appendix\n❌ Not recommended: Appendix A—My first appendix\n✅ Recommended:\n\n\nExample\n\n\nThis is an example.\n\n\nAnother example\n\n\nThis is another example.",
    "crumbs": [
      "Punctuation",
      "Dashes"
    ]
  },
  {
    "objectID": "content/en/punctuation/commas.html",
    "href": "content/en/punctuation/commas.html",
    "title": "Commas",
    "section": "",
    "text": "Source: https://developers.google.com/style/commas\n\nUse commas to separate items in a series, and use commas to separate certain kinds of clauses.\n\n\nIn a series of three or more items, use a comma before the final and or or to avoid potentially changing the meaning of the sentence. This comma is called a serial comma or an Oxford comma.\n\n✅ Recommended: Locations are divided into zones, regions, and multi-regions.\n❌ Not recommended: Locations are divided into zones, regions and multi-regions.\n\n\n\n\nIn general, place a comma after an introductory word or phrase.\n\n✅ Recommended: Finally, only groups that contain parameters appear in this list.\n✅ Recommended: Based on the requirements of your game, you can implement this method to update game information.\n\n\n\n\nWhen a coordinating conjunction (and, but, or, nor, for, so, or yet) separates two independent clauses, insert a comma after the first clause (before the conjunction) unless both clauses are very short.\n\n✅ Recommended: The libraries make feed creation easier, and they ensure that only valid feeds are produced.\n❌ Not recommended: The libraries make feed creation easier and they ensure that only valid feeds are produced.\n✅ Recommended: Type your ID and click OK.\n❌ Not recommended: Type your ID, and click OK.\n\n\n\n\nWhen an independent clause and a dependent clause are separated by a coordinating conjunction, insert a comma only if the sentence could be misunderstood without one.\n\n✅ Recommended: Direct-access flags are plain variables and can be read directly.\n❌ Not recommended: Direct-access flags are plain variables, and can be read directly.\n✅ Recommended: The manager acknowledged the last team member who entered the room, and started the meeting.\n❌ Not recommended: The manager acknowledged the last team member who entered the room and started the meeting.\n\n\n\n\nIt’s often a good idea to set off certain kinds of clauses with a comma or other punctuation for clarity.\nA couple of specific places where commas are a good idea:\n\nIn general, put a comma before the word which at the start of a nonrestrictive clause. For more information about this topic, see this guide’s section on relative pronouns and Grammar Girl’s page on which versus that.\nIn general, put a semicolon or a period or a dash before a conjunctive adverb, such as otherwise, however, or therefore, and put a comma after the conjunctive adverb.\n\nIn general, don’t use a comma before the causal conjunction because unless it starts a nonrestrictive clause. For more information, see the Chicago Manual of Style Q&A entry on using commas with because.\n\n\n\n\n\n\n\nRecommended\nNot recommended\n\n\n\n\nName of the group, which has a maximum length of 200 characters.\nName of the group which has a maximum length of 200 characters.\n\n\nThe variable must have a value; otherwise, the server returns an error.\nThe variable must have a value otherwise the server returns an error.\n\n\nYou can use the same key name in multiple backend services and backend buckets, because each set of keys is independent of the others.\nYou can use the same key name in multiple backend services and backend buckets because each set of keys is independent of the others.\n\n\n\n\n\n\nFor information about punctuating numbers, see Commas and decimal points in numbers.\n\n\n\nFor information about punctuating examples, see Format examples.",
    "crumbs": [
      "Punctuation",
      "Commas"
    ]
  },
  {
    "objectID": "content/en/punctuation/commas.html#serial-commas",
    "href": "content/en/punctuation/commas.html#serial-commas",
    "title": "Commas",
    "section": "",
    "text": "In a series of three or more items, use a comma before the final and or or to avoid potentially changing the meaning of the sentence. This comma is called a serial comma or an Oxford comma.\n\n✅ Recommended: Locations are divided into zones, regions, and multi-regions.\n❌ Not recommended: Locations are divided into zones, regions and multi-regions.",
    "crumbs": [
      "Punctuation",
      "Commas"
    ]
  },
  {
    "objectID": "content/en/punctuation/commas.html#commas-after-introductory-words-and-phrases",
    "href": "content/en/punctuation/commas.html#commas-after-introductory-words-and-phrases",
    "title": "Commas",
    "section": "",
    "text": "In general, place a comma after an introductory word or phrase.\n\n✅ Recommended: Finally, only groups that contain parameters appear in this list.\n✅ Recommended: Based on the requirements of your game, you can implement this method to update game information.",
    "crumbs": [
      "Punctuation",
      "Commas"
    ]
  },
  {
    "objectID": "content/en/punctuation/commas.html#commas-separating-two-independent-clauses",
    "href": "content/en/punctuation/commas.html#commas-separating-two-independent-clauses",
    "title": "Commas",
    "section": "",
    "text": "When a coordinating conjunction (and, but, or, nor, for, so, or yet) separates two independent clauses, insert a comma after the first clause (before the conjunction) unless both clauses are very short.\n\n✅ Recommended: The libraries make feed creation easier, and they ensure that only valid feeds are produced.\n❌ Not recommended: The libraries make feed creation easier and they ensure that only valid feeds are produced.\n✅ Recommended: Type your ID and click OK.\n❌ Not recommended: Type your ID, and click OK.",
    "crumbs": [
      "Punctuation",
      "Commas"
    ]
  },
  {
    "objectID": "content/en/punctuation/commas.html#commas-separating-independent-from-dependent-clauses",
    "href": "content/en/punctuation/commas.html#commas-separating-independent-from-dependent-clauses",
    "title": "Commas",
    "section": "",
    "text": "When an independent clause and a dependent clause are separated by a coordinating conjunction, insert a comma only if the sentence could be misunderstood without one.\n\n✅ Recommended: Direct-access flags are plain variables and can be read directly.\n❌ Not recommended: Direct-access flags are plain variables, and can be read directly.\n✅ Recommended: The manager acknowledged the last team member who entered the room, and started the meeting.\n❌ Not recommended: The manager acknowledged the last team member who entered the room and started the meeting.",
    "crumbs": [
      "Punctuation",
      "Commas"
    ]
  },
  {
    "objectID": "content/en/punctuation/commas.html#set-off-other-kinds-of-clauses",
    "href": "content/en/punctuation/commas.html#set-off-other-kinds-of-clauses",
    "title": "Commas",
    "section": "",
    "text": "It’s often a good idea to set off certain kinds of clauses with a comma or other punctuation for clarity.\nA couple of specific places where commas are a good idea:\n\nIn general, put a comma before the word which at the start of a nonrestrictive clause. For more information about this topic, see this guide’s section on relative pronouns and Grammar Girl’s page on which versus that.\nIn general, put a semicolon or a period or a dash before a conjunctive adverb, such as otherwise, however, or therefore, and put a comma after the conjunctive adverb.\n\nIn general, don’t use a comma before the causal conjunction because unless it starts a nonrestrictive clause. For more information, see the Chicago Manual of Style Q&A entry on using commas with because.\n\n\n\n\n\n\n\nRecommended\nNot recommended\n\n\n\n\nName of the group, which has a maximum length of 200 characters.\nName of the group which has a maximum length of 200 characters.\n\n\nThe variable must have a value; otherwise, the server returns an error.\nThe variable must have a value otherwise the server returns an error.\n\n\nYou can use the same key name in multiple backend services and backend buckets, because each set of keys is independent of the others.\nYou can use the same key name in multiple backend services and backend buckets because each set of keys is independent of the others.",
    "crumbs": [
      "Punctuation",
      "Commas"
    ]
  },
  {
    "objectID": "content/en/punctuation/commas.html#punctuate-numbers",
    "href": "content/en/punctuation/commas.html#punctuate-numbers",
    "title": "Commas",
    "section": "",
    "text": "For information about punctuating numbers, see Commas and decimal points in numbers.",
    "crumbs": [
      "Punctuation",
      "Commas"
    ]
  },
  {
    "objectID": "content/en/punctuation/commas.html#punctuate-examples",
    "href": "content/en/punctuation/commas.html#punctuate-examples",
    "title": "Commas",
    "section": "",
    "text": "For information about punctuating examples, see Format examples.",
    "crumbs": [
      "Punctuation",
      "Commas"
    ]
  },
  {
    "objectID": "content/en/punctuation/parentheses.html",
    "href": "content/en/punctuation/parentheses.html",
    "title": "Parentheses",
    "section": "",
    "text": "Parentheses\n\nSource: https://developers.google.com/style/parentheses\n\nSome of us love to use parentheses. Unfortunately, some readers ignore anything that appears in parentheses, so don’t put important information in parentheses if you can help it.\nEven for less important information, whenever you’re inclined to use parentheses, consider whether they’re necessary. Sometimes they are; however, the sentence or paragraph might work just as well if you remove the parentheses and set off the phrase or sentence by using commas, dashes, semicolons, or periods.\nIf you need to include parentheses in the middle of a sentence, keep the parenthetical thought short. Otherwise, consider using two sentences.\nNote: If a full standalone sentence appears inside parentheses, the period also goes inside the parentheses, not outside.\n\n✅ Recommended: Enter a name for the instance—for example, my-instance-99.\n✅ Recommended: Enter a six-digit hex number (for example, 228B22), and then click OK.\n✅ Recommended: Enter a six-digit hex number, and then click OK. For example, if you want the color forest green, enter 228B22.\n❌ Not recommended: Enter a name for the instance (for example, my-instance-99).\n❌ Not recommended: Enter a six-digit hex number (for example, if you want the color forest green, enter 228B22), and then click OK.\n\n\n\n\n\n Back to top",
    "crumbs": [
      "Punctuation",
      "Parentheses"
    ]
  },
  {
    "objectID": "content/en/html-css/semantic-tagging.html",
    "href": "content/en/html-css/semantic-tagging.html",
    "title": "HTML and semantic tagging",
    "section": "",
    "text": "Use HTML elements for the purposes that they were designed for. For example, when you give the title of a standalone work (such as a book or a movie), mark it with a cite element. For more information about semantic tagging, see Semantics in HTML on the MDN web documents site.\nIn situations where there are no semantically relevant HTML elements, use CSS or the few HTML elements that convey visual style without semantics.\n\n\nIf you want to achieve specific visual results, don’t use HTML elements that convey different semantics.\nIn particular, follow these guidelines:\n\nDon’t use frames or tables for layout; instead, use your site’s CSS to lay out the page.\nDon’t use the heading elements (such as h1 and h2) to visually style text; instead, use those elements only for hierarchically structured headings, and use CSS for visual style.\nThe em element indicates emphasis, not italics as such. Don’t use it to italicize something that isn’t meant to be emphasized; instead, use the i element for non-emphasis italics.\nThe strong element indicates strong importance, not bold as such. To bold a word that doesn’t merit strong importance, use the b element.\nThe br element is intended “only for line breaks that are actually part of the content, as in poems or addresses.” Don’t use it to adjust the spacing between lines. Instead, use elements like p to semantically mark the text, and use CSS to adjust line spacing.",
    "crumbs": [
      "HTML and CSS",
      "HTML and semantic tagging"
    ]
  },
  {
    "objectID": "content/en/html-css/semantic-tagging.html#visual-formatting",
    "href": "content/en/html-css/semantic-tagging.html#visual-formatting",
    "title": "HTML and semantic tagging",
    "section": "",
    "text": "If you want to achieve specific visual results, don’t use HTML elements that convey different semantics.\nIn particular, follow these guidelines:\n\nDon’t use frames or tables for layout; instead, use your site’s CSS to lay out the page.\nDon’t use the heading elements (such as h1 and h2) to visually style text; instead, use those elements only for hierarchically structured headings, and use CSS for visual style.\nThe em element indicates emphasis, not italics as such. Don’t use it to italicize something that isn’t meant to be emphasized; instead, use the i element for non-emphasis italics.\nThe strong element indicates strong importance, not bold as such. To bold a word that doesn’t merit strong importance, use the b element.\nThe br element is intended “only for line breaks that are actually part of the content, as in poems or addresses.” Don’t use it to adjust the spacing between lines. Instead, use elements like p to semantically mark the text, and use CSS to adjust line spacing.",
    "crumbs": [
      "HTML and CSS",
      "HTML and semantic tagging"
    ]
  },
  {
    "objectID": "content/en/html-css/markdown.html",
    "href": "content/en/html-css/markdown.html",
    "title": "Markdown versus HTML",
    "section": "",
    "text": "Markdown versus HTML\nUse either HTML or Markdown. Some of this style guide assumes that you’re using HTML. If you’re using Markdown, details like what HTML elements to use in various contexts might be irrelevant to you.\nMarkdown is easier to write than HTML, and it’s easier for most humans to read Markdown source than HTML source. However, HTML is more expressive (particularly regarding semantic tagging) and can achieve some specific effects that might be difficult or impossible in Markdown. For example, you might have to switch to using the HTML code element for special characters in code such as nonbreaking spaces.\nIn the end, which one to use is primarily a matter of personal preference; however, if your team or your document template already uses one or the other, it may be best to use whatever they use.\n\n\n\n\n Back to top",
    "crumbs": [
      "HTML and CSS",
      "Markdown versus HTML"
    ]
  },
  {
    "objectID": "content/en/introduction/about.html",
    "href": "content/en/introduction/about.html",
    "title": "About this guide",
    "section": "",
    "text": "This style guide provides editorial guidelines for writing clear and consistent technical documentation for an audience of software developers and other technical practitioners.\nIf you’re new to the guide and looking for introductory topics about our style, then start with Highlights, Voice and tone, and Text-formatting summary. Otherwise, use the guide as a reference document for specific questions. For example, you can look up terms in the word list.",
    "crumbs": [
      "Introduction",
      "About this guide"
    ]
  },
  {
    "objectID": "content/en/introduction/about.html#editorial-resources",
    "href": "content/en/introduction/about.html#editorial-resources",
    "title": "About this guide",
    "section": "Editorial resources",
    "text": "Editorial resources\nWe recommend using the following editorial resources.\n\nReference hierarchy\nUse the following references, including this guide, in this order:\n\nProject-specific style. Follow style guidance specific to your project or product, such as necessary exceptions to this guide or terms that are relevant only to your product.\nThis style guide. If project-specific style guidelines don’t provide explicit guidance, then follow this guide.\nThird-party references. If the preceding references don’t provide explicit guidance, then see these third-party references, depending on the nature of your question:\n\n\n\nType of question\nThird-party reference\n\n\n\n\nSpelling\nFollow Merriam-Webster.com. See also Spelling.\n\n\nNontechnical style\nFollow The Chicago Manual of Style, 17th edition (subscription required).\n\n\nTechnical style\nSee the Microsoft Writing Style Guide. But consider whether Microsoft’s guidance applies; some of it might apply only to Microsoft products and interfaces.\n\n\n\n\nAt multiple stages of this hierarchy, it can be helpful to look to established usage. For example, search your organization’s documentation, or check a broad language corpus such as Google Ngram Viewer.\n\n\nOther editorial resources\nYou can use additional resources to research and inform your thinking, but don’t consider them part of Google developer documentation style.\nHere are some other style guides from the tech community:\n\nApple Style Guide\nRed Hat supplementary style guide for product documentation",
    "crumbs": [
      "Introduction",
      "About this guide"
    ]
  },
  {
    "objectID": "content/en/introduction/about.html#annotations-used-in-this-guide",
    "href": "content/en/introduction/about.html#annotations-used-in-this-guide",
    "title": "About this guide",
    "section": "Annotations used in this guide",
    "text": "Annotations used in this guide\nFor guidance that applies only to Android or Google Cloud documentation, look for the following logos:\n\n precedes terms and guidelines specific to Android documentation.\n precedes terms and guidelines specific to Google Cloud documentation.",
    "crumbs": [
      "Introduction",
      "About this guide"
    ]
  },
  {
    "objectID": "content/en/introduction/about.html#break-the-rules",
    "href": "content/en/introduction/about.html#break-the-rules",
    "title": "About this guide",
    "section": "Break the rules",
    "text": "Break the rules\n\nBreak any of these rules sooner than say anything outright barbarous.\n—George Orwell, “Politics and the English Language”\n\nThis guide contains guidelines, not rules. Depart from it when doing so improves your content.\nFor example, if we recommend spelling a term as one word, and you determine that the hyphenated version of a term in your domain is more appropriate for your readers, then it’s fine to use that instead. We acknowledge that sometimes there are competing forms of the same word in wide use, especially as new terms emerge, and you might have good reasons for departing from our guidance.\nWhen you depart from this guide, be consistent throughout your document.",
    "crumbs": [
      "Introduction",
      "About this guide"
    ]
  },
  {
    "objectID": "content/en/introduction/philosophy.html",
    "href": "content/en/introduction/philosophy.html",
    "title": "Philosophy of this style guide",
    "section": "",
    "text": "This document discusses some of the principles and philosophy behind this style guide.",
    "crumbs": [
      "Introduction",
      "Philosophy of this guide"
    ]
  },
  {
    "objectID": "content/en/introduction/philosophy.html#intended-purpose",
    "href": "content/en/introduction/philosophy.html#intended-purpose",
    "title": "Philosophy of this style guide",
    "section": "Intended purpose",
    "text": "Intended purpose\nThis style guide codifies and records our style decisions and describes our house style. The guide doesn’t claim to be objectively correct.\nThis guide is not intended to do the following:\n\nProvide an industry documentation standard.\nCompete with other well-known style guides.\nReplace another style guide that you already follow.\nProvide a complete set of basic writing guidelines.\nProvide legal advice. For legal advice, consult a lawyer.\n\n\n[!NOTE] Two disclaimers:\n\nThe guidance in this style guide doesn’t limit the changes that Google can make to its documentation.\nIf you don’t read a given guideline, then you are still responsible for behaving ethically and lawfully with regard to documentation.",
    "crumbs": [
      "Introduction",
      "Philosophy of this guide"
    ]
  },
  {
    "objectID": "content/en/introduction/philosophy.html#explanation-of-reasons-for-guidelines",
    "href": "content/en/introduction/philosophy.html#explanation-of-reasons-for-guidelines",
    "title": "Philosophy of this style guide",
    "section": "Explanation of reasons for guidelines",
    "text": "Explanation of reasons for guidelines\nWe generally don’t explain the reasoning behind most of our guidelines. We have a couple of reasons for that:\n\nMany of our decisions are driven by accessibility, localization, globalization, and ease of understanding. Giving those reasons as explanations everywhere they apply would be repetitive.\nOften, a given guideline is one good option among several; in those cases, we sometimes just chose one option for consistency.\nToo much explanation can clutter up a page. Readers most often want a brief answer to a specific question, rather than a detailed explanation.\n\nThat said, we recognize that it’s sometimes useful to know why we made a given choice, so we’ve started to include occasional explanations in the What’s new page.",
    "crumbs": [
      "Introduction",
      "Philosophy of this guide"
    ]
  },
  {
    "objectID": "content/en/key-resources/word-list.html",
    "href": "content/en/key-resources/word-list.html",
    "title": "Word list",
    "section": "",
    "text": "[!NOTE] This page is not included. Please refer to the original document: Word list\n\n\n\n\n Back to top",
    "crumbs": [
      "Key resources",
      "Word list"
    ]
  },
  {
    "objectID": "content/en/formatting/dates-times.html",
    "href": "content/en/formatting/dates-times.html",
    "title": "Dates and times",
    "section": "",
    "text": "Source: https://developers.google.com/style/dates-times\n\nExpressing dates and times in a clear and unambiguous way helps support writing for a global audience and reduces confusion.\n\n\nIn general, use the following guidelines to format expressions of time:\n\nUse the 12-hour clock, except if required to use a 24-hour time, such as when documenting features that use 24-hour time. If the UI, a command, or a code sample uses the 24-hour format, use that format throughout the page for consistency.\nUse exact times when possible, but noon and midnight are OK.\nUse hyphens in time ranges. Don’t add spaces before or after the hyphens.\n\n✅ Recommended: 5-10 minutes ago.\n\nCapitalize AM and PM, and leave one space between it and the time.\n\n✅ Recommended: 3:45 PM.\n\nRemove the minutes from round hours.\n\n✅ Recommended: 3 PM.\n\n\n\n\nAvoid using time zones unless absolutely necessary. In cases where you need to use a time zone—such as describing real events at real times—use the following guidelines:\n\nLet the reader know if the time is local to their time—for example, 10 AM your local time.\nIf a time zone is necessary, use the timestamp format as seen in the user interface (if available).\nIf using a specific time zone, spell out the region and include the UTC or GMT label as a parenthetical. For example:\n\nUS and Canadian Pacific Standard Time (UTC-8)\nUS and Canadian Pacific Daylight Time (UTC-7)\n\nDon’t abbreviate the name of the time zone.\nIn the rare event where the time of an event doesn’t change for daylight saving time, use the specific time zone, without reference to UTC.\n\n\n\n\n\nIn general, spell out the names of months and days of the week in full. Give the full four-digit year, not a two-digit abbreviation.\n\n✅ Recommended: January 19, 2017\n\nIf including the day of the week, add it before the month as follows: DAY*OF*WEEK, MONTH``DAY, YEAR.\n\n✅ Recommended: Tuesday, April 27, 2021\n\n\n\nWhen giving only the month and year, don’t use a comma.\n\n✅ Recommended: She was hired in January 2017.\n\nIn most cases, don’t abbreviate the day of the week or the month. However, when conserving space, such as in a heading or table, it’s okay to abbreviate the month and the day of the week to their three-letter abbreviations. Capitalize the first letter and do not add a period at the end of the abbreviation.\nIf you abbreviate, do so for the entire date. Don’t mix written-out forms with abbreviated forms in the same date.\nBe consistent in where you apply abbreviations throughout your documentation. For example, if you choose to abbreviate in table cells, do so in all table cells.\n\n✅ Recommended: Mon, Sep 3, 2018\n❌ Not recommended: Mon, September 3, 2018\n\n\n\n\nWhen a MONTH``DAY, YEAR date appears in the middle of a sentence, add a comma after the year.\n\n✅ Recommended: The January 19, 2017, release of …\n\nHowever, if the date in the middle of the sentence consists of the month and year only, don’t use a comma.\n\n✅ Recommended: The January 2017 release of …\n\n\n\n\nIn general, don’t express months as numbers unless you don’t have the option (in which case, see numeric-only date format). Different regions of the world put parts of the date in a different order for numeric dates. For example, a date written as 04/05/09 means different things in different regions:\n\nIn the UK, 04/05/09 means May 4, 2009, where the order is usually day, month, and then year.\nIn the US, 04/05/09 means April 5, 2009, where the order is usually month, day, and then year.\nIn some other parts of the world, 04/05/09 means May 9, 2004. Some regions write the year first, followed by the month and day.\n\nFor this reason, we recommend always using words to express dates. Expressing dates in numbers only (using slashes, periods, or hyphens as separators) can be confusing.\n\n✅ Recommended: February 12, 2017\n✅ Recommended: Sunday, February 12, 2017\n❌ Not recommended: 02.12.2017\n❌ Not recommended: 12/02/2017\n\n\n\n\nIf you must express a date in numerical date format, use the format YYYY-MM-DD, and separate the elements by using hyphens. This conforms to ISO 8601 international standards for numerical date format.\nAdditionally, if you have a choice of what date to write (such as in a fictional example), then choose a calendar day greater than 12 to differentiate it from the month.\n\n✅ Recommended: 2017-04-15\n❌ Not recommended: 04/06/2017\n\n\n\n\nIf you must express a date and a time together, then mention the date first and then the time.\n\n✅ Recommended: 2017-04-15 at 3 PM\n✅ Recommended: May 4, 2009, at 6 PM\n\n\n\n\n\nAvoid referring to seasons. Spring in the northern hemisphere is fall (autumn) in the southern hemisphere. Instead, use the month, quarter, or temperature (if relevant).\n\n\n\n\n\n\n\n✅ Recommended\n❌ Not recommended\n\n\n\n\nDuring warmer months, data centers face a higher risk of cooling failures.\nDuring summer months, data centers face a higher risk of cooling failures.\n\n\nIn November and December, data centers experience higher traffic volume.\nIn winter, data centers experience higher traffic volume.\n\n\nChanges are released in October of each year.\nChanges are released in the Fall of each year.",
    "crumbs": [
      "Formatting and organization",
      "Dates and times"
    ]
  },
  {
    "objectID": "content/en/formatting/dates-times.html#express-times",
    "href": "content/en/formatting/dates-times.html#express-times",
    "title": "Dates and times",
    "section": "",
    "text": "In general, use the following guidelines to format expressions of time:\n\nUse the 12-hour clock, except if required to use a 24-hour time, such as when documenting features that use 24-hour time. If the UI, a command, or a code sample uses the 24-hour format, use that format throughout the page for consistency.\nUse exact times when possible, but noon and midnight are OK.\nUse hyphens in time ranges. Don’t add spaces before or after the hyphens.\n\n✅ Recommended: 5-10 minutes ago.\n\nCapitalize AM and PM, and leave one space between it and the time.\n\n✅ Recommended: 3:45 PM.\n\nRemove the minutes from round hours.\n\n✅ Recommended: 3 PM.\n\n\n\n\nAvoid using time zones unless absolutely necessary. In cases where you need to use a time zone—such as describing real events at real times—use the following guidelines:\n\nLet the reader know if the time is local to their time—for example, 10 AM your local time.\nIf a time zone is necessary, use the timestamp format as seen in the user interface (if available).\nIf using a specific time zone, spell out the region and include the UTC or GMT label as a parenthetical. For example:\n\nUS and Canadian Pacific Standard Time (UTC-8)\nUS and Canadian Pacific Daylight Time (UTC-7)\n\nDon’t abbreviate the name of the time zone.\nIn the rare event where the time of an event doesn’t change for daylight saving time, use the specific time zone, without reference to UTC.",
    "crumbs": [
      "Formatting and organization",
      "Dates and times"
    ]
  },
  {
    "objectID": "content/en/formatting/dates-times.html#express-dates",
    "href": "content/en/formatting/dates-times.html#express-dates",
    "title": "Dates and times",
    "section": "",
    "text": "In general, spell out the names of months and days of the week in full. Give the full four-digit year, not a two-digit abbreviation.\n\n✅ Recommended: January 19, 2017\n\nIf including the day of the week, add it before the month as follows: DAY*OF*WEEK, MONTH``DAY, YEAR.\n\n✅ Recommended: Tuesday, April 27, 2021\n\n\n\nWhen giving only the month and year, don’t use a comma.\n\n✅ Recommended: She was hired in January 2017.\n\nIn most cases, don’t abbreviate the day of the week or the month. However, when conserving space, such as in a heading or table, it’s okay to abbreviate the month and the day of the week to their three-letter abbreviations. Capitalize the first letter and do not add a period at the end of the abbreviation.\nIf you abbreviate, do so for the entire date. Don’t mix written-out forms with abbreviated forms in the same date.\nBe consistent in where you apply abbreviations throughout your documentation. For example, if you choose to abbreviate in table cells, do so in all table cells.\n\n✅ Recommended: Mon, Sep 3, 2018\n❌ Not recommended: Mon, September 3, 2018\n\n\n\n\nWhen a MONTH``DAY, YEAR date appears in the middle of a sentence, add a comma after the year.\n\n✅ Recommended: The January 19, 2017, release of …\n\nHowever, if the date in the middle of the sentence consists of the month and year only, don’t use a comma.\n\n✅ Recommended: The January 2017 release of …\n\n\n\n\nIn general, don’t express months as numbers unless you don’t have the option (in which case, see numeric-only date format). Different regions of the world put parts of the date in a different order for numeric dates. For example, a date written as 04/05/09 means different things in different regions:\n\nIn the UK, 04/05/09 means May 4, 2009, where the order is usually day, month, and then year.\nIn the US, 04/05/09 means April 5, 2009, where the order is usually month, day, and then year.\nIn some other parts of the world, 04/05/09 means May 9, 2004. Some regions write the year first, followed by the month and day.\n\nFor this reason, we recommend always using words to express dates. Expressing dates in numbers only (using slashes, periods, or hyphens as separators) can be confusing.\n\n✅ Recommended: February 12, 2017\n✅ Recommended: Sunday, February 12, 2017\n❌ Not recommended: 02.12.2017\n❌ Not recommended: 12/02/2017\n\n\n\n\nIf you must express a date in numerical date format, use the format YYYY-MM-DD, and separate the elements by using hyphens. This conforms to ISO 8601 international standards for numerical date format.\nAdditionally, if you have a choice of what date to write (such as in a fictional example), then choose a calendar day greater than 12 to differentiate it from the month.\n\n✅ Recommended: 2017-04-15\n❌ Not recommended: 04/06/2017\n\n\n\n\nIf you must express a date and a time together, then mention the date first and then the time.\n\n✅ Recommended: 2017-04-15 at 3 PM\n✅ Recommended: May 4, 2009, at 6 PM",
    "crumbs": [
      "Formatting and organization",
      "Dates and times"
    ]
  },
  {
    "objectID": "content/en/formatting/dates-times.html#express-divisions-of-the-year",
    "href": "content/en/formatting/dates-times.html#express-divisions-of-the-year",
    "title": "Dates and times",
    "section": "",
    "text": "Avoid referring to seasons. Spring in the northern hemisphere is fall (autumn) in the southern hemisphere. Instead, use the month, quarter, or temperature (if relevant).\n\n\n\n\n\n\n\n✅ Recommended\n❌ Not recommended\n\n\n\n\nDuring warmer months, data centers face a higher risk of cooling failures.\nDuring summer months, data centers face a higher risk of cooling failures.\n\n\nIn November and December, data centers experience higher traffic volume.\nIn winter, data centers experience higher traffic volume.\n\n\nChanges are released in October of each year.\nChanges are released in the Fall of each year.",
    "crumbs": [
      "Formatting and organization",
      "Dates and times"
    ]
  },
  {
    "objectID": "content/en/formatting/tables.html",
    "href": "content/en/formatting/tables.html",
    "title": "Tables",
    "section": "",
    "text": "Source: https://developers.google.com/style/tables\n\nIn many contexts, tables are the best way to represent sets of related pieces of data. However, in some contexts, other approaches are better choices.\n\n\nTables and lists are both ways to present a set of similarly structured items; sometimes it’s not obvious when to choose one presentation over the other. To decide which presentation to use, consult the following table:\n\n\n\nItem type\nExample\nHow to present\n\n\n\n\nEach item is a single unit.\nA list of programming language names, or a list of steps to follow.\nUse a numbered list, lettered list, or bulleted list.\n\n\nEach item is a pair of pieces of related data.\nA list of term/definition pairs.\nUse a description list (or, in some contexts, a table).\n\n\nEach item is three or more pieces of related data.\nA set of parameters, where each parameter has a name, a data type, and a description.\nUse a table.\n\n\n\n\n\n\nDon’t use tables to lay out a page; use your site’s standard CSS instead.\nUsually if you have only one row of material, a table isn’t the best choice for how to present it. But in some contexts (especially for consistency of layout in reference documentation), it might be.\nIf you have only one column in your table, turn the table into a list.\nDon’t use tables to lay out code snippets.\nDon’t use tables to lay out long one-dimensional lists in multiple columns. For example, if you have a long list of function names, don’t try to save space by splitting the list in half and presenting the two halves as a two-column table. Use tables only to present two-dimensional data—that is, material that semantically makes sense to display in rows and columns.\nAvoid tables in the middle of a numbered procedure.\n\n\n\n\n\nAny table cell can contain more than one paragraph.\nTo create multiple paragraphs, use the p element rather than using the br element. (The HTML specification describes which uses of the br element are legitimate and which aren’t.)\nExample of a table with some cells that contain more than one paragraph:\n\n\n\n\n\n\n\n\nAttribute name\nType\nDescription\n\n\n\n\nhref\nHTML\nDefines the URL for a link. For example, go to the &lt;a href=\"https://www.google.com\"&gt;Google Search&lt;/a&gt; page.\n\n\nsrc\nHTML\nDefines the path of the image to be displayed. For example, &lt;img src=\"kitten.jpg\"&gt;.\n\n\n\n\n\n\nIntroduce tables with a complete sentence that describes the purpose of the table because not all screen readers preannounce tables. The introductory sentence can end with a colon or a period; usually a colon if it immediately precedes the table, and usually a period if there’s more material (such as a note paragraph) between the introduction and the table.\n\n✅ Recommended: Change the environment variables to values for your deployment, as listed in the following table:\n\nFor more information, see the Tables section of the “Accessibility” page.\n\n\n\n\nWhen introducing a table, use a complete sentence and try to refer to the table’s position, using a phrase like the following table or the preceding table.\nDon’t put a table in the middle of a sentence.\nAvoid using footnotes when possible. If your table does refer to footnotes, place them immediately following the table. For more information, see Footnotes.\n\n\n\n\nIf your document contains only one table, the table doesn’t need a caption. However, be sure to place the table adjacent to the text that refers to it.\nIf your document contains more than one table in fairly close proximity to each other, include a caption for each one, using a caption element as the first child of the table element. Start the caption with a number, in the form “Table NUMBER.DESCRIPTION”. Use sentence case for the caption, but don’t place a period at the end.\nWhen referring to the table from text, refer to it by its number—for example, … as shown in table 2. Do not capitalize table unless it starts a sentence.\nYour site’s CSS determines the styling and placement of the caption.\n\n✅ Recommended:\n&lt;table&gt;\n  &lt;caption&gt;&lt;b&gt;Table 1.&lt;/b&gt; Prehistoric birds&lt;/caption&gt;\n  ...\n&lt;/table&gt;\n\n\n\n\n\nDon’t add styling to the table element.\nDon’t apply a visual style such as a different font, font color, or background color to convey a header row or column by itself. Use the th element to semantically mark up headers in tables.\nDon’t merge cells. Don’t use colspan or rowspan attributes.\nSort rows in a logical order, or alphabetically if there is no logical order.\nIf the table is long or complicated—for example, with multiple header rows or columns—consider splitting it into multiple tables.\nDon’t present new information in tables through images or symbols alone; always provide a descriptive alt attribute for the image or symbol. For more information, see Alt text.\n\n\n\n\n\nUse sentence case.\nWrite concise headings.\nDon’t end with punctuation, including a period, an ellipsis, or a colon.\nUse table headings for the first column and the first row only. Use the th element.\nInclude the scope attribute as appropriate for accessibility.\n\n\n\n\nWhere possible, use table CSS that adapts to different viewport sizes.\n\n\n\nWhere possible, avoid linking to tables; instead, refer to them by table number.",
    "crumbs": [
      "Formatting and organization",
      "Tables"
    ]
  },
  {
    "objectID": "content/en/formatting/tables.html#list-or-table",
    "href": "content/en/formatting/tables.html#list-or-table",
    "title": "Tables",
    "section": "",
    "text": "Tables and lists are both ways to present a set of similarly structured items; sometimes it’s not obvious when to choose one presentation over the other. To decide which presentation to use, consult the following table:\n\n\n\nItem type\nExample\nHow to present\n\n\n\n\nEach item is a single unit.\nA list of programming language names, or a list of steps to follow.\nUse a numbered list, lettered list, or bulleted list.\n\n\nEach item is a pair of pieces of related data.\nA list of term/definition pairs.\nUse a description list (or, in some contexts, a table).\n\n\nEach item is three or more pieces of related data.\nA set of parameters, where each parameter has a name, a data type, and a description.\nUse a table.\n\n\n\n\n\n\nDon’t use tables to lay out a page; use your site’s standard CSS instead.\nUsually if you have only one row of material, a table isn’t the best choice for how to present it. But in some contexts (especially for consistency of layout in reference documentation), it might be.\nIf you have only one column in your table, turn the table into a list.\nDon’t use tables to lay out code snippets.\nDon’t use tables to lay out long one-dimensional lists in multiple columns. For example, if you have a long list of function names, don’t try to save space by splitting the list in half and presenting the two halves as a two-column table. Use tables only to present two-dimensional data—that is, material that semantically makes sense to display in rows and columns.\nAvoid tables in the middle of a numbered procedure.",
    "crumbs": [
      "Formatting and organization",
      "Tables"
    ]
  },
  {
    "objectID": "content/en/formatting/tables.html#multi-paragraph-table-cells",
    "href": "content/en/formatting/tables.html#multi-paragraph-table-cells",
    "title": "Tables",
    "section": "",
    "text": "Any table cell can contain more than one paragraph.\nTo create multiple paragraphs, use the p element rather than using the br element. (The HTML specification describes which uses of the br element are legitimate and which aren’t.)\nExample of a table with some cells that contain more than one paragraph:\n\n\n\n\n\n\n\n\nAttribute name\nType\nDescription\n\n\n\n\nhref\nHTML\nDefines the URL for a link. For example, go to the &lt;a href=\"https://www.google.com\"&gt;Google Search&lt;/a&gt; page.\n\n\nsrc\nHTML\nDefines the path of the image to be displayed. For example, &lt;img src=\"kitten.jpg\"&gt;.",
    "crumbs": [
      "Formatting and organization",
      "Tables"
    ]
  },
  {
    "objectID": "content/en/formatting/tables.html#introductory-sentences-for-tables",
    "href": "content/en/formatting/tables.html#introductory-sentences-for-tables",
    "title": "Tables",
    "section": "",
    "text": "Introduce tables with a complete sentence that describes the purpose of the table because not all screen readers preannounce tables. The introductory sentence can end with a colon or a period; usually a colon if it immediately precedes the table, and usually a period if there’s more material (such as a note paragraph) between the introduction and the table.\n\n✅ Recommended: Change the environment variables to values for your deployment, as listed in the following table:\n\nFor more information, see the Tables section of the “Accessibility” page.",
    "crumbs": [
      "Formatting and organization",
      "Tables"
    ]
  },
  {
    "objectID": "content/en/formatting/tables.html#table-placement",
    "href": "content/en/formatting/tables.html#table-placement",
    "title": "Tables",
    "section": "",
    "text": "When introducing a table, use a complete sentence and try to refer to the table’s position, using a phrase like the following table or the preceding table.\nDon’t put a table in the middle of a sentence.\nAvoid using footnotes when possible. If your table does refer to footnotes, place them immediately following the table. For more information, see Footnotes.",
    "crumbs": [
      "Formatting and organization",
      "Tables"
    ]
  },
  {
    "objectID": "content/en/formatting/tables.html#table-captions",
    "href": "content/en/formatting/tables.html#table-captions",
    "title": "Tables",
    "section": "",
    "text": "If your document contains only one table, the table doesn’t need a caption. However, be sure to place the table adjacent to the text that refers to it.\nIf your document contains more than one table in fairly close proximity to each other, include a caption for each one, using a caption element as the first child of the table element. Start the caption with a number, in the form “Table NUMBER.DESCRIPTION”. Use sentence case for the caption, but don’t place a period at the end.\nWhen referring to the table from text, refer to it by its number—for example, … as shown in table 2. Do not capitalize table unless it starts a sentence.\nYour site’s CSS determines the styling and placement of the caption.\n\n✅ Recommended:\n&lt;table&gt;\n  &lt;caption&gt;&lt;b&gt;Table 1.&lt;/b&gt; Prehistoric birds&lt;/caption&gt;\n  ...\n&lt;/table&gt;",
    "crumbs": [
      "Formatting and organization",
      "Tables"
    ]
  },
  {
    "objectID": "content/en/formatting/tables.html#table-formatting",
    "href": "content/en/formatting/tables.html#table-formatting",
    "title": "Tables",
    "section": "",
    "text": "Don’t add styling to the table element.\nDon’t apply a visual style such as a different font, font color, or background color to convey a header row or column by itself. Use the th element to semantically mark up headers in tables.\nDon’t merge cells. Don’t use colspan or rowspan attributes.\nSort rows in a logical order, or alphabetically if there is no logical order.\nIf the table is long or complicated—for example, with multiple header rows or columns—consider splitting it into multiple tables.\nDon’t present new information in tables through images or symbols alone; always provide a descriptive alt attribute for the image or symbol. For more information, see Alt text.",
    "crumbs": [
      "Formatting and organization",
      "Tables"
    ]
  },
  {
    "objectID": "content/en/formatting/tables.html#table-column-heads",
    "href": "content/en/formatting/tables.html#table-column-heads",
    "title": "Tables",
    "section": "",
    "text": "Use sentence case.\nWrite concise headings.\nDon’t end with punctuation, including a period, an ellipsis, or a colon.\nUse table headings for the first column and the first row only. Use the th element.\nInclude the scope attribute as appropriate for accessibility.",
    "crumbs": [
      "Formatting and organization",
      "Tables"
    ]
  },
  {
    "objectID": "content/en/formatting/tables.html#responsive-tables",
    "href": "content/en/formatting/tables.html#responsive-tables",
    "title": "Tables",
    "section": "",
    "text": "Where possible, use table CSS that adapts to different viewport sizes.",
    "crumbs": [
      "Formatting and organization",
      "Tables"
    ]
  },
  {
    "objectID": "content/en/formatting/tables.html#link-to-tables",
    "href": "content/en/formatting/tables.html#link-to-tables",
    "title": "Tables",
    "section": "",
    "text": "Where possible, avoid linking to tables; instead, refer to them by table number.",
    "crumbs": [
      "Formatting and organization",
      "Tables"
    ]
  },
  {
    "objectID": "content/en/formatting/notices.html",
    "href": "content/en/formatting/notices.html",
    "title": "Notes, cautions, warnings, and other notices",
    "section": "",
    "text": "Source: https://developers.google.com/style/notices\n\nTo give the reader important or useful information that isn’t part of the flow of the text, you can offset the information with a notice. However, there’s evidence that readers skip elements on the page, including notices, that are outside their focus of interest. If you’re not sure whether something should be a notice, write it first in regular text and then decide if a notice is needed.\nDon’t use too many notices. When you use multiple notices on a page, they begin to lose their visual distinctiveness. See if you can convey the information in a different way. This is especially true if you have two (or more) notices in a row.\nWhere possible, avoid grouping two or more notices together. If you find it necessary to do so (for example, a note with a caution inside it, or several warnings one after another), consider reorganizing the content.\n\n\nThe following is a list of commonly used notices.\nNote An ordinary aside or tip. Provides information that is useful but not critical to the reader. For example, “Generating excessive amounts of traffic to external systems can resemble a denial-of-service attack.” For more information, see when to use and when not to use a note notice type.Caution Tells the reader to proceed carefully. For example, “We don’t recommend using a broad 0.0.0.0/0 range that would allow all traffic.”Warning Stronger than a caution notice; it means “Don’t do this” or that this step might be irreversible, such as leading to permanent data loss. If a reader doesn’t heed the warning, they can lose money, lose work, or open themselves to a security breach. For example, “Don’t put a password on the command line; doing so is a security risk.”Success Describes a successful action or an error-free status. Used only in interactive or dynamic content; don’t use this notice type in ordinary static pages. For example, “You’ve successfully deployed an application to GKE.” ## When to use a note notice type\nCreate a note when all of the following are true:\n\nThe information you’re sharing is relevant but not necessary to what the reader is doing right now. If the reader skips the information, they’ll still succeed.\nInterrupting the reader at this point is not an obstacle to the reader. For example, your note isn’t suggesting an alternative that leads the reader down a different path.\nThe information is not part of the flow of what you’re writing—it’s not just a continuation, a result, or a pointer to additional information.\n\n\n\n\n\nDon’t use notes for cross-references.\nDon’t use notes to tell the reader about prerequisites or about steps they should have taken earlier. Information like this should precede the step.\nDon’t make a full procedural step into a note.\nDon’t use notes to provide information that’s necessary for the reader to succeed.\nDon’t use notes for information that’s in flow with the preceding text. For example, don’t use a note to state expected results or to include information that simply describes what precedes.\n\n\n\n\nUse whatever visual presentation for notices is standard for your site.\nIf you’re writing in HTML and your site doesn’t specify what HTML to use for notices, we recommend using HTML code similar to the following example:\n\nNote: All VPC networks include firewall rules.\n\nNote: All VPC networks include firewall rules.Caution: We don’t recommend using a subnet that’s part of a dynamic route.Warning: Do not manually edit or delete generated table entries.Success: You’ve successfully created a Compute Engine instance.",
    "crumbs": [
      "Formatting and organization",
      "Notes and other notices"
    ]
  },
  {
    "objectID": "content/en/formatting/notices.html#pick-a-notice-type",
    "href": "content/en/formatting/notices.html#pick-a-notice-type",
    "title": "Notes, cautions, warnings, and other notices",
    "section": "",
    "text": "The following is a list of commonly used notices.\nNote An ordinary aside or tip. Provides information that is useful but not critical to the reader. For example, “Generating excessive amounts of traffic to external systems can resemble a denial-of-service attack.” For more information, see when to use and when not to use a note notice type.Caution Tells the reader to proceed carefully. For example, “We don’t recommend using a broad 0.0.0.0/0 range that would allow all traffic.”Warning Stronger than a caution notice; it means “Don’t do this” or that this step might be irreversible, such as leading to permanent data loss. If a reader doesn’t heed the warning, they can lose money, lose work, or open themselves to a security breach. For example, “Don’t put a password on the command line; doing so is a security risk.”Success Describes a successful action or an error-free status. Used only in interactive or dynamic content; don’t use this notice type in ordinary static pages. For example, “You’ve successfully deployed an application to GKE.” ## When to use a note notice type\nCreate a note when all of the following are true:\n\nThe information you’re sharing is relevant but not necessary to what the reader is doing right now. If the reader skips the information, they’ll still succeed.\nInterrupting the reader at this point is not an obstacle to the reader. For example, your note isn’t suggesting an alternative that leads the reader down a different path.\nThe information is not part of the flow of what you’re writing—it’s not just a continuation, a result, or a pointer to additional information.",
    "crumbs": [
      "Formatting and organization",
      "Notes and other notices"
    ]
  },
  {
    "objectID": "content/en/formatting/notices.html#when-not-to-use-a-note-notice-type",
    "href": "content/en/formatting/notices.html#when-not-to-use-a-note-notice-type",
    "title": "Notes, cautions, warnings, and other notices",
    "section": "",
    "text": "Don’t use notes for cross-references.\nDon’t use notes to tell the reader about prerequisites or about steps they should have taken earlier. Information like this should precede the step.\nDon’t make a full procedural step into a note.\nDon’t use notes to provide information that’s necessary for the reader to succeed.\nDon’t use notes for information that’s in flow with the preceding text. For example, don’t use a note to state expected results or to include information that simply describes what precedes.",
    "crumbs": [
      "Formatting and organization",
      "Notes and other notices"
    ]
  },
  {
    "objectID": "content/en/formatting/notices.html#examples",
    "href": "content/en/formatting/notices.html#examples",
    "title": "Notes, cautions, warnings, and other notices",
    "section": "",
    "text": "Use whatever visual presentation for notices is standard for your site.\nIf you’re writing in HTML and your site doesn’t specify what HTML to use for notices, we recommend using HTML code similar to the following example:\n\nNote: All VPC networks include firewall rules.\n\nNote: All VPC networks include firewall rules.Caution: We don’t recommend using a subnet that’s part of a dynamic route.Warning: Do not manually edit or delete generated table entries.Success: You’ve successfully created a Compute Engine instance.",
    "crumbs": [
      "Formatting and organization",
      "Notes and other notices"
    ]
  },
  {
    "objectID": "content/en/formatting/units-of-measure.html",
    "href": "content/en/formatting/units-of-measure.html",
    "title": "Units of measurement",
    "section": "",
    "text": "Source: https://developers.google.com/style/units-of-measure\n\nPut a nonbreaking space between the number and the unit.\n\n\nFor most units of measurement, when you specify a number with the unit, use a nonbreaking space between the number and the unit. This guidance applies in both HTML and Markdown.\nFor guidance about when to spell out units, see the Abbreviations page.\n\n✅ Recommended: 64&nbsp;GB (64 GB)\n✅ Recommended: 25&nbsp;mm (25 mm)\n❌ Not recommended: 64 GB\n❌ Not recommended: 64GB\n\nHowever, when the unit of measure is money or percent or degrees of an angle, don’t use a space. For more information, see Currency.\n\n✅ Recommended: $10\n✅ Recommended: £25\n✅ Recommended: 65%\n✅ Recommended: 180°\n\nFor degrees of temperature, don’t use a space before the degree symbol, but do use a nonbreaking space between the degree symbol and the abbreviation for the temperature scale (F or C). For Kelvin temperatures, leave out the degree symbol but use a nonbreaking space before the K.\n\n✅ Recommended: 50°&nbsp;C (50°C)\n✅ Recommended: 300&nbsp;K (300 K)\n\nWhen a number and unit of measurement combine to modify a noun, don’t hyphenate unless the hyphen is needed for clarity.\n\n✅ Recommended: 200&nbsp;GB disk (200 GB disk)\n\n\n\n\nIn a range of numbers, repeat the unit for each number. Unit includes both symbols (like the degree symbol (º)) and abbreviations (like MB for megabytes) but not nouns (like file). For more information, see Range of numbers.\nUse the word to between the numbers, rather than a hyphen. A hyphen can be misinterpreted as a subtraction sign.\n\n✅ Recommended: -40°C to 85°C\n❌ Not recommended: -40-85°C\n\n\n\n\nWhen the components of a unit of measurement are multiplied by each other, hyphenate them.\n\n✅ Recommended: 5 vCPU-hours\n✅ Recommended: 40 person-hours\n\n\n\n\nIn some contexts, it might be appropriate to indicate thousands of something by following a number with a lowercase k. If you do that, then follow these guidelines:\n\nDon’t put a space between the number and k.\nAdd a noun to indicate what the number measures, and to make clear that you’re not using k as an abbreviation for kilobytes.\n✅ Recommended: On this plan, you are limited to 55k download operations and 20k upload operations per day.\n\n\n\n\nIf you’re writing about monetary amounts, make sure that the reader knows what currency you’re referring to. For example, the dollar sign—the $ symbol—can refer to US dollars, Canadian dollars, Mexican pesos, and several other currencies.\nIf there’s any possibility of ambiguity, use a currency indicator before the amount. For details, see section 9.20 and following in the Chicago Manual of Style, 17th edition.\n\n✅ Recommended: US$10\n\n\n\n\nUse per instead of the division slash (/) when space permits. It’s OK to use the division slash when space is limited, such as in a table with small cells.\nShorten per to p only for well-established abbreviations for rate units, such as Gbps for gigabits per second or MBps for megabytes per second.\n\n✅ Recommended: requests per day\n❌ Not recommended: requests/day\n✅ Recommended: Gbps\n❌ Not recommended: Gb/s\n\n\n\n\nUse the same system to measure bytes as the technology that you’re documenting. Don’t use MB if you mean MiB, or GB if you mean GiB. The following table lists common types of decimal and binary units:\n\n\n\nDecimal units\nBinary units\n\n\n\n\nkB (kilobyte, or 1000 bytes)\nKiB (kibibyte, or 1024 bytes)\n\n\nMB (megabyte, or 1000 2 bytes)\nMiB (mebibyte, or 1024 2 bytes)\n\n\nGB (gigabyte, or 1000 3 bytes)\nGiB (gibibyte, or 1024 3 bytes)\n\n\n\nFor more information about abbreviating measurement terms, see When to spell out a term.\n\n\n\nAccompany math concepts and numerals with diagrams or other images to support comprehension. For example, if comparing statistics, consider illustrating percentages in a pie chart or a bar graph.\n\n\n\nAccompany numerical concepts with real-world practical implications to provide tangible meaning. For example, if using a feature incurs additional fees, add a link to pricing calculator.",
    "crumbs": [
      "Formatting and organization",
      "Units of measurement"
    ]
  },
  {
    "objectID": "content/en/formatting/units-of-measure.html#spaces-in-units-of-measurement",
    "href": "content/en/formatting/units-of-measure.html#spaces-in-units-of-measurement",
    "title": "Units of measurement",
    "section": "",
    "text": "For most units of measurement, when you specify a number with the unit, use a nonbreaking space between the number and the unit. This guidance applies in both HTML and Markdown.\nFor guidance about when to spell out units, see the Abbreviations page.\n\n✅ Recommended: 64&nbsp;GB (64 GB)\n✅ Recommended: 25&nbsp;mm (25 mm)\n❌ Not recommended: 64 GB\n❌ Not recommended: 64GB\n\nHowever, when the unit of measure is money or percent or degrees of an angle, don’t use a space. For more information, see Currency.\n\n✅ Recommended: $10\n✅ Recommended: £25\n✅ Recommended: 65%\n✅ Recommended: 180°\n\nFor degrees of temperature, don’t use a space before the degree symbol, but do use a nonbreaking space between the degree symbol and the abbreviation for the temperature scale (F or C). For Kelvin temperatures, leave out the degree symbol but use a nonbreaking space before the K.\n\n✅ Recommended: 50°&nbsp;C (50°C)\n✅ Recommended: 300&nbsp;K (300 K)\n\nWhen a number and unit of measurement combine to modify a noun, don’t hyphenate unless the hyphen is needed for clarity.\n\n✅ Recommended: 200&nbsp;GB disk (200 GB disk)",
    "crumbs": [
      "Formatting and organization",
      "Units of measurement"
    ]
  },
  {
    "objectID": "content/en/formatting/units-of-measure.html#ranges-of-numbers-with-units",
    "href": "content/en/formatting/units-of-measure.html#ranges-of-numbers-with-units",
    "title": "Units of measurement",
    "section": "",
    "text": "In a range of numbers, repeat the unit for each number. Unit includes both symbols (like the degree symbol (º)) and abbreviations (like MB for megabytes) but not nouns (like file). For more information, see Range of numbers.\nUse the word to between the numbers, rather than a hyphen. A hyphen can be misinterpreted as a subtraction sign.\n\n✅ Recommended: -40°C to 85°C\n❌ Not recommended: -40-85°C",
    "crumbs": [
      "Formatting and organization",
      "Units of measurement"
    ]
  },
  {
    "objectID": "content/en/formatting/units-of-measure.html#hyphens-with-multiplied-units",
    "href": "content/en/formatting/units-of-measure.html#hyphens-with-multiplied-units",
    "title": "Units of measurement",
    "section": "",
    "text": "When the components of a unit of measurement are multiplied by each other, hyphenate them.\n\n✅ Recommended: 5 vCPU-hours\n✅ Recommended: 40 person-hours",
    "crumbs": [
      "Formatting and organization",
      "Units of measurement"
    ]
  },
  {
    "objectID": "content/en/formatting/units-of-measure.html#use-k-to-indicate-thousands",
    "href": "content/en/formatting/units-of-measure.html#use-k-to-indicate-thousands",
    "title": "Units of measurement",
    "section": "",
    "text": "In some contexts, it might be appropriate to indicate thousands of something by following a number with a lowercase k. If you do that, then follow these guidelines:\n\nDon’t put a space between the number and k.\nAdd a noun to indicate what the number measures, and to make clear that you’re not using k as an abbreviation for kilobytes.\n✅ Recommended: On this plan, you are limited to 55k download operations and 20k upload operations per day.",
    "crumbs": [
      "Formatting and organization",
      "Units of measurement"
    ]
  },
  {
    "objectID": "content/en/formatting/units-of-measure.html#currency",
    "href": "content/en/formatting/units-of-measure.html#currency",
    "title": "Units of measurement",
    "section": "",
    "text": "If you’re writing about monetary amounts, make sure that the reader knows what currency you’re referring to. For example, the dollar sign—the $ symbol—can refer to US dollars, Canadian dollars, Mexican pesos, and several other currencies.\nIf there’s any possibility of ambiguity, use a currency indicator before the amount. For details, see section 9.20 and following in the Chicago Manual of Style, 17th edition.\n\n✅ Recommended: US$10",
    "crumbs": [
      "Formatting and organization",
      "Units of measurement"
    ]
  },
  {
    "objectID": "content/en/formatting/units-of-measure.html#rates",
    "href": "content/en/formatting/units-of-measure.html#rates",
    "title": "Units of measurement",
    "section": "",
    "text": "Use per instead of the division slash (/) when space permits. It’s OK to use the division slash when space is limited, such as in a table with small cells.\nShorten per to p only for well-established abbreviations for rate units, such as Gbps for gigabits per second or MBps for megabytes per second.\n\n✅ Recommended: requests per day\n❌ Not recommended: requests/day\n✅ Recommended: Gbps\n❌ Not recommended: Gb/s",
    "crumbs": [
      "Formatting and organization",
      "Units of measurement"
    ]
  },
  {
    "objectID": "content/en/formatting/units-of-measure.html#decimal-and-binary-units",
    "href": "content/en/formatting/units-of-measure.html#decimal-and-binary-units",
    "title": "Units of measurement",
    "section": "",
    "text": "Use the same system to measure bytes as the technology that you’re documenting. Don’t use MB if you mean MiB, or GB if you mean GiB. The following table lists common types of decimal and binary units:\n\n\n\nDecimal units\nBinary units\n\n\n\n\nkB (kilobyte, or 1000 bytes)\nKiB (kibibyte, or 1024 bytes)\n\n\nMB (megabyte, or 1000 2 bytes)\nMiB (mebibyte, or 1024 2 bytes)\n\n\nGB (gigabyte, or 1000 3 bytes)\nGiB (gibibyte, or 1024 3 bytes)\n\n\n\nFor more information about abbreviating measurement terms, see When to spell out a term.",
    "crumbs": [
      "Formatting and organization",
      "Units of measurement"
    ]
  },
  {
    "objectID": "content/en/formatting/units-of-measure.html#provide-visuals-for-math-concepts",
    "href": "content/en/formatting/units-of-measure.html#provide-visuals-for-math-concepts",
    "title": "Units of measurement",
    "section": "",
    "text": "Accompany math concepts and numerals with diagrams or other images to support comprehension. For example, if comparing statistics, consider illustrating percentages in a pie chart or a bar graph.",
    "crumbs": [
      "Formatting and organization",
      "Units of measurement"
    ]
  },
  {
    "objectID": "content/en/formatting/units-of-measure.html#accompany-numerical-concepts-with-real-world-practical-implications",
    "href": "content/en/formatting/units-of-measure.html#accompany-numerical-concepts-with-real-world-practical-implications",
    "title": "Units of measurement",
    "section": "",
    "text": "Accompany numerical concepts with real-world practical implications to provide tangible meaning. For example, if using a feature incurs additional fees, add a link to pricing calculator.",
    "crumbs": [
      "Formatting and organization",
      "Units of measurement"
    ]
  },
  {
    "objectID": "content/en/formatting/images.html",
    "href": "content/en/formatting/images.html",
    "title": "Diagrams, figures, and other images",
    "section": "",
    "text": "Source: https://developers.google.com/style/images\n\n\n\nConsider the following guidelines for images:\n\nTo create a diagram, use any drawing tool.\nTo take a screenshot, use any screen capture tool.\nDon’t use images of text, code samples, or terminal output. Use actual text.\nFor diagrams (architectural drawings, flow diagrams, and so on, as distinct from screenshots), use the following guidelines:\n\nUse SVG files if possible because SVGs stay sharp when you zoom in on the image.\nIf you don’t have an SVG file, then save your image as a PNG file unless you have a good reason to use a different format.\nRegardless of the format, don’t use a transparent background. In particular, a transparent background can cause issues if you use the Devsite lightbox widget.\n\nFor animations and videos, don’t use animated GIF. Instead, use a more resource-efficient format (such as MP4).\nBe consistent for a given document or doc set in what operating system you use for screenshots—for example, take all screenshots on macOS or on Linux. Similarly, be consistent in how your screenshots look. If you take screenshots that include drop shadows of the main window, make sure that similar screenshots are consistent.\nCrop screenshots to show the relevant information. For example, don’t include the full window if you just want to show a single button or menu item. Cropping helps the reader focus on the information that you want to convey in the screenshot, and it can help future-proof the screenshot if other parts of the UI change.\nDon’t include personally identifying information (PII) in screenshots.\n\nIf a source screenshot includes PII, hide it with a solid-color overlay with 100% opacity. Don’t rely on blurs, mosaic effects, or similar image-processing effects to obscure PII; such effects can be reversed to reveal the original information.\nIf you’re exporting an image to a format that can include information on separate layers (for example, PDF or TIFF), flatten the image on export.\n\nDon’t use image maps. Instead, provide a list of text references following the image. Reasons to avoid image maps include the following:\n\nImage maps are problematic for accessibility.\nBrowser implementation for image maps varies, and image maps might not function correctly on mobile devices due to scaling.\nThe technical complexity of creating and maintaining a coordinates overlay is often prohibitive.\nUse descriptive filenames for your image files. For more information, see Filenames and file types.\n\n\n\n\n\nThere are differences between alt text, figure captions, and figure descriptions. Independently of these elements, an introductory sentence should precede most images. The sentence can end with a colon or a period; usually a colon if it immediately precedes the image, usually a period if there’s more material (such as a note paragraph) between the introduction and the image. Always introduce an image with a complete sentence. You don’t need to introduce screenshots that immediately follow procedural text that describes a UI.\nThe following diagram shows how you can apply bounded contexts to an existing ecommerce application:\n\n\n\nImage 1: Bounded contexts are applied to an application.\n\n\nFigure 1. Application capabilities are separated into bounded contexts that migrate to services.\nIn figure 1, the ecommerce application’s capabilities are separated into bounded contexts and migrated to services as follows:\n\nOrder management and fulfillment capabilities are bound into the following categories:\n\nThe order management capability migrates to the order service.\nThe logistics delivery management capability migrates to the delivery service.\nThe inventory capability migrates to the inventory service.\n\nAccounting capabilities are bound into a single category:\n\nThe consumer, sellers, and third-party capabilities are bound together and migrate to the account service.\n\nThe following diagram shows how you can apply bounded contexts to an existing ecommerce application:\n\n\n\n\nFigure 1. Application capabilities are separated into bounded contexts that migrate to services.\n\n\n\n\nIn figure 1, the ecommerce application’s capabilities are separated into bounded contexts and migrated to services as follows:\n\n\n\nOrder management and fulfillment capabilities are bound into the following categories:\n\n\nThe order management capability migrates to the order service.\n\n\nThe logistics delivery management capability migrates to the delivery service.\n\n\nThe inventory capability migrates to the inventory service.\n\n\n\n\nAccounting capabilities are bound into a single category:\n\n\nThe consumer, sellers, and third-party capabilities are bound together and migrate to the account service.\n\n\n\n\n\nThe following diagram shows how you can apply bounded contexts to an existing ecommerce application:\n\n\n\n\n\nBounded contexts are applied to an application.\n\n\nFigure 1. Application capabilities are separated into bounded contexts that migrate to services.\nIn figure 1, the ecommerce application’s capabilities are separated into bounded contexts and migrated to services as follows:\n\nOrder management and fulfillment capabilities are bound into the following categories:\n\nThe order management capability migrates to the order service.\nThe logistics delivery management capability migrates to the delivery service.\nThe inventory capability migrates to the inventory service.\n\nAccounting capabilities are bound into a single category:\n\nThe consumer, sellers, and third-party capabilities are bound together and migrate to the account service.\n\n\n\n\nAlt text is a concise description of the image that can replace the image in situations where the image isn’t visible, such as people using screen readers, people using text-only browsers, or people who have a low-bandwidth internet connection. Alt text should consider the context of the image, not just its content. The presence of alt attributes helps support navigability in screen readers, markup validation, and search engine optimization. For more information, see alt attribute.\nHowever, if the image is decorative (not informative) or it’s provided only as a visual aid for information that is already expressed in text, then provide empty alternative text (alt=\"\") so it’s ignored by assistive technologies. Examples of decorative images include the following:\n\nA screenshot of the UI showing a user how to fill out fields.\nIcons in the UI.\nImages whose purpose is to make the page more visually appealing.\n\nWhen using the img element, the alt attribute is required, even if its assigned value is an empty string (alt=\"\"). If you exclude the alt attribute completely, then screen readers might instead read the filename aloud.\nAs per the HTML specification, “the most general rule to consider when writing alternative text is the following: the intent is that replacing every image with the text of its alt attribute does not change the meaning of the page.” So if the alternative text is redundant with surrounding text or it’s not useful to visually impaired readers, use the empty tag.\nConsider the following when writing alt text:\n\nDon’t include phrases like Image of or Photo of.\nInclude punctuation. When screen readers encounter punctuation, they pause before continuing.\nUse consistent alt text for repeated instances of an image, such as controls, status indicators, or icons that appear multiple times in your document.\nWhen possible, avoid using all-caps in alt text. Some screen readers read capital letters as each letter individually.\nIntroduce diagrams in the text, not in the alt text.\nDon’t use figure captions to replace alt text.\nUse full sentences or a noun phrase.\n✅ Recommended:\n\nalt=\"Architecture of\n      an app that's built with Apps Script.\"\n\n✅ Recommended:\n\nalt=\"A card\n          message.\"\n\nWrite short, descriptive alt text in 155 characters or less.\nIf the image presents more useful information than you can fit in the 155 character limit, include a brief summary of the image in the altattribute and also include a more extensive description of the image in the text.\nAlt text should consider the context of the image, not just its content.\n\n\n\n\nFigure captions are concise and comprehensive summaries of a figure or image. Figure captions (and figure numbers) are optional. When using the figcaption element, you must wrap both the figcaption and img elements in the figure element to ensure that the figure caption is properly associated with the image.\nConsider the following when writing figure captions:\n\nFigure numbers are optional. If you use figure numbers, use the form “Figure NUMBER.DESCRIPTION.”\n✅ Recommended: Figure 1. Application capabilities are separated into bounded contexts that migrate to services.\n✅ Recommended: Application capabilities are separated into bounded contexts that migrate to services.\n❌ Not recommended: Bounded contexts\nWe recommend using complete sentences in figure captions.\nAlways use end punctuation for captions.\nWhen you refer to a figure, don’t use spatial descriptions such as “the image above.”\n\nIf you used figure numbers, consistently refer to the figure by number. For example: “… as shown in figure 1.” Don’t capitalize the word figure in a reference to a figure, except at the start of a sentence.\nIf you can’t use figure numbers, show the figure again, for accessibility and user experience reasons.\n\nDon’t include the figure caption in a sentence referencing the figure.\n\n\n\n\nA figure description is text that provides a more detailed explanation of information represented by a figure. In other words, the information that is conveyed in the image is captured in the text. Any new information should be conveyed through text and not introduced in a figure or image.\nConsider the following when writing figure descriptions:\n\nCreate text that conveys the same information as the figure.\nUse when a figure caption doesn’t convey the purpose or complete information of the figure.\nUse punctuation in figure descriptions.\n\n\n\n\nIn most cases, avoid embedding explanatory text in screenshot graphics; text that’s incorporated into a graphic hurts accessibility and searchability, and increases localization costs if figures are localized. If you must embed text in an image, then be sure to also provide the same information in a form that people with visual disabilities can use, such as a figure description.\nWhen you must include text in figures and images, use the following guidelines:\n\nKeep text brief. Avoid complete sentences and punctuation when possible.\nDon’t embed figure descriptions or captions in the figure or image. Instead, put figure descriptions and captions in text following the figure.\nDon’t create new abbreviations to condense text.\nUse sentence case. Follow guidelines for capitalization for titles and headings.\nUse numbered callouts in figures to help you write a figure description, but don’t use callouts for detailed annotations in the image.\nUse full trademarked product names.\n\n\n\n\nFor more information about the accessibility of diagrams and screenshots, see the following resources:\n\nWeb Content Accessibility Guidelines (WCAG)\nGeneral text alternative guidelines from WCAG\nUsing alt attributes for img elements\nProviding a long description in text near the non-text content\nComplex images\n\n\n\n\n\nModern browsers can use high-resolution images if they are available; this makes the images look better on high-resolution displays.\nTo provide a high-resolution image, use the img element’s srcset attribute in addition to the standard src attribute. The srcset attribute lets you specify different image assets for different screen resolutions. It accepts a comma-delimited set of image URLs, with the target screen resolution specified by a size qualifier: 1x meaning the “standard” resolution, 2x meaning “double” the resolution, and so on.\nIf a web browser supports the srcset attribute, it selects an image from the specified images that’s an appropriate resolution for the current display. If the browser doesn’t support the srcset attribute, it uses the image in the src attribute. Consequently, you must always still include the src attribute.\nFor example, to provide both a standard resolution image and a double-resolution image, add a srcset attribute and specify both 1x and 2x image assets:\n&lt;img src=“/assets/images/skateboard.png” srcset=“/assets/images/skateboard.png 1x, /assets/images/skateboard_2x.png 2x” width=“375” alt=“” /&gt; - The width attribute matches the CSS pixel size used for the page dimensions. (The height is automatically calculated based on the width and the image’s proportions; don’t state it explicitly.) - Set the src attribute to point to the standard-resolution (1x) image, not the 2x version. (Almost everyone who has a high-resolution screen also has a modern browser that can recognize the srcset attribute. The src attribute is mainly used by older browsers on low-resolution devices, which should download the smaller, low-resolution image.) Even if your original image is the higher-resolution image, set the src attribute to use the standard-resolution version; don’t force a reader using a low-resolution screen to download a graphic that’s higher-resolution than they can view. - The filename for the double-resolution image (in this case, skateboard*2x.png) can be anything—it’s the “2x” value following the filename that informs the browser which resolution the file is. But it’s a good idea to use a filename of the form BASENAME*2x.EXTENSION to make clear to human readers that it’s a double-resolution version of BASENAME.EXTENSION. - The double-resolution image must be exactly twice the width and height of the standard image, give or take a pixel. (For example, it’s okay for the double-resolution image to be 875x500 and the standard size to be 438x250.) - Don’t scale up an existing 1x image to make the 2x version. If all you have is the 1x version, then use it alone. But if you’re starting with a high-resolution image (at 2x resolution or better), then you can scale it down to appropriate dimensions for 1x and 2x. - Currently, only an additional 2x image is necessary, but someday screen PPI may increase further. So the srcset attribute supports further alternative sizes, each specified by the appropriate multiplier, such as 3x or 4x. - A browser that supports the srcset attribute uses only the images provided in that attribute—it ignores the src attribute. So specify all available image resolutions in the srcset attribute.\nFor more information, see the HTML specification for the img element.\n\n\n\nConsider the following guidelines for adding images to pages:\n\nDon’t try to place an image manually; for example, don’t use a style attribute or other workarounds to control the image’s left/right justification or the margins around the image. Instead, use your site’s standard CSS image styles.\nDon’t make your image too small. It’s fine for an image to take up the full width of a page.\nConsider how the image will look when printed out.\nIn general, don’t use an image that’s wider than the column it appears in. On developer.android.com, for example, the main-body column is 856px wide, so use images that are no wider than that. In that context, the high-resolution 2x version of the image should be no wider than 1712px.\n\nScreenshots at full resolution often take up too much space on the page, so you may have to resize them.\nIf the graphics were created by someone else (for example, a designer on the team you’re supporting), it may be fairly trivial for them to provide you with images at the appropriate size. If the images they provide are wider than 856px, ask the designer if they can provide the relevant graphics as 856px/1712px pairs.\n\nDon’t link to the figure from within the same page unless it’s a very long page and you’re linking to it from quite far away on the page.\nDon’t center the image on the page.\nDon’t put an img element inside a p element.",
    "crumbs": [
      "Formatting and organization",
      "Figures and other images"
    ]
  },
  {
    "objectID": "content/en/formatting/images.html#create-and-save-images",
    "href": "content/en/formatting/images.html#create-and-save-images",
    "title": "Diagrams, figures, and other images",
    "section": "",
    "text": "Consider the following guidelines for images:\n\nTo create a diagram, use any drawing tool.\nTo take a screenshot, use any screen capture tool.\nDon’t use images of text, code samples, or terminal output. Use actual text.\nFor diagrams (architectural drawings, flow diagrams, and so on, as distinct from screenshots), use the following guidelines:\n\nUse SVG files if possible because SVGs stay sharp when you zoom in on the image.\nIf you don’t have an SVG file, then save your image as a PNG file unless you have a good reason to use a different format.\nRegardless of the format, don’t use a transparent background. In particular, a transparent background can cause issues if you use the Devsite lightbox widget.\n\nFor animations and videos, don’t use animated GIF. Instead, use a more resource-efficient format (such as MP4).\nBe consistent for a given document or doc set in what operating system you use for screenshots—for example, take all screenshots on macOS or on Linux. Similarly, be consistent in how your screenshots look. If you take screenshots that include drop shadows of the main window, make sure that similar screenshots are consistent.\nCrop screenshots to show the relevant information. For example, don’t include the full window if you just want to show a single button or menu item. Cropping helps the reader focus on the information that you want to convey in the screenshot, and it can help future-proof the screenshot if other parts of the UI change.\nDon’t include personally identifying information (PII) in screenshots.\n\nIf a source screenshot includes PII, hide it with a solid-color overlay with 100% opacity. Don’t rely on blurs, mosaic effects, or similar image-processing effects to obscure PII; such effects can be reversed to reveal the original information.\nIf you’re exporting an image to a format that can include information on separate layers (for example, PDF or TIFF), flatten the image on export.\n\nDon’t use image maps. Instead, provide a list of text references following the image. Reasons to avoid image maps include the following:\n\nImage maps are problematic for accessibility.\nBrowser implementation for image maps varies, and image maps might not function correctly on mobile devices due to scaling.\nThe technical complexity of creating and maintaining a coordinates overlay is often prohibitive.\nUse descriptive filenames for your image files. For more information, see Filenames and file types.",
    "crumbs": [
      "Formatting and organization",
      "Figures and other images"
    ]
  },
  {
    "objectID": "content/en/formatting/images.html#text-associated-with-images",
    "href": "content/en/formatting/images.html#text-associated-with-images",
    "title": "Diagrams, figures, and other images",
    "section": "",
    "text": "There are differences between alt text, figure captions, and figure descriptions. Independently of these elements, an introductory sentence should precede most images. The sentence can end with a colon or a period; usually a colon if it immediately precedes the image, usually a period if there’s more material (such as a note paragraph) between the introduction and the image. Always introduce an image with a complete sentence. You don’t need to introduce screenshots that immediately follow procedural text that describes a UI.\nThe following diagram shows how you can apply bounded contexts to an existing ecommerce application:\n\n\n\nImage 1: Bounded contexts are applied to an application.\n\n\nFigure 1. Application capabilities are separated into bounded contexts that migrate to services.\nIn figure 1, the ecommerce application’s capabilities are separated into bounded contexts and migrated to services as follows:\n\nOrder management and fulfillment capabilities are bound into the following categories:\n\nThe order management capability migrates to the order service.\nThe logistics delivery management capability migrates to the delivery service.\nThe inventory capability migrates to the inventory service.\n\nAccounting capabilities are bound into a single category:\n\nThe consumer, sellers, and third-party capabilities are bound together and migrate to the account service.\n\nThe following diagram shows how you can apply bounded contexts to an existing ecommerce application:\n\n\n\n\nFigure 1. Application capabilities are separated into bounded contexts that migrate to services.\n\n\n\n\nIn figure 1, the ecommerce application’s capabilities are separated into bounded contexts and migrated to services as follows:\n\n\n\nOrder management and fulfillment capabilities are bound into the following categories:\n\n\nThe order management capability migrates to the order service.\n\n\nThe logistics delivery management capability migrates to the delivery service.\n\n\nThe inventory capability migrates to the inventory service.\n\n\n\n\nAccounting capabilities are bound into a single category:\n\n\nThe consumer, sellers, and third-party capabilities are bound together and migrate to the account service.\n\n\n\n\n\nThe following diagram shows how you can apply bounded contexts to an existing ecommerce application:\n\n\n\n\n\nBounded contexts are applied to an application.\n\n\nFigure 1. Application capabilities are separated into bounded contexts that migrate to services.\nIn figure 1, the ecommerce application’s capabilities are separated into bounded contexts and migrated to services as follows:\n\nOrder management and fulfillment capabilities are bound into the following categories:\n\nThe order management capability migrates to the order service.\nThe logistics delivery management capability migrates to the delivery service.\nThe inventory capability migrates to the inventory service.\n\nAccounting capabilities are bound into a single category:\n\nThe consumer, sellers, and third-party capabilities are bound together and migrate to the account service.\n\n\n\n\nAlt text is a concise description of the image that can replace the image in situations where the image isn’t visible, such as people using screen readers, people using text-only browsers, or people who have a low-bandwidth internet connection. Alt text should consider the context of the image, not just its content. The presence of alt attributes helps support navigability in screen readers, markup validation, and search engine optimization. For more information, see alt attribute.\nHowever, if the image is decorative (not informative) or it’s provided only as a visual aid for information that is already expressed in text, then provide empty alternative text (alt=\"\") so it’s ignored by assistive technologies. Examples of decorative images include the following:\n\nA screenshot of the UI showing a user how to fill out fields.\nIcons in the UI.\nImages whose purpose is to make the page more visually appealing.\n\nWhen using the img element, the alt attribute is required, even if its assigned value is an empty string (alt=\"\"). If you exclude the alt attribute completely, then screen readers might instead read the filename aloud.\nAs per the HTML specification, “the most general rule to consider when writing alternative text is the following: the intent is that replacing every image with the text of its alt attribute does not change the meaning of the page.” So if the alternative text is redundant with surrounding text or it’s not useful to visually impaired readers, use the empty tag.\nConsider the following when writing alt text:\n\nDon’t include phrases like Image of or Photo of.\nInclude punctuation. When screen readers encounter punctuation, they pause before continuing.\nUse consistent alt text for repeated instances of an image, such as controls, status indicators, or icons that appear multiple times in your document.\nWhen possible, avoid using all-caps in alt text. Some screen readers read capital letters as each letter individually.\nIntroduce diagrams in the text, not in the alt text.\nDon’t use figure captions to replace alt text.\nUse full sentences or a noun phrase.\n✅ Recommended:\n\nalt=\"Architecture of\n      an app that's built with Apps Script.\"\n\n✅ Recommended:\n\nalt=\"A card\n          message.\"\n\nWrite short, descriptive alt text in 155 characters or less.\nIf the image presents more useful information than you can fit in the 155 character limit, include a brief summary of the image in the altattribute and also include a more extensive description of the image in the text.\nAlt text should consider the context of the image, not just its content.\n\n\n\n\nFigure captions are concise and comprehensive summaries of a figure or image. Figure captions (and figure numbers) are optional. When using the figcaption element, you must wrap both the figcaption and img elements in the figure element to ensure that the figure caption is properly associated with the image.\nConsider the following when writing figure captions:\n\nFigure numbers are optional. If you use figure numbers, use the form “Figure NUMBER.DESCRIPTION.”\n✅ Recommended: Figure 1. Application capabilities are separated into bounded contexts that migrate to services.\n✅ Recommended: Application capabilities are separated into bounded contexts that migrate to services.\n❌ Not recommended: Bounded contexts\nWe recommend using complete sentences in figure captions.\nAlways use end punctuation for captions.\nWhen you refer to a figure, don’t use spatial descriptions such as “the image above.”\n\nIf you used figure numbers, consistently refer to the figure by number. For example: “… as shown in figure 1.” Don’t capitalize the word figure in a reference to a figure, except at the start of a sentence.\nIf you can’t use figure numbers, show the figure again, for accessibility and user experience reasons.\n\nDon’t include the figure caption in a sentence referencing the figure.\n\n\n\n\nA figure description is text that provides a more detailed explanation of information represented by a figure. In other words, the information that is conveyed in the image is captured in the text. Any new information should be conveyed through text and not introduced in a figure or image.\nConsider the following when writing figure descriptions:\n\nCreate text that conveys the same information as the figure.\nUse when a figure caption doesn’t convey the purpose or complete information of the figure.\nUse punctuation in figure descriptions.\n\n\n\n\nIn most cases, avoid embedding explanatory text in screenshot graphics; text that’s incorporated into a graphic hurts accessibility and searchability, and increases localization costs if figures are localized. If you must embed text in an image, then be sure to also provide the same information in a form that people with visual disabilities can use, such as a figure description.\nWhen you must include text in figures and images, use the following guidelines:\n\nKeep text brief. Avoid complete sentences and punctuation when possible.\nDon’t embed figure descriptions or captions in the figure or image. Instead, put figure descriptions and captions in text following the figure.\nDon’t create new abbreviations to condense text.\nUse sentence case. Follow guidelines for capitalization for titles and headings.\nUse numbered callouts in figures to help you write a figure description, but don’t use callouts for detailed annotations in the image.\nUse full trademarked product names.\n\n\n\n\nFor more information about the accessibility of diagrams and screenshots, see the following resources:\n\nWeb Content Accessibility Guidelines (WCAG)\nGeneral text alternative guidelines from WCAG\nUsing alt attributes for img elements\nProviding a long description in text near the non-text content\nComplex images",
    "crumbs": [
      "Formatting and organization",
      "Figures and other images"
    ]
  },
  {
    "objectID": "content/en/formatting/images.html#high-resolution-images",
    "href": "content/en/formatting/images.html#high-resolution-images",
    "title": "Diagrams, figures, and other images",
    "section": "",
    "text": "Modern browsers can use high-resolution images if they are available; this makes the images look better on high-resolution displays.\nTo provide a high-resolution image, use the img element’s srcset attribute in addition to the standard src attribute. The srcset attribute lets you specify different image assets for different screen resolutions. It accepts a comma-delimited set of image URLs, with the target screen resolution specified by a size qualifier: 1x meaning the “standard” resolution, 2x meaning “double” the resolution, and so on.\nIf a web browser supports the srcset attribute, it selects an image from the specified images that’s an appropriate resolution for the current display. If the browser doesn’t support the srcset attribute, it uses the image in the src attribute. Consequently, you must always still include the src attribute.\nFor example, to provide both a standard resolution image and a double-resolution image, add a srcset attribute and specify both 1x and 2x image assets:\n&lt;img src=“/assets/images/skateboard.png” srcset=“/assets/images/skateboard.png 1x, /assets/images/skateboard_2x.png 2x” width=“375” alt=“” /&gt; - The width attribute matches the CSS pixel size used for the page dimensions. (The height is automatically calculated based on the width and the image’s proportions; don’t state it explicitly.) - Set the src attribute to point to the standard-resolution (1x) image, not the 2x version. (Almost everyone who has a high-resolution screen also has a modern browser that can recognize the srcset attribute. The src attribute is mainly used by older browsers on low-resolution devices, which should download the smaller, low-resolution image.) Even if your original image is the higher-resolution image, set the src attribute to use the standard-resolution version; don’t force a reader using a low-resolution screen to download a graphic that’s higher-resolution than they can view. - The filename for the double-resolution image (in this case, skateboard*2x.png) can be anything—it’s the “2x” value following the filename that informs the browser which resolution the file is. But it’s a good idea to use a filename of the form BASENAME*2x.EXTENSION to make clear to human readers that it’s a double-resolution version of BASENAME.EXTENSION. - The double-resolution image must be exactly twice the width and height of the standard image, give or take a pixel. (For example, it’s okay for the double-resolution image to be 875x500 and the standard size to be 438x250.) - Don’t scale up an existing 1x image to make the 2x version. If all you have is the 1x version, then use it alone. But if you’re starting with a high-resolution image (at 2x resolution or better), then you can scale it down to appropriate dimensions for 1x and 2x. - Currently, only an additional 2x image is necessary, but someday screen PPI may increase further. So the srcset attribute supports further alternative sizes, each specified by the appropriate multiplier, such as 3x or 4x. - A browser that supports the srcset attribute uses only the images provided in that attribute—it ignores the src attribute. So specify all available image resolutions in the srcset attribute.\nFor more information, see the HTML specification for the img element.",
    "crumbs": [
      "Formatting and organization",
      "Figures and other images"
    ]
  },
  {
    "objectID": "content/en/formatting/images.html#layout-of-images-on-a-page",
    "href": "content/en/formatting/images.html#layout-of-images-on-a-page",
    "title": "Diagrams, figures, and other images",
    "section": "",
    "text": "Consider the following guidelines for adding images to pages:\n\nDon’t try to place an image manually; for example, don’t use a style attribute or other workarounds to control the image’s left/right justification or the margins around the image. Instead, use your site’s standard CSS image styles.\nDon’t make your image too small. It’s fine for an image to take up the full width of a page.\nConsider how the image will look when printed out.\nIn general, don’t use an image that’s wider than the column it appears in. On developer.android.com, for example, the main-body column is 856px wide, so use images that are no wider than that. In that context, the high-resolution 2x version of the image should be no wider than 1712px.\n\nScreenshots at full resolution often take up too much space on the page, so you may have to resize them.\nIf the graphics were created by someone else (for example, a designer on the team you’re supporting), it may be fairly trivial for them to provide you with images at the appropriate size. If the images they provide are wider than 856px, ask the designer if they can provide the relevant graphics as 856px/1712px pairs.\n\nDon’t link to the figure from within the same page unless it’s a very long page and you’re linking to it from quite far away on the page.\nDon’t center the image on the page.\nDon’t put an img element inside a p element.",
    "crumbs": [
      "Formatting and organization",
      "Figures and other images"
    ]
  },
  {
    "objectID": "content/en/formatting/format-examples.html",
    "href": "content/en/formatting/format-examples.html",
    "title": "Format examples",
    "section": "",
    "text": "Format examples\n\nSource: https://developers.google.com/style/format-examples\n\nTo introduce an example in a sentence, use the guidance in the following table:\n\n\n\n\n\n\n\n\nGuidance\nRecommended\nNot recommended\n\n\n\n\nAt the end of a sentence, use a comma or an em dash.\nEnter a name for the instance, such as my-instance-99. Enter a name for the instance—for example, my-instance-99.\nEnter a name for the instance, for example, my-instance-99. Enter a name for the instance; for example, my-instance-99. Enter a name for the instance (for example, my-instance-99).\n\n\nIn the middle of a sentence, use parentheses if the example is short. Otherwise, rewrite the sentence.\nEnter a six-digit hex number (for example, 228B22), and then click OK. Enter a six-digit hex number, such as 228B22, and then click OK. Enter a six-digit hex number, and then click OK. For example, if you want the color forest green, enter 228B22.\nEnter a six-digit hex number (for example, if you want the color forest green, enter 228B22), and then click OK.\n\n\n\nFor more information, see Parentheses.\n\n\n\n\n Back to top",
    "crumbs": [
      "Formatting and organization",
      "Examples"
    ]
  },
  {
    "objectID": "content/en/formatting/footnotes.html",
    "href": "content/en/formatting/footnotes.html",
    "title": "Footnotes",
    "section": "",
    "text": "Footnotes\n\nSource: https://developers.google.com/style/footnotes\n\nA footnote is an annotation with additional information usually provided at the end of a page, chapter, or book. We recommend avoiding footnotes because they aren’t accessible and can present challenges for localization efforts.\nInstead of a footnote, consider using the following formats to convey information:\n\nAdd a cross-reference.\nUse a note.\nPut it in a parenthetical.\n\nIf the only way to convey this information is to use a footnote, then use a superscript number—for example, &lt;sup&gt;1&lt;/sup&gt;.\n\n✅ Recommended: You want to add a footnote to this sentence.1\n\n1 Put this footnote at the bottom of the page.\n\n\n\n\n Back to top",
    "crumbs": [
      "Formatting and organization",
      "Footnotes"
    ]
  },
  {
    "objectID": "content/en/formatting/plural-single-letter.html",
    "href": "content/en/formatting/plural-single-letter.html",
    "title": "Pluralize a single letter",
    "section": "",
    "text": "Pluralize a single letter\n\nSource: https://developers.google.com/style/plural-single-letter\n\nTo form the plural of a single letter, italicize the letter and add an apostrophe followed by the unitalicized letter s.\n\n✅ Recommended: We called tech support because the printer wasn’t printing uppercase B’s or lowercase p’s.\n✅ Recommended: If you still use a pen and paper, dotting your i’s is still necessary. Cross your t’s, too.\n\nWhen the capitalization is irrelevant, use uppercase.\n\n✅ Recommended: Mind your P’s and Q’s.\n\n\n\n\n\n Back to top",
    "crumbs": [
      "Formatting and organization",
      "Plural of a single letter"
    ]
  },
  {
    "objectID": "content/en/general-principles/tone.html",
    "href": "content/en/general-principles/tone.html",
    "title": "Voice and tone",
    "section": "",
    "text": "In your documents, aim for a voice and tone that’s conversational, friendly, and respectful without using slang or being overly colloquial or frivolous; a voice that’s casual and natural and approachable, not pedantic or pushy. Try to sound like a knowledgeable friend who understands what the developer wants to do.\nDon’t try to write exactly the way you speak; you probably speak more colloquially and verbosely than you should write, at least for developer documentation. But aim for a conversational tone rather than a formal one.\nDon’t try to be super-entertaining, but also don’t aim for super-dry. Be human, let your personality show, and be memorable. But remember that the primary purpose of the document is to provide information to someone who’s looking for it and may be in a hurry.\nConsider that readers come from many different cultures and may have varying levels of ability reading English. As much as possible, avoid culturally specific references. Simple and consistent writing can also make it easier to translate documents into other languages. For more information, see Writing for a global audience.\nFor other writing best practices, see the following resources:",
    "crumbs": [
      "General principles",
      "Voice and tone"
    ]
  },
  {
    "objectID": "content/en/general-principles/tone.html#some-things-to-avoid-where-possible",
    "href": "content/en/general-principles/tone.html#some-things-to-avoid-where-possible",
    "title": "Voice and tone",
    "section": "Some things to avoid where possible",
    "text": "Some things to avoid where possible\n\nBuzzwords or technical jargon.\nBeing too cutesy.\nAbleist language or figures of speech.\nPlaceholder phrases like please note and at this time.\nChoppy or long-winded sentences.\nStarting all sentences with the same phrase (such as You can or To do).\nCurrent pop-culture references.\nExclamation marks, except in rare really exciting moments.\nWackiness, zaniness, and goofiness.\nMixing metaphors or taking a metaphor too far.\nPhrasing that denigrates or insults any group of people.\nPhrasing in terms of let’s do something.\nUsing phrases like simply, It’s that simple, It’s easy, or quickly in a procedure.\nInternet slang, or other internet abbreviations such as tl;dr or ymmv.",
    "crumbs": [
      "General principles",
      "Voice and tone"
    ]
  },
  {
    "objectID": "content/en/general-principles/tone.html#some-techniques-and-approaches-to-consider",
    "href": "content/en/general-principles/tone.html#some-techniques-and-approaches-to-consider",
    "title": "Voice and tone",
    "section": "Some techniques and approaches to consider",
    "text": "Some techniques and approaches to consider\n\nIf you’re having trouble expressing something, step back and ask yourself, “What am I trying to say?” Often, the answer you give yourself reveals what you should be saying in the document.\nIf you’re uncertain about your phrasing or tone, ask a colleague to take a look.\nTry reading parts of your document out loud, or at least mouthing the words. Does it sound natural? Not every sentence has to sound natural when spoken; these are written documents. But if you come across a sentence that’s awkward or confusing when spoken, consider whether you can make it more conversational.\nUse transitions between sentences. Phrases like Though or This way can make paragraphs less stilted. (Then again, sometimes transitions like However or Nonetheless can make paragraphs more stilted.)\nEven if you’re having trouble hitting the right tone, make sure you’re communicating useful information in a clear and direct way; that’s the most important part.",
    "crumbs": [
      "General principles",
      "Voice and tone"
    ]
  },
  {
    "objectID": "content/en/general-principles/tone.html#politeness-and-use-of-please",
    "href": "content/en/general-principles/tone.html#politeness-and-use-of-please",
    "title": "Voice and tone",
    "section": "Politeness and use of please",
    "text": "Politeness and use of please\nIt’s great to be polite, but using please in a set of instructions is overdoing the politeness.\n\n✅ Recommended: To view the document, click View.\n❌ Not recommended: To view the document, please click View.\n✅ Recommended: For more information, see [link to other document].\n❌ Not recommended: For more information, please see [link to other document].",
    "crumbs": [
      "General principles",
      "Voice and tone"
    ]
  },
  {
    "objectID": "content/en/general-principles/tone.html#examples",
    "href": "content/en/general-principles/tone.html#examples",
    "title": "Voice and tone",
    "section": "Examples",
    "text": "Examples\n\n\n\n\n\n\n\n\nToo informal\nJust about right\nToo formal\n\n\n\n\nDude! This API is totally awesome!\nThis API lets you collect data about what your users like.\nThe API documented by this page may enable the acquisition of information pertaining to user preferences.\n\n\nJust like a certain pop star, this call gets your telephone number. The easy way to ask for someone’s digits!\nTo get the user’s phone number, call user.phoneNumber.get.\nThe telephone number can be retrieved by the developer via the simple expedient of using the get method on the user object’s phoneNumber property.\n\n\nThen—BOOM—just garbage-collect, and you’re golden.\nTo clean up, call the collectGarbage method.\nPlease note that completion of the task requires the following prerequisite: executing an automated memory management function.",
    "crumbs": [
      "General principles",
      "Voice and tone"
    ]
  },
  {
    "objectID": "content/en/general-principles/prescriptive-documentation.html",
    "href": "content/en/general-principles/prescriptive-documentation.html",
    "title": "Prescriptive documentation",
    "section": "",
    "text": "Write prescriptive documentation.\nPrescriptive (or opinionated) documentation recommends a way to achieve tasks and accomplish goals. It tells the reader what to do instead of giving them a list of options to choose from. When a goal or task is complex and involves multiple approaches or products, prescriptive documentation recommends a path.\nPrescriptive writing affects several aspects of documentation:\nFor instance, best practice documents are typically prescriptive documents. For an example, see Operations best practices.",
    "crumbs": [
      "General principles",
      "Prescriptive documentation"
    ]
  },
  {
    "objectID": "content/en/general-principles/prescriptive-documentation.html#word-choice-for-recommendations-and-requirements",
    "href": "content/en/general-principles/prescriptive-documentation.html#word-choice-for-recommendations-and-requirements",
    "title": "Prescriptive documentation",
    "section": "Word choice for recommendations and requirements",
    "text": "Word choice for recommendations and requirements\nTo indicate required or optional user actions or the outcomes of a process, select an appropriate auxiliary verb—for example, must, can, or might. Generally avoid the word should. The word can create ambiguity and uncertainty for readers and is thus problematic for prescriptive documentation. For example, if you’re telling the reader what to do, should implies that the action is recommended but optional, which can leave the reader unsure about what to do.\nTo clarify what you mean, determine if an action is required versus optional, an outcome is expected versus possible, or a state is actual versus recommended.\n\nIf an action is required: use must, or rephrase the sentence so that it’s a clear imperative instruction such as “Do the following before you continue.”\nIf an action is recommended: use We recommend … or Google recommends …. You can use should if a recommended action is generally recognized. For example, “You should use a strong password …” or “You should follow the principle of least privilege ….”\nIf an action is optional: use can. For example, “You can also use approach B to solve the same problem.”\nIf an outcome is expected: describe the outcome in terms of what is expected. For example: “The process returns 10 items.”\nIf an outcome is possible: use might or can. For example, “The process can take about 30 minutes.”\nIf a state is actual: when you’re describing the state of something, such as the value of a variable, avoid writing “The value should be true.” Instead, clarify which of the following you mean:\n\n“You must set the value to true.”\n“The server sets the value to true.”\n“If the value is false, follow these steps to change it to true.”\n\n\nFor information about clarifying who’s performing an action, see Active voice.\n\n✅ Recommended: Ensure that the Classroom Share Button conforms to our min-max size guidelines and related color/button templates.\n✅ Recommended: The column of the data table that the filter operates on.\n✅ Recommended: Whether it’s a brand new project or an existing one, perform the following steps.\n❌ Not recommended: The Classroom Share Button should conform to our min-max size guidelines and related color and button templates.\n❌ Not recommended: The column of the data table that the filter should operate on.\n❌ Not recommended: Whether it’s a brand new project or an existing one, here’s what you should do.",
    "crumbs": [
      "General principles",
      "Prescriptive documentation"
    ]
  },
  {
    "objectID": "content/en/general-principles/prescriptive-documentation.html#more-resources",
    "href": "content/en/general-principles/prescriptive-documentation.html#more-resources",
    "title": "Prescriptive documentation",
    "section": "More resources",
    "text": "More resources\n\nSee also can, could, may, might, must, and would in the word list.",
    "crumbs": [
      "General principles",
      "Prescriptive documentation"
    ]
  },
  {
    "objectID": "content/en/general-principles/future.html",
    "href": "content/en/general-principles/future.html",
    "title": "Future features",
    "section": "",
    "text": "Avoid documenting future features or products, even in innocuous ways. Don’t pre-announce anything in documentation unless it has been approved by your legal counsel.\nSee also Present tense and Timeless documentation.\n\n\n\n Back to top",
    "crumbs": [
      "General principles",
      "Future features"
    ]
  },
  {
    "objectID": "content/en/general-principles/timeless-documentation.html",
    "href": "content/en/general-principles/timeless-documentation.html",
    "title": "Timeless documentation",
    "section": "",
    "text": "Timeless documentation is documentation that avoids words and phrases that anchor the documentation to a point in time or assume knowledge of prior or future products and features. In general, document the current version of a product or feature.\nTimeless documentation is especially important for technical documents that might be read a long time after they are written. Words like now, new, and currently can render such documentation inaccurate, outdated, or unmeaningful. In contrast, timeless documentation focuses on how the product works right now—not on how it has changed from previous versions, and not how it might change in the future.\nIf you’re writing procedural or time-stamped content such as press releases, blog posts, or release notes, such time-based words and phrases are okay. For example, new is okay in a blog post that announces updates to a product: Dataflow includes several new features. Or, soon is okay in procedural content to emphasize a change in state after a user performs a step: The VM goes offline soon after you send the shutdown command. However, some of these words can become outdated or incorrect when used in product documentation to refer to a product’s features and capabilities, so we recommend against using such words in that context.\nWriting timeless product documentation has the following value:",
    "crumbs": [
      "General principles",
      "Timeless documentation"
    ]
  },
  {
    "objectID": "content/en/general-principles/timeless-documentation.html#words-and-phrases-to-avoid",
    "href": "content/en/general-principles/timeless-documentation.html#words-and-phrases-to-avoid",
    "title": "Timeless documentation",
    "section": "Words and phrases to avoid",
    "text": "Words and phrases to avoid\nThe following words and phrases can undermine timelessness in documentation:\n\nWords and phrases that make promises or project plans and strategies. In the context of describing product or feature capabilities, words and phrases such as at present, as of this writing, or eventually can prematurely disclose plans for a product or feature, or they can inappropriately imply that a product or feature might change. In those cases, don’t use such words and phrases.\nFor more information, see Documenting future features.\nWords and phrases that are implied. At Google, we assume our documentation is current unless a specific release version is specified. Thus, words and phrases such as currently and as of this writing are implied by the existence of the documentation itself.\nWords and phrases that become outdated soon after publication. Words such as soon and latest quickly become irrelevant.\nWords and phrases that assume prior knowledge of a product or feature. If you must use words like new, give a reference point such as a date or version release number—for example, The January 14, 2021 release of BigQuery includes a new resource panel.\n\nWhen describing product or feature capabilities in product and reference documentation, avoid the following words and phrases:\n\nas of this writing\ncurrently\ndoes not yet\neventually\nexisting\nfuture, in the future\nlatest\nnew, newer\nnow\nold, older\npresently, at present\nsoon",
    "crumbs": [
      "General principles",
      "Timeless documentation"
    ]
  },
  {
    "objectID": "content/en/general-principles/excessive-claims.html",
    "href": "content/en/general-principles/excessive-claims.html",
    "title": "Avoid excessive claims",
    "section": "",
    "text": "In documentation, don’t make excessive claims. An excessive claim is an assertion in the documentation that does any of the following:\n\nMakes a statement about performance or cost that isn’t easily verifiable with data that’s available to the reader.\nMakes a statement about security that would be invalidated by a security incident.\nMakes a statement that might be interpreted as subjective or even disparaging, especially about third-party products.\n\nWhen you’re assessing whether some text makes an excessive claim, take into account not just what’s true today about a product’s performance, cost, security, or functionality, but what might be true in the future.\nConsider the following guidelines:\n\nWhen you describe products, avoid superlatives like best, simplest, fastest, never, and always. Similarly, be careful about words like ensure and guarantee and use them only when something can truly be ensured or guaranteed.\nIf you make specific performance claims—how fast a product is, how much storage it requires, and so on—make sure that you reference the source of your information.\nIf documentation claims that a product is secure, the documentation is invalid (and not credible) if someone succeeds in compromising the product. It’s safer to suggest that a feature “helps with security” or “is designed for security” because those statements are true even if a security incident occurs.\nA statement that you make about a competitive product might be untrue if you misinterpret how the product works, or later if the other company comes out with a new release.\n\nThe safest approach is always to write factually and objectively, limiting what you say to verifiable information that will be true over the lifespan of your documentation.\n\n✅ Recommended: Our product distributes datasets and computation in memory across a cluster, and therefore it can be faster for this scenario than ExampleCorporation’s product. For more information, see Performance comparison.\n❌ Not recommended: Our product is faster than ExampleCorp’s product.\n✅ Recommended: Using our security product is part of an overall strategy that helps prevent account takeovers from phishing attacks.\n❌ Not recommended: Our security product prevents account takeovers from phishing attacks.\n\n\n\n\n Back to top",
    "crumbs": [
      "General principles",
      "Excessive claims"
    ]
  },
  {
    "objectID": "content/en/computer-interfaces/ui-elements.html",
    "href": "content/en/computer-interfaces/ui-elements.html",
    "title": "UI elements and interaction",
    "section": "",
    "text": "Source: https://developers.google.com/style/ui-elements\n\n\n\n\nWhen practical, state instructions in terms of what the reader should accomplish, rather than focusing on the widgets and gestures. By avoiding reference to UI elements, you help the reader understand the purpose of an instruction, and it can help future-proof procedures.\n\n✅ Recommended: Refresh the page.\n✅ Recommended: Expand the Advanced options section.\n\nHowever, know the audience and understand the context. In some cases, the point of a procedure is to guide the reader through elements on the page. Or the UI might not be obvious, and it’s helpful to explain the gestures for completing a step. Provide the level of detail that seems useful for the intended audience.\n\n✅ Recommended: Click Refresh.\n✅ Recommended: To expand the Advanced options section, click the ▶️ expander arrow.\n\nThe rest of this page focuses on scenarios where you’ve decided it’s useful to explicitly discuss UI elements.\nFor information about writing procedures, see Procedures.\n\n\n\nWhen referring to any UI element by name, put its name in bold, using the b element in HTML or ** in Markdown. This includes names for buttons, menus, dialogs, windows, list items, or any other feature on the page that has a visible name. Don’t use code font for UI elements, unless it’s an element that meets the requirements for code font. In that case, use both code font and bold.\n\n[!NOTE] Note: The reason for using the b element is that in modern HTML, b connotes text to which you want to draw visual attention, whereas the strong element indicates strong importance.\n\nDon’t make an official feature name or product name bold, except when it directly refers to an element on the page that uses the name (such as a window title or button name).\n\n✅ Recommended: In the New project window, select the New activity checkbox, and then click Next.\n❌ Not recommended: In the New Project window, select “New Activity”, and then click the “Next” button.\n\n\n\n\nIn most cases, follow the capitalization as it appears on the page. However, if labels are inconsistent or they’re all uppercase, use sentence case.\n\n\n\n\n\n\n\n\nGuidance\nRecommended\nNot recommended\n\n\n\n\nWhen a label is all uppercase, use sentence case.\nClick 🔄️ Refresh.\nClick REFRESH.\n\n\nWhen referring to multiple labels that are inconsistently cased, use sentence case for all of the labels.\nClick New project, and then click New activity.\nClick NEW PROJECT, and then click New Activity.\n\n\n\n\n\n\nDon’t use UI elements as if they were English verbs or nouns.\n\n\n\n\n\n\n\nRecommended\nNot recommended\n\n\n\n\nIn the Name field, enter an account name.\nName the account.\n\n\nTo save the settings, click Save.\nSave the settings.\n\n\nIn the Service account ID field, enter a name. For Service account ID, enter a name.\nSpecify a Service account ID.\n\n\n\n\n\n\nA user interface can contain a variety of UI elements. In general, focus on the feature and its functionality, not the UI element. If you think it adds clarity for the reader, use the name of the UI element. For example, both of the following sentences are valid:\n\n✅ Recommended: Go to File&gt; Tools.\n✅ Recommended: In the File menu, click Tools.\n\nDon’t use slang terms for UI elements—for example, hamburger icon or zippy. For more information, see Buttons and icons.\n\n✅ Recommended: To expand the Advanced options section, click the expander arrow.\n✅ Recommended: Expand Advanced options.\n❌ Not recommended: To expand the Advanced options section, click the zippy.\n\nThe following sections define some terms to use when referring to UI elements.\nFor prepositions to use with these elements, see the Prepositions table.\n\n\nMost often, a window is the entire application window in a desktop environment. However, it can also refer to modular application elements that you can open and close. For example, in Android Studio, several windows are available in the View&gt; Tool Windows menu.\n\n✅ Recommended: In the MyApp window, click Edit.\n❌ Not recommended: In the MyApp page, click Edit.\n\nPage is the preferred term when referring to a web page in general and to a subpage of a console in particular. For more information, see console.\n\n✅ Recommended: In the Google Cloud console, go to the Deployments page.\n❌ Not recommended: In the Google Cloud console, go to the Deployments window.\n\nA dialog is a smaller window that is usually detached from the main application window and appears in front of the window.\n\n✅ Recommended: In the Welcome dialog, click OK.\n❌ Not recommended: In the Welcome pop-up window, click OK.\n\nA pane (or panel) is typically a distinct rectangular region within a larger browser or application window. A pane or panel can often be tightly coupled to surrounding UI regions, whereas a window is distinctly separate and can be hidden. Do not use terms such as window, section, area, or column to refer to a pane or panel.\n\n✅ Recommended: In the Create service account pane, click New.\n❌ Not recommended: In the Create service account section, click New.\n\nA section is a labeled grouping of options and controls, usually within a window, pane, or panel. Do not use terms such as area or column to refer to a section.\n\n✅ Recommended: In the Create metric pane, do the following:\nIn the Metric type section, select Counter.\nIn the Labels section, click Add label.\n\n\n\n\nIn a desktop application, the menu bar appears at the top of the window or at the top of the screen; it’s a set of menus (such as File or Edit), each of which is a set of related commands and/or nested submenus.\nTo refer to an item in a menu, use the term command, not choice, menu item, or option. Exception: if you’re documenting how to build an interface, you can use menu item.\nTo refer to a menu, use the form *the LABEL*NAME menu._\nTo tell the reader where to find a command in a menu or submenu, use a phrase like In the File menu, select Open.\nDon’t use drop-down as a synonym for menu. See drop-down.\n\n\nAnother option is to use angle brackets (&gt;). If you use angle brackets, follow these guidelines:\n\nPut a nonbreaking space (&nbsp;) before each angle bracket.\nDon’t bold each menu name separately; instead, enclose the entire sequence in a single bold tag (&lt;b&gt;...&lt;/b&gt; or **...**).\nWrap the angle bracket with a span tag and add an aria-label attribute with and then text (for example, &lt;span aria-label=\"and then\"&gt;&gt;&lt;/span&gt;). Otherwise, some screen readers might read &gt; as “greater than.”\n\nIn the following example, the text renders as Select View &gt; Tools &gt; Developer Tools. A screen reader interprets this as Select View and then Tools and then Developer Tools.\n(TODO: tabs)\nThis notation is useful for abbreviating a longer phrase like In the File menu, select Open. However, this notation applies only to menu items. Don’t use it to describe a combination of different UI elements.\n\n✅ Recommended: Select MyApp&gt; Preferences, and then select the Languages preference pane.\n❌ Not recommended: Select MyApp &gt; Preferences &gt; Languages &gt; + &gt; CSS.\n\n\n\n\n\nA navigation menu is a control—usually a pane or window—that contains a list of items that the user can click to go to pages in an application or website. Don’t use the terms navigation bar, navigation pane, navigation panel, or navigation window for such a control.\n\n✅ Recommended: In the BigQuery navigation menu, click Scheduled queries.\n\n\n\n\nA toolbar is a set of buttons for common user actions. A toolbar button that includes a menu is called a menu button. Refer to the toolbar by name if you think that the user needs help finding a button.\n\n✅ Recommended: On the Google Cloud console toolbar, click Notifications.\n✅ Recommended: Click Notifications.\n\n\n\n\nA button initiates an action when clicked (or tapped, in the case of a touchscreen). To refer to a button, use the button’s label.\n\n✅ Recommended: Click OK.\n❌ Not recommended: Click the “OK” button.\n\nAn icon is a symbol or image that represents an object or a function. An icon can be a button as well. If the button includes an icon, write the name of the button as shown in the tooltip, and add the button icon before the name. If you need to use a space between the icon and the name for readability, use a nonbreaking space.\n\n✅ Recommended: Click Settings and utilities.\n❌ Not recommended: Click .\n\nIf the icon tooltip is identical to the name of the icon, use an empty alt attribute.\nIf you’re unsure of the name of the icon, inspect the element using browser tools. In many cases, a visual element like an icon has an ARIA attribute that provides a textual description of the element for use by screen readers. To inspect an element, right-click the element and select Inspect or Inspect element, depending on your browser. Look for one of the following types of labels: aria-labelledby, aria-label, aria-describedby, label, placeholder, or title. For more information, see Using aria-label and Accessible Name and Description calculation.\nIf a button with an icon doesn’t include a tooltip, submit a bug report requesting that a tooltip be added. Tooltips are crucial for accessibility, and for documentation and discoverability in general.\n\n✅ Recommended: Click Add.\n❌ Not recommended: Click the  icon.\n\nIf a UI element name ends with an ellipsis (…), leave out the ellipsis.\n\n✅ Recommended: Click Browse.\n❌ Not recommended: Click Browse….\n\nDon’t use directional language to orient the reader, such as above, below, or right-hand side. Phrases like those don’t work well for accessibility or for localization. If a UI element is hard to find, provide a screenshot.\n\n✅ Recommended: Click ☰ Menu.\n❌ Not recommended: In the left-side panel, click the button with three lines.\n\n\n\nIf you have UI elements that are difficult to find, consider one of the following options as an alternative to using directional language, which can be problematic for accessibility and localization reasons.\n\nUse the button icon along with its name as shown in the button tooltip.\n\n✅ Recommended: Click 🔄️ Refresh.\n\nAdd context to help the user find the element.\n\n✅ Recommended: On the Cloud Run toolbar, click 🔄️ Refresh.\n\nUse a screenshot.\n\n✅ Recommended: In the list of services, click Column display options.\n For more information about when and how to use screenshots, see Diagrams, figures, and other images.\n\n\n\n\n\n\nA tab is a navigation element that looks like a file tab. To refer to a tab, use the form *the LABEL*NAME tab_.\n\n✅ Recommended: Select Tools&gt; Options, and then click the Edit tab.\n\n\n\n\nA text box is a box that the user can type in. Use box and the form *the LABEL*NAME box_. Format the text that the user types by using the code element in HTML, or by using code formatting (monospace) in other markup.\n\n✅ Recommended: In the Owner box, enter your name.\n✅ Recommended: In the Name box, enter wsfc-1.\n\nIn Google Cloud, use field instead of box.\nIn Google Workspace documentation, use field instead of box.\n\n✅ Recommended: In the Instance field, specify a value less than 64 characters long.\n\n\n\n\nA list box is a box that offers the user a list of items. To refer to a list box, use the form the LABEL*NAME list or the LABEL*NAME box, whichever is clearer.\n\n✅ Recommended: In the Item list, select Desktop.\n\nA combo box is a combination of a text box and a list box. To refer to a combo box, use the form the LABEL*NAME box. To refer to entering a value into a combo box, use the verbs type or select or *enter_.\n\n✅ Recommended: In the Font box, type or select the font that you want to use.\n\nA spin box is a box that lets the user choose a value by clicking arrows or by typing. To refer to a spin box, use the form the LABEL*NAME box. To refer to entering a value into a spin box, use the verb *enter_.\n\n✅ Recommended: In the Font Size box, enter a font size.\n\n\n\n\nA checkbox is a small box that indicates whether an option is on or off. To refer to a checkbox, use the form *the LABEL*NAME checkbox_.\nBe wary of using the verbs check and uncheck, which can be ambiguous; it’s often best to use select and clear instead.\n\n✅ Recommended: Select the Automatically check for updates checkbox.\n✅ Recommended: Clear the Bookmarks checkbox.\n\nIf you need to refer to the state of the checkbox, it’s often best to refer to it as selected or not selected.\n\n✅ Recommended: Make sure that the Bookmarks checkbox is selected.\n✅ Recommended: Make sure that the Bookmarks checkbox isn’t selected.\n\n\n\n\nA radio button is a small button used to choose one item from a group of mutually exclusive options. To refer to a radio button, use the radio button’s label, or refer to the group of buttons by its label.\n\n✅ Recommended: Select Do not remember passwords.\n✅ Recommended: For Startup mode, select an option.\n\n\n\n\nAn expander arrow is the UI element used to expand or collapse a section of navigation or content. Avoid referring to these explicitly in documentation, but when you do, use the terms expander arrow and expandable section rather than terms like expando or zippy.\n\n✅ Recommended: To expand the Advanced options section, click the expander arrow.\n❌ Not recommended: To expand the Advanced options section, click the zippy.\n\n\n\n\nA toggle is the UI element that switches back and forth between on and off states. Don’t use the word toggle as a verb. Describe the action that you want the user to take.\n\n✅ Recommended: To turn on the setting, click the Wi-Fi toggle.\n\nIn some cases, you might not know what state the toggle is in before the user interacts with it so be clear what position the toggle should be in.\n\n✅ Recommended: In Settings, click the Magic mode toggle to the on position.\n\n\n\n\n\nTo indicate that the user should press a given keyboard key or combination, use the kbd element.\nThe following is an example of a &lt;kbd&gt; tag:\n\n✅ Recommended: Press &lt;kbd&gt;Control+C&lt;/kbd&gt;.\n\nWhen rendered, the text appears as follows:\n\n✅ Recommended: Press Control+C.\n\nIf you’re working with non-HTML markup, use monospace formatting, which is how the kbd element renders.\nTo refer to a letter key, use uppercase instead of lowercase.\n\n✅ Recommended: To save, press Control+S.\n❌ Not recommended: To save, press Control+s.\n\nTo refer to a key that the user types to enter that key’s value as text input, use the code element, not the kbd element. For more information, see Code font.\nTo refer to a keyboard key, use the key’s name. If that’s ambiguous, use the form *the KEY*NAME key_.\n\n✅ Recommended: Press Esc.\n✅ Recommended: Press the Esc key.\n\nSpell out the names of modifier keys such as Command, Control, Option, and Shift. Don’t use symbols for those keys. To refer to a key combination, use the form *MODIFIER+KEY*NAME_.\n\n✅ Recommended: Press Control+V.\n\nWhen you provide shortcuts for multiple operating systems, put the macOS shortcut in parentheses after the Windows and Linux shortcut.\n\n✅ Recommended: To copy, press Control+C (or Command+C on macOS).\n❌ Not recommended: To copy, press Ctrl+C (⌘+C).\n\nTo refer to a key or combination that uses the Shift key, use the form *MODIFIER+Shift+KEY*NAME_.\n\n✅ Recommended: Press Control+Shift+?.\n\nSpell out the names of characters that could be confusing in a keyboard shortcut, such as comma, hyphen, period, and plus.\nTo refer to a keyboard shortcut, use either keyboard shortcut or key combination.\nTo refer to pressing a key or combination to cause an action to occur, use the verb press. To refer to typing a key or combination as part of text, use the verbs enter or type.\n\n\n\nWhen documenting the UI, use the following prepositions.\n\n\n\n\n\n\n\n\nPreposition\nUI element\nRecommended\n\n\n\n\nin\ndialogs fields lists menus panes windows\nIn the Alert dialog, click OK. In the Name field, enter wsfc-1. In the Item list, select Desktop. In the File menu, click Tools. In the Metrics pane, click New. In the Task window, click Start.\n\n\non\npages tabs toolbars\nOn the Create an instance page, click Add. On the Edit tab, click Save. On the Dashboard toolbar, click Edit.\n\n\n\n\n\n\nTo describe an action on the page, use the following verbs. For more information about each verb, see its corresponding entry on the word list.\n\nClick\nChoose\nDrag\nEnable\nEnter, type\nGo to (see scroll)\nHold the pointer over\nPress\nSelect\nTap\nTurn on, turn off\n\nFor information about writing procedures, see Procedures.",
    "crumbs": [
      "Computer interfaces",
      "UI elements and interaction"
    ]
  },
  {
    "objectID": "content/en/computer-interfaces/ui-elements.html#focus-on-the-task",
    "href": "content/en/computer-interfaces/ui-elements.html#focus-on-the-task",
    "title": "UI elements and interaction",
    "section": "",
    "text": "When practical, state instructions in terms of what the reader should accomplish, rather than focusing on the widgets and gestures. By avoiding reference to UI elements, you help the reader understand the purpose of an instruction, and it can help future-proof procedures.\n\n✅ Recommended: Refresh the page.\n✅ Recommended: Expand the Advanced options section.\n\nHowever, know the audience and understand the context. In some cases, the point of a procedure is to guide the reader through elements on the page. Or the UI might not be obvious, and it’s helpful to explain the gestures for completing a step. Provide the level of detail that seems useful for the intended audience.\n\n✅ Recommended: Click Refresh.\n✅ Recommended: To expand the Advanced options section, click the ▶️ expander arrow.\n\nThe rest of this page focuses on scenarios where you’ve decided it’s useful to explicitly discuss UI elements.\nFor information about writing procedures, see Procedures.",
    "crumbs": [
      "Computer interfaces",
      "UI elements and interaction"
    ]
  },
  {
    "objectID": "content/en/computer-interfaces/ui-elements.html#format-names-of-ui-elements",
    "href": "content/en/computer-interfaces/ui-elements.html#format-names-of-ui-elements",
    "title": "UI elements and interaction",
    "section": "",
    "text": "When referring to any UI element by name, put its name in bold, using the b element in HTML or ** in Markdown. This includes names for buttons, menus, dialogs, windows, list items, or any other feature on the page that has a visible name. Don’t use code font for UI elements, unless it’s an element that meets the requirements for code font. In that case, use both code font and bold.\n\n[!NOTE] Note: The reason for using the b element is that in modern HTML, b connotes text to which you want to draw visual attention, whereas the strong element indicates strong importance.\n\nDon’t make an official feature name or product name bold, except when it directly refers to an element on the page that uses the name (such as a window title or button name).\n\n✅ Recommended: In the New project window, select the New activity checkbox, and then click Next.\n❌ Not recommended: In the New Project window, select “New Activity”, and then click the “Next” button.",
    "crumbs": [
      "Computer interfaces",
      "UI elements and interaction"
    ]
  },
  {
    "objectID": "content/en/computer-interfaces/ui-elements.html#use-appropriate-capitalization",
    "href": "content/en/computer-interfaces/ui-elements.html#use-appropriate-capitalization",
    "title": "UI elements and interaction",
    "section": "",
    "text": "In most cases, follow the capitalization as it appears on the page. However, if labels are inconsistent or they’re all uppercase, use sentence case.\n\n\n\n\n\n\n\n\nGuidance\nRecommended\nNot recommended\n\n\n\n\nWhen a label is all uppercase, use sentence case.\nClick 🔄️ Refresh.\nClick REFRESH.\n\n\nWhen referring to multiple labels that are inconsistently cased, use sentence case for all of the labels.\nClick New project, and then click New activity.\nClick NEW PROJECT, and then click New Activity.",
    "crumbs": [
      "Computer interfaces",
      "UI elements and interaction"
    ]
  },
  {
    "objectID": "content/en/computer-interfaces/ui-elements.html#refer-to-ui-elements",
    "href": "content/en/computer-interfaces/ui-elements.html#refer-to-ui-elements",
    "title": "UI elements and interaction",
    "section": "",
    "text": "Don’t use UI elements as if they were English verbs or nouns.\n\n\n\n\n\n\n\nRecommended\nNot recommended\n\n\n\n\nIn the Name field, enter an account name.\nName the account.\n\n\nTo save the settings, click Save.\nSave the settings.\n\n\nIn the Service account ID field, enter a name. For Service account ID, enter a name.\nSpecify a Service account ID.",
    "crumbs": [
      "Computer interfaces",
      "UI elements and interaction"
    ]
  },
  {
    "objectID": "content/en/computer-interfaces/ui-elements.html#terminology-and-usage",
    "href": "content/en/computer-interfaces/ui-elements.html#terminology-and-usage",
    "title": "UI elements and interaction",
    "section": "",
    "text": "A user interface can contain a variety of UI elements. In general, focus on the feature and its functionality, not the UI element. If you think it adds clarity for the reader, use the name of the UI element. For example, both of the following sentences are valid:\n\n✅ Recommended: Go to File&gt; Tools.\n✅ Recommended: In the File menu, click Tools.\n\nDon’t use slang terms for UI elements—for example, hamburger icon or zippy. For more information, see Buttons and icons.\n\n✅ Recommended: To expand the Advanced options section, click the expander arrow.\n✅ Recommended: Expand Advanced options.\n❌ Not recommended: To expand the Advanced options section, click the zippy.\n\nThe following sections define some terms to use when referring to UI elements.\nFor prepositions to use with these elements, see the Prepositions table.\n\n\nMost often, a window is the entire application window in a desktop environment. However, it can also refer to modular application elements that you can open and close. For example, in Android Studio, several windows are available in the View&gt; Tool Windows menu.\n\n✅ Recommended: In the MyApp window, click Edit.\n❌ Not recommended: In the MyApp page, click Edit.\n\nPage is the preferred term when referring to a web page in general and to a subpage of a console in particular. For more information, see console.\n\n✅ Recommended: In the Google Cloud console, go to the Deployments page.\n❌ Not recommended: In the Google Cloud console, go to the Deployments window.\n\nA dialog is a smaller window that is usually detached from the main application window and appears in front of the window.\n\n✅ Recommended: In the Welcome dialog, click OK.\n❌ Not recommended: In the Welcome pop-up window, click OK.\n\nA pane (or panel) is typically a distinct rectangular region within a larger browser or application window. A pane or panel can often be tightly coupled to surrounding UI regions, whereas a window is distinctly separate and can be hidden. Do not use terms such as window, section, area, or column to refer to a pane or panel.\n\n✅ Recommended: In the Create service account pane, click New.\n❌ Not recommended: In the Create service account section, click New.\n\nA section is a labeled grouping of options and controls, usually within a window, pane, or panel. Do not use terms such as area or column to refer to a section.\n\n✅ Recommended: In the Create metric pane, do the following:\nIn the Metric type section, select Counter.\nIn the Labels section, click Add label.\n\n\n\n\nIn a desktop application, the menu bar appears at the top of the window or at the top of the screen; it’s a set of menus (such as File or Edit), each of which is a set of related commands and/or nested submenus.\nTo refer to an item in a menu, use the term command, not choice, menu item, or option. Exception: if you’re documenting how to build an interface, you can use menu item.\nTo refer to a menu, use the form *the LABEL*NAME menu._\nTo tell the reader where to find a command in a menu or submenu, use a phrase like In the File menu, select Open.\nDon’t use drop-down as a synonym for menu. See drop-down.\n\n\nAnother option is to use angle brackets (&gt;). If you use angle brackets, follow these guidelines:\n\nPut a nonbreaking space (&nbsp;) before each angle bracket.\nDon’t bold each menu name separately; instead, enclose the entire sequence in a single bold tag (&lt;b&gt;...&lt;/b&gt; or **...**).\nWrap the angle bracket with a span tag and add an aria-label attribute with and then text (for example, &lt;span aria-label=\"and then\"&gt;&gt;&lt;/span&gt;). Otherwise, some screen readers might read &gt; as “greater than.”\n\nIn the following example, the text renders as Select View &gt; Tools &gt; Developer Tools. A screen reader interprets this as Select View and then Tools and then Developer Tools.\n(TODO: tabs)\nThis notation is useful for abbreviating a longer phrase like In the File menu, select Open. However, this notation applies only to menu items. Don’t use it to describe a combination of different UI elements.\n\n✅ Recommended: Select MyApp&gt; Preferences, and then select the Languages preference pane.\n❌ Not recommended: Select MyApp &gt; Preferences &gt; Languages &gt; + &gt; CSS.\n\n\n\n\n\nA navigation menu is a control—usually a pane or window—that contains a list of items that the user can click to go to pages in an application or website. Don’t use the terms navigation bar, navigation pane, navigation panel, or navigation window for such a control.\n\n✅ Recommended: In the BigQuery navigation menu, click Scheduled queries.\n\n\n\n\nA toolbar is a set of buttons for common user actions. A toolbar button that includes a menu is called a menu button. Refer to the toolbar by name if you think that the user needs help finding a button.\n\n✅ Recommended: On the Google Cloud console toolbar, click Notifications.\n✅ Recommended: Click Notifications.\n\n\n\n\nA button initiates an action when clicked (or tapped, in the case of a touchscreen). To refer to a button, use the button’s label.\n\n✅ Recommended: Click OK.\n❌ Not recommended: Click the “OK” button.\n\nAn icon is a symbol or image that represents an object or a function. An icon can be a button as well. If the button includes an icon, write the name of the button as shown in the tooltip, and add the button icon before the name. If you need to use a space between the icon and the name for readability, use a nonbreaking space.\n\n✅ Recommended: Click Settings and utilities.\n❌ Not recommended: Click .\n\nIf the icon tooltip is identical to the name of the icon, use an empty alt attribute.\nIf you’re unsure of the name of the icon, inspect the element using browser tools. In many cases, a visual element like an icon has an ARIA attribute that provides a textual description of the element for use by screen readers. To inspect an element, right-click the element and select Inspect or Inspect element, depending on your browser. Look for one of the following types of labels: aria-labelledby, aria-label, aria-describedby, label, placeholder, or title. For more information, see Using aria-label and Accessible Name and Description calculation.\nIf a button with an icon doesn’t include a tooltip, submit a bug report requesting that a tooltip be added. Tooltips are crucial for accessibility, and for documentation and discoverability in general.\n\n✅ Recommended: Click Add.\n❌ Not recommended: Click the  icon.\n\nIf a UI element name ends with an ellipsis (…), leave out the ellipsis.\n\n✅ Recommended: Click Browse.\n❌ Not recommended: Click Browse….\n\nDon’t use directional language to orient the reader, such as above, below, or right-hand side. Phrases like those don’t work well for accessibility or for localization. If a UI element is hard to find, provide a screenshot.\n\n✅ Recommended: Click ☰ Menu.\n❌ Not recommended: In the left-side panel, click the button with three lines.\n\n\n\nIf you have UI elements that are difficult to find, consider one of the following options as an alternative to using directional language, which can be problematic for accessibility and localization reasons.\n\nUse the button icon along with its name as shown in the button tooltip.\n\n✅ Recommended: Click 🔄️ Refresh.\n\nAdd context to help the user find the element.\n\n✅ Recommended: On the Cloud Run toolbar, click 🔄️ Refresh.\n\nUse a screenshot.\n\n✅ Recommended: In the list of services, click Column display options.\n For more information about when and how to use screenshots, see Diagrams, figures, and other images.\n\n\n\n\n\n\nA tab is a navigation element that looks like a file tab. To refer to a tab, use the form *the LABEL*NAME tab_.\n\n✅ Recommended: Select Tools&gt; Options, and then click the Edit tab.\n\n\n\n\nA text box is a box that the user can type in. Use box and the form *the LABEL*NAME box_. Format the text that the user types by using the code element in HTML, or by using code formatting (monospace) in other markup.\n\n✅ Recommended: In the Owner box, enter your name.\n✅ Recommended: In the Name box, enter wsfc-1.\n\nIn Google Cloud, use field instead of box.\nIn Google Workspace documentation, use field instead of box.\n\n✅ Recommended: In the Instance field, specify a value less than 64 characters long.\n\n\n\n\nA list box is a box that offers the user a list of items. To refer to a list box, use the form the LABEL*NAME list or the LABEL*NAME box, whichever is clearer.\n\n✅ Recommended: In the Item list, select Desktop.\n\nA combo box is a combination of a text box and a list box. To refer to a combo box, use the form the LABEL*NAME box. To refer to entering a value into a combo box, use the verbs type or select or *enter_.\n\n✅ Recommended: In the Font box, type or select the font that you want to use.\n\nA spin box is a box that lets the user choose a value by clicking arrows or by typing. To refer to a spin box, use the form the LABEL*NAME box. To refer to entering a value into a spin box, use the verb *enter_.\n\n✅ Recommended: In the Font Size box, enter a font size.\n\n\n\n\nA checkbox is a small box that indicates whether an option is on or off. To refer to a checkbox, use the form *the LABEL*NAME checkbox_.\nBe wary of using the verbs check and uncheck, which can be ambiguous; it’s often best to use select and clear instead.\n\n✅ Recommended: Select the Automatically check for updates checkbox.\n✅ Recommended: Clear the Bookmarks checkbox.\n\nIf you need to refer to the state of the checkbox, it’s often best to refer to it as selected or not selected.\n\n✅ Recommended: Make sure that the Bookmarks checkbox is selected.\n✅ Recommended: Make sure that the Bookmarks checkbox isn’t selected.\n\n\n\n\nA radio button is a small button used to choose one item from a group of mutually exclusive options. To refer to a radio button, use the radio button’s label, or refer to the group of buttons by its label.\n\n✅ Recommended: Select Do not remember passwords.\n✅ Recommended: For Startup mode, select an option.\n\n\n\n\nAn expander arrow is the UI element used to expand or collapse a section of navigation or content. Avoid referring to these explicitly in documentation, but when you do, use the terms expander arrow and expandable section rather than terms like expando or zippy.\n\n✅ Recommended: To expand the Advanced options section, click the expander arrow.\n❌ Not recommended: To expand the Advanced options section, click the zippy.\n\n\n\n\nA toggle is the UI element that switches back and forth between on and off states. Don’t use the word toggle as a verb. Describe the action that you want the user to take.\n\n✅ Recommended: To turn on the setting, click the Wi-Fi toggle.\n\nIn some cases, you might not know what state the toggle is in before the user interacts with it so be clear what position the toggle should be in.\n\n✅ Recommended: In Settings, click the Magic mode toggle to the on position.",
    "crumbs": [
      "Computer interfaces",
      "UI elements and interaction"
    ]
  },
  {
    "objectID": "content/en/computer-interfaces/ui-elements.html#press-and-type-keyboard-keys",
    "href": "content/en/computer-interfaces/ui-elements.html#press-and-type-keyboard-keys",
    "title": "UI elements and interaction",
    "section": "",
    "text": "To indicate that the user should press a given keyboard key or combination, use the kbd element.\nThe following is an example of a &lt;kbd&gt; tag:\n\n✅ Recommended: Press &lt;kbd&gt;Control+C&lt;/kbd&gt;.\n\nWhen rendered, the text appears as follows:\n\n✅ Recommended: Press Control+C.\n\nIf you’re working with non-HTML markup, use monospace formatting, which is how the kbd element renders.\nTo refer to a letter key, use uppercase instead of lowercase.\n\n✅ Recommended: To save, press Control+S.\n❌ Not recommended: To save, press Control+s.\n\nTo refer to a key that the user types to enter that key’s value as text input, use the code element, not the kbd element. For more information, see Code font.\nTo refer to a keyboard key, use the key’s name. If that’s ambiguous, use the form *the KEY*NAME key_.\n\n✅ Recommended: Press Esc.\n✅ Recommended: Press the Esc key.\n\nSpell out the names of modifier keys such as Command, Control, Option, and Shift. Don’t use symbols for those keys. To refer to a key combination, use the form *MODIFIER+KEY*NAME_.\n\n✅ Recommended: Press Control+V.\n\nWhen you provide shortcuts for multiple operating systems, put the macOS shortcut in parentheses after the Windows and Linux shortcut.\n\n✅ Recommended: To copy, press Control+C (or Command+C on macOS).\n❌ Not recommended: To copy, press Ctrl+C (⌘+C).\n\nTo refer to a key or combination that uses the Shift key, use the form *MODIFIER+Shift+KEY*NAME_.\n\n✅ Recommended: Press Control+Shift+?.\n\nSpell out the names of characters that could be confusing in a keyboard shortcut, such as comma, hyphen, period, and plus.\nTo refer to a keyboard shortcut, use either keyboard shortcut or key combination.\nTo refer to pressing a key or combination to cause an action to occur, use the verb press. To refer to typing a key or combination as part of text, use the verbs enter or type.",
    "crumbs": [
      "Computer interfaces",
      "UI elements and interaction"
    ]
  },
  {
    "objectID": "content/en/computer-interfaces/ui-elements.html#prepositions",
    "href": "content/en/computer-interfaces/ui-elements.html#prepositions",
    "title": "UI elements and interaction",
    "section": "",
    "text": "When documenting the UI, use the following prepositions.\n\n\n\n\n\n\n\n\nPreposition\nUI element\nRecommended\n\n\n\n\nin\ndialogs fields lists menus panes windows\nIn the Alert dialog, click OK. In the Name field, enter wsfc-1. In the Item list, select Desktop. In the File menu, click Tools. In the Metrics pane, click New. In the Task window, click Start.\n\n\non\npages tabs toolbars\nOn the Create an instance page, click Add. On the Edit tab, click Save. On the Dashboard toolbar, click Edit.",
    "crumbs": [
      "Computer interfaces",
      "UI elements and interaction"
    ]
  },
  {
    "objectID": "content/en/computer-interfaces/ui-elements.html#verbs-in-procedures",
    "href": "content/en/computer-interfaces/ui-elements.html#verbs-in-procedures",
    "title": "UI elements and interaction",
    "section": "",
    "text": "To describe an action on the page, use the following verbs. For more information about each verb, see its corresponding entry on the word list.\n\nClick\nChoose\nDrag\nEnable\nEnter, type\nGo to (see scroll)\nHold the pointer over\nPress\nSelect\nTap\nTurn on, turn off\n\nFor information about writing procedures, see Procedures.",
    "crumbs": [
      "Computer interfaces",
      "UI elements and interaction"
    ]
  },
  {
    "objectID": "content/en/computer-interfaces/placeholders.html",
    "href": "content/en/computer-interfaces/placeholders.html",
    "title": "Format placeholders",
    "section": "",
    "text": "Source: https://developers.google.com/style/placeholders\n\nThis page explains how to format placeholders in commands, code samples, and text strings. This page doesn’t explain how to implement visual styling for placeholders, but it does show examples of how Google developer documentation style renders placeholders as visually distinct from other text.\nFor more information about formatting code, command-line syntax, and code samples, see the following links:\n\nCode in text\nDocumenting command-line syntax\nCode samples\n\nPlaceholders in sample code and commands represent values that the reader must replace when they use the sample input. Placeholders in example output can also represent other values that vary. In general, a placeholder has a descriptive name as a default value.\nFor example, the placeholder PROJECT_ID represents a project ID in sample code, commands, and example output.\nIn example output, the placeholder HTTP*RESPONSE*CODE represents an HTTP response code; the reader isn’t expected to set this to a specific value.\n\n\nWhen you create placeholders follow this general guidance around using the letter x:\n\nIn general, don’t use a single x or a series of x’s as placeholders; use a more informative placeholder.\nIn some contexts (such as HTTP status codes), a series of x’s is the standard, so it’s OK to use (for example) xx in those cases.\n\nThere are several ways to format placeholders, depending on whether you’re working in HTML or Markdown, or whether the placeholder is inline, in a code block, or in a paragraph. For details, see the following sections.\n\n\nIf your sample code and command placeholders occur in a sentence, use the following formatting:\n\nIn HTML, wrap variable placeholders by using the var element, like this:\n&lt;code&gt;&lt;var&gt;PLACEHOLDER_NAME&lt;/var&gt;&lt;/code&gt;\nIn Markdown, wrap inline placeholders in backticks (), and use an asterisk (*) before the first backtick and after the second one (PLACEHOLDER_NAME`).\n\nIf your placeholder does not represent a code sample or command, use the following formatting:\n\nIn HTML, wrap placeholders by using the var element, like this:\n&lt;var&gt;PLACEHOLDER_NAME&lt;/var&gt;\n\n\n\n\nIf your placeholders are in a block of code, use the following formatting:\n\nIn HTML, wrap the code block in a pre element, and tag placeholders with var elements:\n    &lt;pre&gt;\n    gcloud compute forwarding-rules create &lt;var&gt;FORWARDING*RULE*NAME&lt;/var&gt; \\\n        --global | --region=&lt;var&gt;REGION&lt;/var&gt; \\\n        --load-balancing-scheme=&lt;var&gt;LOAD*BALANCING*SCHEME&lt;/var&gt; \\\n        --network=&lt;var&gt;NETWORK&lt;/var&gt; \\\n        ...\n    &lt;/pre&gt;\nIn Markdown, wrap the code block in a code fence (```). Inside a code fence, you can’t apply formatting like bold or italic.\nPLACEHOLDER_NAME\n\n\n\n\nUse uppercase characters with underscore delimiters.\nFor example, in HTML:\n\n✅ Recommended:\n.../&lt;var&gt;API_NAME&lt;/var&gt;\n.../&lt;var&gt;METHOD_NAME&lt;/var&gt;\n❌ Not recommended:\n.../&lt;var&gt;API-name&lt;/var&gt;\n.../&lt;var&gt;API_name&lt;/var&gt;\n.../&lt;var&gt;API name&lt;/var&gt;\n.../&lt;var&gt;api_name&lt;/var&gt;\n.../&lt;var&gt;api-name&lt;/var&gt;\n.../&lt;var&gt;apiName&lt;/var&gt;\n\nIn Markdown:\n\n✅ Recommended:\n.../*API_NAME*\n.../*METHOD_NAME*\n\nIf the context in which your placeholders appear makes using uppercase characters with underscore delimiters a bad idea, use something else that makes sense to you, but be internally consistent.\nDon’t include possessive adjectives in placeholders.\n\n❌ Not recommended:\n.../&lt;var&gt;MY*API*NAME&lt;/var&gt;\n.../&lt;var&gt;YOUR*API*NAME&lt;/var&gt;\n\n\n[!NOTE] Note: You can mark up command-line syntax with brackets, braces, and ellipses. Don’t put the brackets, braces, or ellipses in the var element.\n\n\n\n\n\nWhen you use a placeholder in text or code, explain the placeholder the first time you use it. It’s not necessary to repeat the explanation in the document unless doing so might benefit the reader—for example, in circumstances such as the following:\n\nYour document is lengthy.\nYou’ve introduced several other placeholders in a long procedure.\nYour document isn’t intended to be read from beginning to end.\n\nThe following is an example of a command that uses a placeholder with an explanation of that placeholder:\n&lt;pre class=\"devsite-click-to-copy\"&gt;\ngcloud compute instances create &lt;var&gt;INSTANCE_NAME&lt;/var&gt; \\\n    --metadata enable-guest-attributes=TRUE\n&lt;/pre&gt;\n\n&lt;p&gt;Replace &lt;code&gt;&lt;var&gt;INSTANCE_NAME&lt;/var&gt;&lt;/code&gt; with the name that\nyou want your new VM instance to have.&lt;/p&gt;\n\n\nUse the following format for a single placeholder:\n\nReplace PLACEHOLDER with a description of what the placeholder represents.\n✅ Recommended:\n\nStream the build logs to the Google Cloud console:\n\ngcloud builds log --stream=BUILD_ID\nReplace BUILD_ID with the ID of the WORKING build that you copied in the preceding step.\n\n\n\n\nUse the following format for two or more placeholders:\n\nFollow the command line with a descriptive list of the placeholders used in the command line. Explain what each placeholder represents even if the placeholder value is intuitive to you.\nIntroduce this list with Replace the following:\nList the placeholders in the order in which they appear in the command line.\nTag each placeholder in a code sample or command with code and var elements, followed by a colon and a description that starts with a lowercase letter. For non-code samples, remove the code elements—for example:\n&lt;li&gt;&lt;code&gt;&lt;var&gt;INSTANCE_NAME&lt;/var&gt;&lt;/code&gt;: description&lt;/li&gt;\nIf the description contains an example, introduce it with an em dash or such as—for example:\n&lt;li&gt;&lt;code&gt;&lt;var&gt;INSTANCE*NAME&lt;/var&gt;&lt;/code&gt;: description&mdash;for example,...&lt;/li&gt;&lt;li&gt;&lt;code&gt;&lt;var&gt;INSTANCE*NAME&lt;/var&gt;&lt;/code&gt;: description, such as...&lt;/li&gt;\nEach item in the list follows our list style.\n✅ Recommended:\n\nSet the maximum concurrency target for a new reservation:\n\n  bq mk \\\n      --project*id=ADMIN*PROJECT_ID \\\n      --location=LOCATION \\\n      --target*job*concurrency=CONCURRENCY \\\n      --reservation \\\n      RESERVATION_NAME\nReplace the following:\n\nADMIN*PROJECT*ID: the project that owns the reservation\nLOCATION: the location of the reservation\nCONCURRENCY: the maximum concurrency target\nRESERVATION_NAME: the name of the reservation\n\n✅ Recommended:\n\nIn Cloud Shell, set the environment variables:\n\nexport ONPREM*PROJECT=ON*PREM*PROJECT*NAME \\\n  export ONPREM_ZONE=ZONE\nReplace the following:\n\nON*PREM*PROJECT_NAME: the Google Cloud project name for your on-premises project. You can find your project number on the Dashboard page of the Google Cloud console.\nZONE: a Google Cloud zone that’s close to your location—for example, us-east1.\n\n\n\n\n\nIf you provide a code output example, explain any placeholders that appear in sample output:\n\nUse var elements to identify the placeholder text in the output.\nFollow the example output with a list of the placeholders used in the example.\nIntroduce the list of placeholders with This output includes the following values:\nList the placeholders in the order in which they appear in the example.\nTag each placeholder with a var element, followed by a colon and a description that starts with a lowercase letter—for example:\n&lt;li&gt;&lt;code&gt;&lt;var&gt;INSTANCE_NAME&lt;/var&gt;&lt;/code&gt;: description&lt;/li&gt;\nIf the description contains an example, introduce it with an em dash or such as—for example:\n&lt;li&gt;&lt;code&gt;&lt;var&gt;INSTANCE*NAME&lt;/var&gt;&lt;/code&gt;: description&mdash;for example,...&lt;/li&gt;&lt;li&gt;&lt;code&gt;&lt;var&gt;INSTANCE*NAME&lt;/var&gt;&lt;/code&gt;: description, such as...&lt;/li&gt;\n\nFor more information, see Output from commands.\n\n✅ Recommended:\n\nThe output is similar to the following:\n{\n  \"name\": \"operations/build/PROJECT*ID/OPERATION*ID\",\n  \"metadata\": {\n    \"@type\": \"type.googleapis.com/google.devtools.cloudbuild.v1.BuildOperationMetadata\",\n    \"build\": {\n    \"id\": \"BUILD_ID\",\n    \"status\": \"QUEUED\",\n    \"createTime\": \"2019-09-20T15:55:29.353258929Z\",\n    \"steps\": [\n      {\n      \"name\": \"gcr.io/compute-image-tools/gce*vm*image_import:release\",\n      \"env\": [\n        \"BUILD*ID=BUILD*ID\"\n      ],\n      \"args\": [\n        \"-timeout=7056s\",\n        \"-image*name=IMAGE*NAME\",\n        \"-client_id=api\",\n        \"-data-disk\",\n        \"-source*file=SOURCE*FILE\"\n      ]\n      }\n    ],\n    \"timeout\": \"7200s\",\n    \"projectId\": \"PROJECT_ID\",\n    \"logsBucket\": \"gs://PROJECT_NUMBER.cloudbuild-logs.googleusercontent.com\",\n    \"options\": {\n      \"logging\": \"LEGACY\"\n    },\n    \"logUrl\": \"https://console.cloud.google.com/gcr/builds/BUILD*ID?project=PROJECT*NUMBER\"\n    }\n  }\n}\n\nThis output includes the following values:\n\nPROJECT_ID: the project ID for the project that the image was imported into\nOPERATION_ID: the ID of the import operation\nBUILD_ID: the ID of the build for the import operation\nIMAGE_NAME: the name of the image to be imported\nSOURCE_FILE: the URI for the image in Cloud Storage—for example, gs://my-bucket/my-image.vmdk\nPROJECT_NUMBER: the number for the import project",
    "crumbs": [
      "Computer interfaces",
      "Placeholder formatting"
    ]
  },
  {
    "objectID": "content/en/computer-interfaces/placeholders.html#placeholders",
    "href": "content/en/computer-interfaces/placeholders.html#placeholders",
    "title": "Format placeholders",
    "section": "",
    "text": "When you create placeholders follow this general guidance around using the letter x:\n\nIn general, don’t use a single x or a series of x’s as placeholders; use a more informative placeholder.\nIn some contexts (such as HTTP status codes), a series of x’s is the standard, so it’s OK to use (for example) xx in those cases.\n\nThere are several ways to format placeholders, depending on whether you’re working in HTML or Markdown, or whether the placeholder is inline, in a code block, or in a paragraph. For details, see the following sections.\n\n\nIf your sample code and command placeholders occur in a sentence, use the following formatting:\n\nIn HTML, wrap variable placeholders by using the var element, like this:\n&lt;code&gt;&lt;var&gt;PLACEHOLDER_NAME&lt;/var&gt;&lt;/code&gt;\nIn Markdown, wrap inline placeholders in backticks (), and use an asterisk (*) before the first backtick and after the second one (PLACEHOLDER_NAME`).\n\nIf your placeholder does not represent a code sample or command, use the following formatting:\n\nIn HTML, wrap placeholders by using the var element, like this:\n&lt;var&gt;PLACEHOLDER_NAME&lt;/var&gt;\n\n\n\n\nIf your placeholders are in a block of code, use the following formatting:\n\nIn HTML, wrap the code block in a pre element, and tag placeholders with var elements:\n    &lt;pre&gt;\n    gcloud compute forwarding-rules create &lt;var&gt;FORWARDING*RULE*NAME&lt;/var&gt; \\\n        --global | --region=&lt;var&gt;REGION&lt;/var&gt; \\\n        --load-balancing-scheme=&lt;var&gt;LOAD*BALANCING*SCHEME&lt;/var&gt; \\\n        --network=&lt;var&gt;NETWORK&lt;/var&gt; \\\n        ...\n    &lt;/pre&gt;\nIn Markdown, wrap the code block in a code fence (```). Inside a code fence, you can’t apply formatting like bold or italic.\nPLACEHOLDER_NAME\n\n\n\n\nUse uppercase characters with underscore delimiters.\nFor example, in HTML:\n\n✅ Recommended:\n.../&lt;var&gt;API_NAME&lt;/var&gt;\n.../&lt;var&gt;METHOD_NAME&lt;/var&gt;\n❌ Not recommended:\n.../&lt;var&gt;API-name&lt;/var&gt;\n.../&lt;var&gt;API_name&lt;/var&gt;\n.../&lt;var&gt;API name&lt;/var&gt;\n.../&lt;var&gt;api_name&lt;/var&gt;\n.../&lt;var&gt;api-name&lt;/var&gt;\n.../&lt;var&gt;apiName&lt;/var&gt;\n\nIn Markdown:\n\n✅ Recommended:\n.../*API_NAME*\n.../*METHOD_NAME*\n\nIf the context in which your placeholders appear makes using uppercase characters with underscore delimiters a bad idea, use something else that makes sense to you, but be internally consistent.\nDon’t include possessive adjectives in placeholders.\n\n❌ Not recommended:\n.../&lt;var&gt;MY*API*NAME&lt;/var&gt;\n.../&lt;var&gt;YOUR*API*NAME&lt;/var&gt;\n\n\n[!NOTE] Note: You can mark up command-line syntax with brackets, braces, and ellipses. Don’t put the brackets, braces, or ellipses in the var element.",
    "crumbs": [
      "Computer interfaces",
      "Placeholder formatting"
    ]
  },
  {
    "objectID": "content/en/computer-interfaces/placeholders.html#explain-placeholders",
    "href": "content/en/computer-interfaces/placeholders.html#explain-placeholders",
    "title": "Format placeholders",
    "section": "",
    "text": "When you use a placeholder in text or code, explain the placeholder the first time you use it. It’s not necessary to repeat the explanation in the document unless doing so might benefit the reader—for example, in circumstances such as the following:\n\nYour document is lengthy.\nYou’ve introduced several other placeholders in a long procedure.\nYour document isn’t intended to be read from beginning to end.\n\nThe following is an example of a command that uses a placeholder with an explanation of that placeholder:\n&lt;pre class=\"devsite-click-to-copy\"&gt;\ngcloud compute instances create &lt;var&gt;INSTANCE_NAME&lt;/var&gt; \\\n    --metadata enable-guest-attributes=TRUE\n&lt;/pre&gt;\n\n&lt;p&gt;Replace &lt;code&gt;&lt;var&gt;INSTANCE_NAME&lt;/var&gt;&lt;/code&gt; with the name that\nyou want your new VM instance to have.&lt;/p&gt;\n\n\nUse the following format for a single placeholder:\n\nReplace PLACEHOLDER with a description of what the placeholder represents.\n✅ Recommended:\n\nStream the build logs to the Google Cloud console:\n\ngcloud builds log --stream=BUILD_ID\nReplace BUILD_ID with the ID of the WORKING build that you copied in the preceding step.\n\n\n\n\nUse the following format for two or more placeholders:\n\nFollow the command line with a descriptive list of the placeholders used in the command line. Explain what each placeholder represents even if the placeholder value is intuitive to you.\nIntroduce this list with Replace the following:\nList the placeholders in the order in which they appear in the command line.\nTag each placeholder in a code sample or command with code and var elements, followed by a colon and a description that starts with a lowercase letter. For non-code samples, remove the code elements—for example:\n&lt;li&gt;&lt;code&gt;&lt;var&gt;INSTANCE_NAME&lt;/var&gt;&lt;/code&gt;: description&lt;/li&gt;\nIf the description contains an example, introduce it with an em dash or such as—for example:\n&lt;li&gt;&lt;code&gt;&lt;var&gt;INSTANCE*NAME&lt;/var&gt;&lt;/code&gt;: description&mdash;for example,...&lt;/li&gt;&lt;li&gt;&lt;code&gt;&lt;var&gt;INSTANCE*NAME&lt;/var&gt;&lt;/code&gt;: description, such as...&lt;/li&gt;\nEach item in the list follows our list style.\n✅ Recommended:\n\nSet the maximum concurrency target for a new reservation:\n\n  bq mk \\\n      --project*id=ADMIN*PROJECT_ID \\\n      --location=LOCATION \\\n      --target*job*concurrency=CONCURRENCY \\\n      --reservation \\\n      RESERVATION_NAME\nReplace the following:\n\nADMIN*PROJECT*ID: the project that owns the reservation\nLOCATION: the location of the reservation\nCONCURRENCY: the maximum concurrency target\nRESERVATION_NAME: the name of the reservation\n\n✅ Recommended:\n\nIn Cloud Shell, set the environment variables:\n\nexport ONPREM*PROJECT=ON*PREM*PROJECT*NAME \\\n  export ONPREM_ZONE=ZONE\nReplace the following:\n\nON*PREM*PROJECT_NAME: the Google Cloud project name for your on-premises project. You can find your project number on the Dashboard page of the Google Cloud console.\nZONE: a Google Cloud zone that’s close to your location—for example, us-east1.\n\n\n\n\n\nIf you provide a code output example, explain any placeholders that appear in sample output:\n\nUse var elements to identify the placeholder text in the output.\nFollow the example output with a list of the placeholders used in the example.\nIntroduce the list of placeholders with This output includes the following values:\nList the placeholders in the order in which they appear in the example.\nTag each placeholder with a var element, followed by a colon and a description that starts with a lowercase letter—for example:\n&lt;li&gt;&lt;code&gt;&lt;var&gt;INSTANCE_NAME&lt;/var&gt;&lt;/code&gt;: description&lt;/li&gt;\nIf the description contains an example, introduce it with an em dash or such as—for example:\n&lt;li&gt;&lt;code&gt;&lt;var&gt;INSTANCE*NAME&lt;/var&gt;&lt;/code&gt;: description&mdash;for example,...&lt;/li&gt;&lt;li&gt;&lt;code&gt;&lt;var&gt;INSTANCE*NAME&lt;/var&gt;&lt;/code&gt;: description, such as...&lt;/li&gt;\n\nFor more information, see Output from commands.\n\n✅ Recommended:\n\nThe output is similar to the following:\n{\n  \"name\": \"operations/build/PROJECT*ID/OPERATION*ID\",\n  \"metadata\": {\n    \"@type\": \"type.googleapis.com/google.devtools.cloudbuild.v1.BuildOperationMetadata\",\n    \"build\": {\n    \"id\": \"BUILD_ID\",\n    \"status\": \"QUEUED\",\n    \"createTime\": \"2019-09-20T15:55:29.353258929Z\",\n    \"steps\": [\n      {\n      \"name\": \"gcr.io/compute-image-tools/gce*vm*image_import:release\",\n      \"env\": [\n        \"BUILD*ID=BUILD*ID\"\n      ],\n      \"args\": [\n        \"-timeout=7056s\",\n        \"-image*name=IMAGE*NAME\",\n        \"-client_id=api\",\n        \"-data-disk\",\n        \"-source*file=SOURCE*FILE\"\n      ]\n      }\n    ],\n    \"timeout\": \"7200s\",\n    \"projectId\": \"PROJECT_ID\",\n    \"logsBucket\": \"gs://PROJECT_NUMBER.cloudbuild-logs.googleusercontent.com\",\n    \"options\": {\n      \"logging\": \"LEGACY\"\n    },\n    \"logUrl\": \"https://console.cloud.google.com/gcr/builds/BUILD*ID?project=PROJECT*NUMBER\"\n    }\n  }\n}\n\nThis output includes the following values:\n\nPROJECT_ID: the project ID for the project that the image was imported into\nOPERATION_ID: the ID of the import operation\nBUILD_ID: the ID of the build for the import operation\nIMAGE_NAME: the name of the image to be imported\nSOURCE_FILE: the URI for the image in Cloud Storage—for example, gs://my-bucket/my-image.vmdk\nPROJECT_NUMBER: the number for the import project",
    "crumbs": [
      "Computer interfaces",
      "Placeholder formatting"
    ]
  },
  {
    "objectID": "content/en/computer-interfaces/code-samples.html",
    "href": "content/en/computer-interfaces/code-samples.html",
    "title": "Code samples",
    "section": "",
    "text": "Source: https://developers.google.com/style/code-samples\n\nThis page explains how to format code samples. For more information about formatting and explaining code that appears in text, command-line syntax, and placeholders, see the following resources:\n\nCode in text\nDocumenting command-line syntax\nFormatting placeholders\n\n\n\nFollow these guidelines when formatting code samples:\n\nFollow the indentation guidelines in the relevant code style guide. For most programming languages, that means using spaces instead of tabs and using two spaces for each indentation level. However, some contexts use four spaces for each indentation level, and some contexts use tabs.\n\nThis guidance applies to formatting code samples, not to formatting commands.\n\nWrap lines at 80 characters.\n\nIf you expect readers to have a relatively narrow browser window or to print out your document, consider wrapping at a smaller number of characters for readability.\n\nMark code blocks as preformatted text. In HTML, use a pre element; in Markdown, indent every line of the code block by four spaces.\nIndicate omitted code by using a comment in the syntax of the language of your code sample. Don’t use three dots or the ellipsis character (…). If a code block contains an omission, don’t format the block as click-to-copy.\n\n✅ Recommended:\n&lt;pre&gt;\nfunction helloWorld() {\n  alert('Hello, world! This sentence is so long that it wraps onto a second\n    line.');\n}\n&lt;/pre&gt;\nThis renders the following code block:\nfunction helloWorld() {\n  alert('Hello, world! This sentence is so long that it wraps onto a second\n    line.');\n}\n✅ Recommended:\napiVersion: serving.knative.dev/v1\nkind: Service\n# Several lines of code are omitted here.\nspec:\n template:\n spec:\n containers:\n - image: IMAGE_URL\n ports:\n - name: h2c\n containerPort: 8080\n\n\n\nIn most cases, precede a code sample with an introductory sentence or paragraph. The introduction can end with a colon or a period; usually a colon if it immediately precedes the sample, usually a period if there’s more material (such as a note paragraph) between the introduction and the sample, or if the introduction paragraph ends in a sentence that isn’t directly related to the sample.\nRecommended (ending with a period): The following code sample shows how to use the get method. For information about other methods, see [link]. [sample]\n\n✅ Also recommended: The following code sample shows how to use the get method: [sample] For information about other methods, see [link].\n\nNot recommended (ending with a colon): The following code sample shows how to use the get method. For information about other methods, see [link]: [sample]\nFor more information about how to introduce code samples, see Document command-line syntax.\n\n\n\nThe following public Google coding-style guides are available on GitHub:\n\nC++ style guide.\nHTML/CSS style guide.\nJava style guide.\nJavaScript style guide.\nPython style guide\nFull list of Google’s programming style guides\n\nSome open source projects have their own overriding style guides. For example, Java code in the Android Open Source Project follows the AOSP Java Code Style for Contributors guide.",
    "crumbs": [
      "Computer interfaces",
      "Code samples"
    ]
  },
  {
    "objectID": "content/en/computer-interfaces/code-samples.html#basic-guidelines",
    "href": "content/en/computer-interfaces/code-samples.html#basic-guidelines",
    "title": "Code samples",
    "section": "",
    "text": "Follow these guidelines when formatting code samples:\n\nFollow the indentation guidelines in the relevant code style guide. For most programming languages, that means using spaces instead of tabs and using two spaces for each indentation level. However, some contexts use four spaces for each indentation level, and some contexts use tabs.\n\nThis guidance applies to formatting code samples, not to formatting commands.\n\nWrap lines at 80 characters.\n\nIf you expect readers to have a relatively narrow browser window or to print out your document, consider wrapping at a smaller number of characters for readability.\n\nMark code blocks as preformatted text. In HTML, use a pre element; in Markdown, indent every line of the code block by four spaces.\nIndicate omitted code by using a comment in the syntax of the language of your code sample. Don’t use three dots or the ellipsis character (…). If a code block contains an omission, don’t format the block as click-to-copy.\n\n✅ Recommended:\n&lt;pre&gt;\nfunction helloWorld() {\n  alert('Hello, world! This sentence is so long that it wraps onto a second\n    line.');\n}\n&lt;/pre&gt;\nThis renders the following code block:\nfunction helloWorld() {\n  alert('Hello, world! This sentence is so long that it wraps onto a second\n    line.');\n}\n✅ Recommended:\napiVersion: serving.knative.dev/v1\nkind: Service\n# Several lines of code are omitted here.\nspec:\n template:\n spec:\n containers:\n - image: IMAGE_URL\n ports:\n - name: h2c\n containerPort: 8080",
    "crumbs": [
      "Computer interfaces",
      "Code samples"
    ]
  },
  {
    "objectID": "content/en/computer-interfaces/code-samples.html#introductory-statements",
    "href": "content/en/computer-interfaces/code-samples.html#introductory-statements",
    "title": "Code samples",
    "section": "",
    "text": "In most cases, precede a code sample with an introductory sentence or paragraph. The introduction can end with a colon or a period; usually a colon if it immediately precedes the sample, usually a period if there’s more material (such as a note paragraph) between the introduction and the sample, or if the introduction paragraph ends in a sentence that isn’t directly related to the sample.\nRecommended (ending with a period): The following code sample shows how to use the get method. For information about other methods, see [link]. [sample]\n\n✅ Also recommended: The following code sample shows how to use the get method: [sample] For information about other methods, see [link].\n\nNot recommended (ending with a colon): The following code sample shows how to use the get method. For information about other methods, see [link]: [sample]\nFor more information about how to introduce code samples, see Document command-line syntax.",
    "crumbs": [
      "Computer interfaces",
      "Code samples"
    ]
  },
  {
    "objectID": "content/en/computer-interfaces/code-samples.html#coding",
    "href": "content/en/computer-interfaces/code-samples.html#coding",
    "title": "Code samples",
    "section": "",
    "text": "The following public Google coding-style guides are available on GitHub:\n\nC++ style guide.\nHTML/CSS style guide.\nJava style guide.\nJavaScript style guide.\nPython style guide\nFull list of Google’s programming style guides\n\nSome open source projects have their own overriding style guides. For example, Java code in the Android Open Source Project follows the AOSP Java Code Style for Contributors guide.",
    "crumbs": [
      "Computer interfaces",
      "Code samples"
    ]
  }
]